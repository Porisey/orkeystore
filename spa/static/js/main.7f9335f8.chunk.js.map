{"version":3,"sources":["lib/errors/HttpResponseError.ts","lib/utils/fetch.ts","constants/settings.ts","lib/api/auth/login.ts","lib/api/auth/logout.ts","lib/api/auth/me.ts","lib/api/auth/account.ts","lib/api/auth/accounts.ts","lib/api/auth/index.ts","lib/api/auth/remove.ts","lib/api/index.ts","lib/api/keys/index.ts","lib/api/keys/list.ts","lib/api/keys/create.ts","lib/api/keys/remove.ts","lib/api/keys/storage.ts","lib/api/keys/archive.ts","lib/api/keys/restore.ts","lib/api/keys/preview.ts","lib/api/keys/byIds.ts","lib/api/repos/index.ts","lib/api/repos/create.ts","lib/api/repos/list.ts","lib/api/repos/remove.ts","constants/routes.ts","constants/mainMenu.ts","containers/Session/reducer.ts","containers/Accounts/reducer.ts","constants/pager.ts","containers/Repos/reducer.ts","containers/Storage/reducer.ts","containers/Keys/reducer.ts","containers/KeyPreview/reducer.ts","containers/KeyPreview/constants.ts","reducer.ts","containers/Session/saga.ts","containers/Keys/selectors.ts","containers/Keys/saga.ts","containers/Repos/selectors.ts","containers/Repos/saga.ts","saga.ts","store.ts","theme/palette.ts","theme/typography.ts","theme/overrides/index.ts","theme/overrides/MuiTableHead.ts","theme/overrides/MuiTableCell.ts","theme/overrides/MuiCardHeader.ts","theme/index.ts","containers/Session/selectors.ts","components/TopBar/styled.ts","containers/Session/hooks.ts","components/TopBar/index.tsx","layouts/AuthLayout/styled.ts","components/Message/styles.ts","components/Message/index.tsx","components/LoginForm/styled.ts","components/LoginForm/index.tsx","layouts/AuthLayout/index.tsx","components/ExpiredSession/index.tsx","components/MainMenu/index.tsx","layouts/DashboardLayout/styled.ts","layouts/DashboardLayout/index.tsx","lib/utils/generatePassword.ts","containers/Keys/hooks.ts","components/PopMenu/index.tsx","components/TextFieldWithOptions/index.tsx","components/KeyEntryForm/index.tsx","components/CopyBtn/index.tsx","components/UrlsList/index.tsx","components/ApproveModal/index.tsx","components/MessageTooltip/index.tsx","components/CodeFormat/index.tsx","containers/KeyPreview/hooks.ts","components/PrivateUrls/index.tsx","components/KeyItem/index.tsx","components/PerPageSelect/index.tsx","components/SearchInput/index.tsx","components/KeysList/index.tsx","containers/KeyPreview/selectors.ts","components/KeyPreview/index.tsx","pages/KeysPage/index.tsx","containers/Accounts/hooks.ts","components/AccountForm/index.tsx","containers/Accounts/selectors.ts","components/AccountItem/index.tsx","components/AccountsList/index.tsx","pages/AccountsPage/index.tsx","containers/Repos/hooks.ts","components/RepoItem/index.tsx","components/EntriesPicker/index.tsx","lib/utils/useAPIEffect.ts","components/RepositoryForm/index.tsx","components/ReposList/index.tsx","pages/ReposPage/index.tsx","containers/Storage/selectors.ts","components/StorageTable/index.tsx","containers/Storage/hooks.ts","components/StorageList/index.tsx","pages/StoragePage/index.tsx","pages/ArchivePage/index.tsx","routes.tsx","components/StartScreen/styles.ts","components/StartScreen/index.tsx","components/AuthGuard/index.tsx","index.tsx"],"names":["HttpRequestError","status","message","Object","setPrototypeOf","prototype","statusCode","this","Error","headers","prop","val","input","init","url","replace","processedInput","window","fetch","credentials","res","json","data","store","dispatch","sessionActions","setSessionExpired","isExpired","params","a","fetcher","removeHeader","localStorage","removeItem","fetchJson","method","body","JSON","stringify","result","setItem","setHeader","token","isLogout","rawAuth","getItem","parse","_params","remove","deleted","account","accounts","login","logout","me","auth","keys","list","page","perPage","search","isArchived","query","qs","archived","addQueryPrefix","create","key","id","toString","storage","archive","entry","restore","preview","isByEntry","targetUrl","byIds","ids","repos","created","ROUTES","MAIN_MENU_LINKS","path","name","title","icon","isAdminOnly","pureState","isUserAuthorized","isAlreadyFetched","isSessionExpired","mainMenuLinks","errors","loginForm","reducers","setUserData","state","action","payload","Boolean","defineMenuLinks","isAdmin","filter","item","undefined","fetchLoginUser","createAsyncThunk","api","fetchMe","fetchLogout","set","createSlice","initialState","extraReducers","builder","forEach","trigger","addCase","pending","fulfilled","hosts","privateHost","private","publicHost","public","rejected","error","parsedError","includes","code","actions","reducer","fetchCreateAccount","thunkApi","fetchAccountsList","fetchRemoveAccounts","loading","test","_action","DEFAULT_PAGE_OPTIONS","items","pager","pagerOptions","changePager","changeSearch","fetchListRepo","fetchCreateRepo","fetchRemoveRepos","changeFilter","fetchStorageItems","edit","reset","fetchCreateKey","fetchKeysList","fetchRemoveKeyItem","fetchArchiveKeyItem","fetchRestoreKeyItem","meta","arg","totalItems","toggleModal","isOpen","modal","setParams","fetchKeyPreview","_thunkApi","availFormats","label","availPrivacy","details","session","sessionReducer","keysReducer","accountsReducer","reposReducer","storageReducer","keyPreview","rootReducer","combineReducers","sagaSession","menuUpdate","fork","takeEvery","put","containerState","keysListSelector","createSelector","keysPagerSelector","keysSearchSelector","keysPagerOptionsSelector","isKeyListEmpty","length","keysRequestSelector","sagaKeys","reloadKeysList","keysActions","select","type","fetchParams","targetPage","Math","max","ceil","reposListSelector","pagerSelector","searchSelector","isEmptySelector","sagaRepos","reloadReposListAfterCreationOrDeletion","reposActions","reposSelectors","isCreation","newPage","mainSaga","sagaMiddleware","createSagaMiddleware","middleware","thunk","enhancer","applyMiddleware","createStore","composeWithDevTools","run","rootSaga","initializeStore","useAppDispatch","useDispatch","white","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","red","text","blueGrey","link","background","default","paper","divider","grey","typography","palette","h1","color","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiTableHead","root","backgroundColor","MuiTableCell","borderBottom","head","paddingTop","paddingBottom","MuiCardHeader","marginRight","marginTop","theme","createMuiTheme","overrides","host","privateHostSelector","publicHostSelector","Grow","styled","div","useContainerSession","useCallback","useHooks","TopBar","user","useSelector","sessionSelectors","isLogoutAvail","AppBar","position","Toolbar","Typography","variant","Button","onClick","Wrap","BarHolder","FormHolder","Root","Paper","Message","TextWrap","Box","props","elevation","children","defaultProps","severnity","Container","Body","BodyLine","LineItem","SubmitButton","initialValues","username","password","handleSubmit","values","validate","LoginForm","serverErrors","userServerErrors","Card","CardHeader","CardContent","onSubmit","_props","field","TextField","touched","autoComplete","size","AuthLayout","ExpiredSession","Dialog","open","useStyles","makeStyles","iconWrap","maxWidth","minWidth","MainMenu","history","useHistory","mainMenu","styles","List","component","map","ListItem","push","ListItemIcon","className","Icon","ListItemText","Header","Menu","Main","DashboardLayout","route","routes","renderRoutes","generatePassword","charset","retVal","i","n","charAt","floor","random","useContainerKeys","keysSelectors","fetchKeysListWatch","fetchArchiveListWatch","accessToken","requestKeysList","requestKeysByIds","resetList","menuStaticProps","useMemo","anchorOrigin","horizontal","vertical","transformOrigin","menu","width","PopMenu","keepMounted","anchorEl","onClose","handleClose","MenuItem","onSelectMenuItem","TextFieldWithOptions","currentMenuLabel","fieldProps","inputProps","disabled","React","useState","setAnchorEl","fullWidth","InputProps","endAdornment","InputAdornment","beforeOptions","event","currentTarget","afterOptions","unitOptions","h","d","w","m","defaultInitialValues","rotation","unit","rotatable","menuItems","formikHelpers","errorResult","setErrors","server","isNaN","parseInt","digitMask","Inputmask","regex","String","raw","codeMask","textfield","progress","marginLeft","KeyEntryForm","style","formikProps","isSubmitting","Grid","container","spacing","xs","inputRef","el","mask","isEnabled","setFieldValue","FormControlLabel","control","Checkbox","checked","value","onChange","_","alignItems","flexGrow","disableElevation","CircularProgress","isCopied","setCopied","handleCopy","current","document","execCommand","handleCloseSnack","CopyBtn","Snackbar","autoHideDuration","Alert","severity","IconButton","handleFocus","target","inputRefs","createRef","padding","UrlsList","onFocus","isPrivate","ApproveModal","toggleDialog","DialogTitle","content","DialogContent","DialogActions","autoFocus","HtmlTooltip","withStyles","tooltip","pxToRem","border","Tooltip","MessageTooltip","pre","display","overflowX","height","whiteSpace","CodeFormat","useContainerPreviewKey","keyPreviewActions","setPreviewParams","openKeyPreview","apiParams","previewParams","KEY_FORMATS","formatId","setFormat","format","find","keysHost","urlRef","useRef","accessRef","handleSetFormat","handleOpenPreviewModal","privacy","exampleMessage","justifyContent","PrivateUrls","accessCode","Link","rotateInterval","publicUrls","deleteItem","archiveItem","restoreItem","moment","duration","humanize","privateWrap","marginBottom","opacity","codeHolder","textAlign","KeyItem","justify","Divider","Accordion","AccordionSummary","expandIcon","placement","gutterBottom","AccordionDetails","CardActions","archivedAt","onSelect","handleChange","e","PerPageSelect","options","Select","onThrottledChange","restProps","InputPropsMemo","startAdornment","throttledChange","debounce","SearchInput","isFormOpened","toggleForm","handleModalToggle","handlePagerChange","_event","handleChangePerPage","handleChangeSearch","pagerHolder","searchHolder","wrap","noItems","KeysList","isEmpty","startIcon","defaultValue","placeholder","totalPages","Pagination","count","KeyPreview","keyData","keyInputRef","formatsBtnRef","privacyBtnRef","targetKey","isFormatsMenuOpen","isPrivacyMenuOpen","handleFormatsMenuClose","handleFormatsMenuOpen","handlePrivacyMenuClose","handlePrivacyMenuOpen","handleFormatsMenuItemSelect","handlePrivacyMenuItemSelect","handleDialogClose","formatString","toUpperCase","privacyString","activatesAt","unix","expiresAt","ref","copyHolder","readOnly","keyInput","KeyPreviewModal","modalState","keyPreviewSelectors","toggleFormatsMenu","togglePrivacyMenu","publicKey","privateKey","targetKeys","pem","jwk","togglePreviewModal","overflow","left","top","useEffect","req","abort","KeysPage","useContainerAccounts","accountsActions","admin","AccountForm","accountsListSelector","deleteAccount","AccountItem","AccountsList","accountsData","AccountsPage","useContainerRepos","createNewRepo","fetchListRepoWatch","deleteRepos","contentItems","contentItem","RepoItem","entries","Chip","pickedSet","onUpdate","picked","pickItems","setOptions","pickedDetails","changePickedDetails","searchParams","useUpdatePickedSetFromProps","useGetPickedDetails","useFetchOptions","handleChangeItem","newItems","concat","handleSearchChange","s","scrollBar","topDivider","newDetails","requestTargets","func","onSuccess","onError","fetchList","onComplete","isUnmounted","then","catch","err","EntriesPicker","edge","disableRipple","description","keyTitle","marginBotton","paddingLeft","keyError","RepositoryForm","ReposList","repo","ReposPage","storageItems","storagePager","storageFilter","storagePagerOptions","entryName","handleOpenKeyPreview","StorageTable","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","now","expMoment","expUnix","activateMoment","activateUnix","currentStatus","isBefore","isAfter","kid","kty","alg","useContainerStorage","storageSelectors","storageActions","fetchStorageItemsWatcher","maxPage","min","handleChangeFilterEntryName","StorageList","TablePagination","rowsPerPageOptions","onChangePage","rowsPerPage","onChangeRowsPerPage","StoragePage","ArchivePage","exact","to","StartScreen","isComplete","AuthGuard","location","useLocation","storeData","createStructuredSelector","userStateSelectors","pathname","targetNode","getElementById","createBrowserHistory","ReactDOM","render","CssBaseline","ThemeProvider"],"mappings":"2bAKaA,EAAb,kDACE,WAAoBC,EAAuBC,GAAkB,IAAD,8BAC1D,cAAMA,IADYD,SAAwC,EAAjBC,UAEzCC,OAAOC,eAAPD,OAAA,IAAAA,CAAA,GAA4BH,EAAiBK,WAFa,EAD9D,sDAOI,MAAO,CACLC,WAAYC,KAAKN,OACjBC,QAASK,KAAKL,aATpB,eAAsCM,QC8EvB,M,WAxEb,WAAYC,GAAmC,yBAF/CA,aAE8C,EAC5CF,KAAKE,QAAUA,GAAW,G,sDAGlBC,EAAcC,GACtBJ,KAAKE,QAAL,2BACKF,KAAKE,SADV,kBAEGC,EAAOC,M,mCAICD,GACPH,KAAKE,gBACAF,KAAKE,QAAQC,K,qEAIZE,EAAoBC,G,+EAGT,kBAAVD,GACTA,EAAME,IAAIC,QAAQ,QC/BkC,IDiCpDC,EAAc,2BACTJ,GADS,IAEZE,IAAKF,EAAME,OAGbE,EAAiBJ,EAAMG,QAAQ,QCtCqB,IDyChDN,E,yBACJ,eAAgB,oBACbF,KAAKE,S,OACLI,Q,IAAAA,O,EAAAA,EAAMJ,S,kBAGJQ,OAAOC,MAAMF,EAAb,yBACLG,YAAa,WACVN,GAFE,IAGLJ,c,kLAKFG,EACAC,G,kGAGoBN,KAAKW,MAAMN,EAAOC,G,aAA9BO,E,QAEEnB,OAAS,K,iCACDmB,EAAIC,O,iEAEED,EAAIC,O,cAAlBC,E,OACA,IAAItB,EAAiBsB,EAAKhB,WAAYgB,EAAKpB,S,+DAG/C,gBAAeF,G,sBACT,KAAIC,O,OACL,M,gCACHsB,GAAMC,SAASC,GAAeC,kBAAkB,CAAEC,WAAW,K,mKErEzE,yCAAe,WAAOC,GAAP,eAAAC,EAAA,6DACbC,EAAQC,aAAR,iBACAC,aAAaC,WAAW,QAFX,SAIQH,EAAQI,UAC3B,mBACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUV,KARZ,cAIPW,EAJO,UAcXP,aAAaQ,QAAQ,OAAQH,KAAKC,UAAUC,IAC5CT,EAAQW,UAAR,iCAA6CF,EAAOG,SAfzC,kBAkBNH,GAlBM,2CAAf,sDCCA,wBAAe,sBAAAV,EAAA,6DACbC,EAAQC,aAAR,iBACAC,aAAaC,WAAW,QAFX,kBAGN,CAAEU,UAAU,IAHN,2CCCf,wBAAe,8BAAAd,EAAA,yDAGG,QAFVe,EAAUZ,aAAaa,QAAQ,SADxB,sBAIL,IAAI7C,EAAiB,IAAK,mBAJrB,cAQPuC,EAA8BF,KAAKS,MAAMF,GAC/Cd,EAAQW,UAAR,iCAA6CF,EAAOG,QATvC,kBAWNH,GAXM,2CCFf,yCAAe,WAAOX,GAAP,eAAAC,EAAA,sEACQC,EAAQI,UAC3B,qBACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUV,KALZ,cACPW,EADO,yBASNA,GATM,2CAAf,sDCAA,yCAAe,WAAOQ,GAAP,eAAAlB,EAAA,sEACQC,EAAQI,UAC3B,sBACA,CACEC,OAAQ,QAJC,cACPI,EADO,yBAQNA,GARM,2CAAf,sDCIe,GACbS,OCLF,uCAAe,WAAOpB,GAAP,eAAAC,EAAA,sEACQC,EAAQI,UAC3B,sBACA,CACEC,OAAQ,SACRC,KAAMC,KAAKC,UAAUV,KALZ,cACPW,EADO,yBASNA,EAAS,CAAEU,QAASV,GAAW,MATzB,2CAAf,sDDMEW,UACAC,WACAC,QACAC,SACAC,M,iBETa,GACbC,OACAC,KCGa,CACbC,KCMF,sBAAe,oDAAA5B,EAAA,6DAAOD,EAAP,+BAAoC,GACzC8B,EAAsC9B,EAAtC8B,KAAMC,EAAgC/B,EAAhC+B,QAASC,EAAuBhC,EAAvBgC,OAAQC,EAAejC,EAAfiC,WACzBC,EAAQC,IAAGzB,UAAU,CAAEoB,OAAMC,UAASC,SAAQI,SAAUH,EAAa,EAAI,GAAK,CAAEI,gBAAgB,IAFzF,SAIQnC,EAAQI,UAAR,0BACA4B,GACnB,CACE3B,OAAQ,QAPC,cAIPI,EAJO,yBAWNA,GAXM,2CDLb2B,OERF,uCAAe,WAAOtC,GAAP,eAAAC,EAAA,sEACQC,EAAQI,UAC3B,qBACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUV,KALZ,cACPW,EADO,yBASN,CAAE4B,IAAK5B,IATD,2CAAf,sDFSES,OGTF,uCAAe,WAAOpB,GAAP,eAAAC,EAAA,sEACQC,EAAQI,UAAR,sBACJN,EAAOwC,GAAGC,YACzB,CACElC,OAAQ,WAJC,cACPI,EADO,yBAQN,CAAEU,QAASV,IARL,2CAAf,sDHUE+B,QIIF,uCAAe,WAAO1C,GAAP,eAAAC,EAAA,6DACPiC,EAAQC,IAAGzB,UAAUV,EAAQ,CAAEqC,gBAAgB,IADxC,SAEAnC,EAAQI,UAAR,2BAA6D4B,GAAS,CACjF3B,OAAQ,QAHG,mFAAf,sDJHEoC,QKHF,uCAAe,WAAO3C,GAAP,eAAAC,EAAA,sEACQC,EAAQI,UAAR,8BACIN,EAAOwC,GAAGC,YACjC,CACElC,OAAQ,SAJC,cACPI,EADO,yBAQN,CAAEiC,MAAOjC,IARH,2CAAf,sDLIEkC,QMJF,uCAAe,WAAO7C,GAAP,eAAAC,EAAA,sEACQC,EAAQI,UAAR,8BACIN,EAAOwC,GAAGC,YACjC,CACElC,OAAQ,SAJC,cACPI,EADO,yBAQN,CAAEiC,MAAOjC,IARH,2CAAf,sDNKEmC,QODF,uCAAe,WAAO9C,GAAP,mBAAAC,EAAA,6DACLuC,EAAkBxC,EAAlBwC,GAAIO,EAAc/C,EAAd+C,UACNC,EAAYD,EAAS,4BAAwBP,EAAGC,YAA3B,oBAAuDD,EAAGC,YAFxE,SAGAvC,EAAQI,UAAiC0C,GAHzC,mFAAf,sDPEEC,MQLF,uCAAe,WAAOjD,GAAP,mBAAAC,EAAA,6DACLiD,EAAQlD,EAARkD,IACFhB,EAAQC,IAAGzB,UAAU,CAAEwC,OAAO,CAAEb,gBAAgB,IAFzC,SAIQnC,EAAQI,UAAR,2BAA2D4B,GAAS,CACvF3B,OAAQ,QALG,cAIPI,EAJO,yBAQNA,GARM,2CAAf,uDTLEwC,MUHa,CACbb,OCFiB,uCAAG,WACpBtC,GADoB,eAAAC,EAAA,sEAGCC,EAAQI,UAA4C,oBAAqB,CAC5FC,OAAQ,OACRC,KAAMC,KAAKC,UAAUV,KALH,cAGdW,EAHc,yBAQbA,EAAS,CAAEyC,QAASzC,GAAW,MARlB,2CAAH,sDDGjBkB,KEEe,uCAAG,4CAAA5B,EAAA,6DAAOD,EAAP,+BAAqC,GACjDkC,EAAQC,IAAGzB,UAAUV,EAAQ,CAAEqC,gBAAgB,IADnC,SAEGnC,EAAQI,UAAR,yBAAyD4B,IAF5D,cAEZvB,EAFY,yBAGXA,GAHW,2CAAH,qDFDfS,OGJiB,uCAAG,WAAOpB,GAAP,eAAAC,EAAA,sEACCC,EAAQI,UAA4C,oBAAqB,CAC5FC,OAAQ,SACRC,KAAMC,KAAKC,UAAUV,KAHH,cACdW,EADc,yBAMb,CAAEU,QAASV,GAAkB,KANhB,2CAAH,wDCHN0C,EACL,QADKA,EAEC,cAFDA,EAGA,aAHAA,EAKD,sBALCA,EAML,kBANKA,EAOJ,mBAPIA,EAQF,qBAREA,EASF,qBCPEC,EAAkB,CAC7B,CAAEd,GAAI,EAAGe,KAAMF,EAAcG,KAAM,OAAQC,MAAO,cAAeC,KAAM,UAAWC,aAAa,GAC/F,CAAEnB,GAAI,EAAGe,KAAMF,EAAiBG,KAAM,UAAWC,MAAO,gBAAiBC,KAAM,YAAaC,aAAa,GACzG,CAAEnB,GAAI,EAAGe,KAAMF,EAAcG,KAAM,QAASC,MAAO,eAAgBC,KAAM,OAAQC,aAAa,GAC9F,CAAEnB,GAAI,EAAGe,KAAMF,EAAiBG,KAAM,UAAWC,MAAO,UAAWC,KAAM,QAASC,aAAa,ICQ3FC,EAA2B,CAC/BC,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,EAClBC,cAAe,GACfC,OAAQ,CACNC,UAAW,OAKTC,EAAW,CACfC,YAAa,SAACC,EAAUC,GAAwC,IAAD,EAClCA,EAAOC,QAA1BzD,EADqD,EACrDA,MAAOQ,EAD8C,EAC9CA,QAEf,OAAO,2BACF+C,GADL,IAEEvD,QACAQ,UACAuC,iBAAkBW,QAAQ1D,MAG9B2D,gBAAiB,SAACJ,GAAiB,IAAD,EAC1BK,EAAUF,QAAO,UAACH,EAAM/C,eAAP,aAAC,EAAeoD,SACjCV,EAAgBV,EAAgBqB,QAAO,SAACC,GAC5C,OAAOF,IAAYE,EAAKjB,eAG1B,OAAO,2BACFU,GADL,IAEEL,mBAGJlE,kBAAmB,SAACuE,EAAUC,GAC5B,OAAID,EAAMR,iBACD,2BACFQ,GADL,IAEEN,iBAAkBO,EAAOC,QAAQxE,YAG5B,2BACFsE,GADL,IAEEvD,WAAO+D,EACPhB,kBAAkB,MAOpBiB,EAAiBC,YAAiB,GAAD,OApDxB,UAoDwB,qDAErC,WAAO/E,GAAP,SAAAC,EAAA,sEACe+E,EAAIrD,KAAKH,MAAMxB,GAD9B,mFAFqC,uDAOjCiF,EAAUF,YAAiB,GAAD,OA3DjB,UA2DiB,iCAE9B,sBAAA9E,EAAA,sEACe+E,EAAIrD,KAAKD,KADxB,oFAKIwD,EAAcH,YAAiB,GAAD,OAlErB,UAkEqB,qCAElC,sBAAA9E,EAAA,sEACe+E,EAAIrD,KAAKF,SADxB,oFAMI0D,GAAMC,YAAwC,CAClDC,aAAczB,EACdJ,KA5Ea,UA6EbW,WACAmB,cAAe,SAACC,GACd,CAACT,EAAgBG,GAASO,SAAQ,SAACC,GACjCF,EAAQG,QAAQD,EAAQE,SAAS,SAACtB,GAChC,OAAO,2BACFA,GADL,IAEEJ,OAAO,2BACFI,EAAMJ,QADL,IAEJC,UAAW,YAKjBqB,EAAQG,QAAQD,EAAQG,WAAW,SAACvB,EAAOC,GAAY,IAAD,EAClBA,EAAOC,QAAjCzD,EAD4C,EAC5CA,MAAOQ,EADqC,EACrCA,QAASuE,EAD4B,EAC5BA,MACxB,OAAO,2BACFxB,GADL,IAEEvD,QACAQ,UACAuC,iBAAkBW,QAAQ1D,GAC1BiD,kBAAkB,EAClBD,kBAAkB,EAClBgC,YAAaD,EAAME,QACnBC,WAAYH,EAAMI,YAItBV,EAAQG,QAAQD,EAAQS,UAAU,SAAC7B,EAAOC,GAAY,IAAD,EAC3C6B,EAAU7B,EAAV6B,MACR,QAActB,IAAVsB,EACF,OAAO9B,EAGT,IAAM+B,GAAc,UAAAD,EAAM7H,eAAN,eAAe+H,SAAS,oBACxC,GACA,CACEnC,UACiB,QAAfiC,EAAMG,KACF,mCACA,8BAGZ,OAAO,2BACF1C,GADL,IAEEE,kBAAkB,EAClBG,OAAO,2BACFI,EAAMJ,QACNmC,WAMXb,EAAQG,QAAQR,EAAYU,WAAW,SAACvB,GACtC,OAAO,2BACFA,GADL,IAEEvD,WAAO+D,EACPhB,kBAAkB,UAMb0C,GAAO,2BACfpB,GAAIoB,SADW,IAElBzB,iBACAI,cACAD,YAGauB,GAAYrB,GAAZqB,QCxITC,GAAqB1B,YAAiB,GAAD,OAV5B,WAU4B,0DAEzC,WAAO/E,EAA+B0G,GAAtC,eAAAzG,EAAA,sEACuB+E,EAAIrD,KAAKL,QAAQtB,GADxC,cACQW,EADR,gBAEQ+F,EAAS9G,SAAS+G,MAF1B,gCAGShG,GAHT,2CAFyC,yDASrCiG,GAAsB7B,YAAiB,GAAD,OAnB7B,WAmB6B,2DAE1C,WAAO/E,EAA8B0G,GAArC,eAAAzG,EAAA,sEACuB+E,EAAIrD,KAAKP,OAAOpB,GADvC,cACQW,EADR,gBAEQ+F,EAAS9G,SAAS+G,MAF1B,gCAGShG,GAHT,2CAF0C,yDAStCgG,GAAoB5B,YAAiB,GAAD,OA5B3B,WA4B2B,qCAExC,4BAAA9E,EAAA,sEACuB+E,EAAIrD,KAAKJ,WADhC,cACQZ,EADR,yBAESA,GAFT,4CAOIwE,GAAMC,YAAwC,CAClDC,aAAc,CACZ/C,OAAQ,CACN6D,MAAO,KACPU,SAAS,GAEXhF,KAAM,CACJsE,MAAO,KACPU,SAAS,EACTtF,SAAU,KAGdiC,KAjDa,WAkDbW,SA/Ce,CACf2C,KAAM,SAACzC,EAAU0C,GACf,OAAO1C,IA8CTiB,cAAe,SAACC,GACdA,EAAQG,QAAQe,GAAmBb,WAAW,SAACvB,EAAOC,GACpD,OAAuB,OAAnBA,EAAOC,QACF,2BAAKF,GAAZ,IAAmB/B,OAAO,2BAAM+B,EAAM/B,QAAb,IAAqB6D,OAAO,EAAMU,SAAS,MAE/D,2BAAKxC,GAAZ,IAAmB8B,MAAO,KAAMU,SAAS,OAE3CtB,EAAQG,QAAQiB,GAAkBf,WAAW,SAACvB,EAAOC,GACnD,GAAuB,OAAnBA,EAAOC,QACT,OAAO,2BAAKF,GAAZ,IAAmBxC,KAAK,2BAAMwC,EAAMxC,MAAb,IAAmBsE,OAAO,EAAMU,SAAS,EAAOtF,SAAU,OAFrB,IAKtDA,EAAa+C,EAAOC,QAApBhD,SAER,OAAO,2BAAK8C,GAAZ,IAAmBxC,KAAK,2BAAMwC,EAAMxC,MAAb,IAAmBsE,MAAO,KAAMU,SAAS,EAAOtF,qBAKhEgF,GAAO,2BACfpB,GAAIoB,SADW,IAElBE,sBACAE,qBACAC,yBAGaJ,GAAYrB,GAAZqB,QC1FFQ,GAAuB,CAAC,EAAG,EAAG,ICkBrCpD,GAAe,CACnBtB,OAAQ,CACN6D,MAAO,KACPU,SAAS,GAEXhF,KAAM,CACJsE,MAAO,KACPU,SAAS,EACTI,MAAO,GACPC,MAAO,CACLpF,KAAM,EACNC,QAASiF,GAAqB,IAEhCG,aAAcH,KAKZ7C,GAAW,CACfiD,YAAa,SAAC/C,EAAUC,GACtB,OAAO,2BACFD,GADL,IAEExC,KAAK,2BACAwC,EAAMxC,MADP,IAEFqF,MAAM,2BACD7C,EAAMxC,KAAKqF,OACX5C,EAAOC,cAKlB8C,aAAc,SAAChD,EAAUC,GACvB,OAAO,2BACFD,GADL,IAEExC,KAAK,2BACAwC,EAAMxC,MADP,IAEFG,OAAQsC,EAAOC,QAAQvC,aAOzBsF,GAAgBvC,YAAiB,GAAD,OA7CvB,QA6CuB,sDAEpC,WAAO/E,GAAP,SAAAC,EAAA,sEACe+E,EAAI7B,MAAMtB,KAAK7B,GAD9B,mFAFoC,uDAOhCuH,GAAkBxC,YAAiB,GAAD,OApDzB,QAoDyB,uDAEtC,WAAO/E,GAAP,eAAAC,EAAA,sEACuB+E,EAAI7B,MAAMb,OAAOtC,GADxC,cACQW,EADR,yBAESA,GAFT,2CAFsC,uDAQlC6G,GAAmBzC,YAAiB,GAAD,OA5D1B,QA4D0B,wDAEvC,WAAO/E,GAAP,eAAAC,EAAA,sEACuB+E,EAAI7B,MAAM/B,OAAOpB,GADxC,cACQW,EADR,yBAESA,GAFT,2CAFuC,uDASnCwE,GAAMC,YAAwC,CAClDC,aAAczB,GACdJ,KAvEa,QAwEbW,YACAmB,cAAe,SAACC,GACdA,EAAQG,QAAQ6B,GAAgB3B,WAAW,SAACvB,EAAOC,GACjD,OAAuB,OAAnBA,EAAOC,QACF,2BAAKF,GAAZ,IAAmB/B,OAAO,2BAAM+B,EAAM/B,QAAb,IAAqB6D,OAAO,EAAMU,SAAS,MAE/D,2BAAKxC,GAAZ,IAAmB8B,MAAO,KAAMU,SAAS,OAG3CtB,EAAQG,QAAQ4B,GAAc1B,WAAW,SAACvB,EAAOC,GAC/C,OAAO,2BACFD,GADL,IAEExC,KAAK,2BACAwC,EAAMxC,MADP,IAEFsE,MAAO,KACPU,SAAS,EACTI,MAAO3C,EAAOC,QAAQ0C,MACtBC,MAAO5C,EAAOC,QAAQ2C,gBAOnBX,GAAO,2BACfpB,GAAIoB,SADW,IAElBgB,mBACAD,iBACAE,sBAGahB,GAAYrB,GAAZqB,QCjGTrC,GAAW,CACfiD,YAAa,SAAC/C,EAAUC,GACtB,OAAO,2BACFD,GADL,IAEE6C,MAAM,2BACD7C,EAAM6C,OACN5C,EAAOC,YAIhBkD,aAAc,SAACpD,EAAUC,GACvB,OAAO,2BACFD,GADL,IAEE6C,MAAM,2BACD7C,EAAM6C,OADN,IAEHpF,KAAM,IAER6C,OAAO,2BACFN,EAAMM,QACNL,EAAOC,aAOZmD,GAAoB3C,YAAiB,GAAD,OAvC3B,UAuC2B,yDAExC,WAAO/E,GAAP,SAAAC,EAAA,sEACe+E,EAAIpD,KAAKc,QAAQ1C,GADhC,mFAFwC,uDAQpCmF,GAAMC,YAAwC,CAClDC,aA9CmB,CACnB4B,MAAO,GACPC,MAAO,CACLpF,KAAM,EACNC,QAAS,IAEXoF,aAAc,CAAC,GAAI,GAAI,IACvBxC,OAAQ,IAwCRnB,KAjDa,UAkDbW,YACAmB,cAAe,SAACC,GACdA,EAAQG,QAAQgC,GAAkB9B,WAAW,SAACvB,EAAOC,GAAY,IAAD,EACrCA,EAAOC,QAAxB0C,EADsD,EACtDA,MAAOC,EAD+C,EAC/CA,MAEf,OAAO,2BACF7C,GADL,IAEE4C,QACAC,gBAMKX,GAAO,2BACfpB,GAAIoB,SADW,IAElBmB,uBAGalB,GAAYrB,GAAZqB,QC3DT5C,GAAe,CACnB/B,KAAM,CACJgF,QAAS,CACPjF,MAAM,GAERqC,OAAQ,CACNrC,KAAM,MAERqF,MAAO,GACPC,MAAO,CACLpF,KAAM,EACNC,QAAS,GAEXoF,aAAcH,IAEhBW,KAAM,CACJd,SAAS,EACTV,MAAO,OAKLhC,GAAW,CACfiD,YAAa,SAAC/C,EAAUC,GACtB,OAAO,2BACFD,GADL,IAEExC,KAAK,2BACAwC,EAAMxC,MADP,IAEFqF,MAAM,2BACD7C,EAAMxC,KAAKqF,OACX5C,EAAOC,cAKlB8C,aAAc,SAAChD,EAAUC,GACvB,OAAO,2BACFD,GADL,IAEExC,KAAK,2BACAwC,EAAMxC,MADP,IAEFK,MAAOoC,EAAOC,QAAQvC,OACtBkF,MAAM,2BACD7C,EAAMxC,KAAKqF,OADX,IAEHpF,KAAM,SAKd8F,MAAO,kBAAMhE,KAITiE,GAAiB9C,YAAiB,GAAD,OAtDxB,OAsDwB,sDAErC,WAAO/E,GAAP,eAAAC,EAAA,sEACuB+E,EAAIpD,KAAKU,OAAOtC,GADvC,cACQW,EADR,yBAGSA,GAHT,2CAFqC,uDASjCmH,GAAgB/C,YAAiB,GAAD,OA/DvB,OA+DuB,sDAEpC,WAAO/E,GAAP,SAAAC,EAAA,sEACe+E,EAAIpD,KAAKC,KAAK7B,GAD7B,mFAFoC,uDAOhC+H,GAAqBhD,YAAiB,GAAD,OAtE5B,OAsE4B,sDAEzC,WAAO/E,GAAP,eAAAC,EAAA,sEACuB+E,EAAIpD,KAAKR,OAAOpB,GADvC,cACQW,EADR,yBAESA,GAAkB,CAAEU,QAAS,KAFtC,2CAFyC,uDAQrC2G,GAAsBjD,YAAiB,GAAD,OA9E7B,OA8E6B,uDAE1C,WAAO/E,GAAP,SAAAC,EAAA,sEACe+E,EAAIpD,KAAKe,QAAQ3C,GADhC,mFAF0C,uDAOtCiI,GAAsBlD,YAAiB,GAAD,OArF7B,OAqF6B,uDAE1C,WAAO/E,GAAP,SAAAC,EAAA,sEACe+E,EAAIpD,KAAKiB,QAAQ7C,GADhC,mFAF0C,uDAQtCmF,GAAMC,YAAwC,CAClDC,aAAczB,GACdJ,KA/Fa,OAgGbW,YACAmB,cAAe,SAACC,GACdA,EAAQG,QACNoC,GAAcnC,SACd,SAACtB,GACC,OAAO,2BAAKA,GAAZ,IAAmBxC,KAAK,2BAAMwC,EAAMxC,MAAb,IAAmBgF,QAAQ,2BAAKxC,EAAMxC,KAAKgF,SAAjB,IAA0BjF,MAAM,WAGrF2D,EAAQG,QACNoC,GAAclC,WACd,SAACvB,EAAOC,GAAe,IAAD,EACKA,EAAOC,QAAxB0C,EADY,EACZA,MAAOC,EADK,EACLA,MACf,OAAO,2BAAK7C,GAAZ,IAAmBxC,KAAK,2BAAMwC,EAAMxC,MAAb,IAAmBoF,QAAOC,QAAOL,QAAQ,2BAAKxC,EAAMxC,KAAKgF,SAAjB,IAA0BjF,MAAM,WAInG2D,EAAQG,QACNqC,GAAmBnC,WACnB,SAACvB,EAAOC,GAAe,IACb9B,EAAO8B,EAAO4D,KAAKC,IAAnB3F,GACA4F,EAAe/D,EAAMxC,KAAKqF,MAA1BkB,WAER,OAAO,2BACF/D,GADL,IAEExC,KAAK,2BACAwC,EAAMxC,MADP,IAEFoF,MAAO5C,EAAMxC,KAAKoF,MAAMtC,QAAO,SAACC,GAAD,OAAUpC,IAAOoC,EAAKpC,MACrD0E,MAAM,2BAAM7C,EAAMxC,KAAKqF,OAAlB,IAAyBkB,WAAYA,EAAaA,EAAa,OAAIvD,WAMhFU,EAAQG,QACNsC,GAAoBpC,WACpB,SAACvB,GAAc,IACL+D,EAAe/D,EAAMxC,KAAKqF,MAA1BkB,WAER,OAAO,2BACF/D,GADL,IAEExC,KAAK,2BACAwC,EAAMxC,MADP,IAEFqF,MAAM,2BAAM7C,EAAMxC,KAAKqF,OAAlB,IAAyBkB,WAAYA,EAAaA,EAAa,OAAIvD,WAMhFU,EAAQG,QACNuC,GAAoBrC,WACpB,SAACvB,GAAc,IACL+D,EAAe/D,EAAMxC,KAAKqF,MAA1BkB,WAER,OAAO,2BACF/D,GADL,IAEExC,KAAK,2BACAwC,EAAMxC,MADP,IAEFqF,MAAM,2BAAM7C,EAAMxC,KAAKqF,OAAlB,IAAyBkB,WAAYA,EAAaA,EAAa,OAAIvD,WAMhFU,EAAQG,QACNmC,GAAejC,WACf,SAACvB,EAAOC,GAAe,IACb8D,EAAe/D,EAAMxC,KAAKqF,MAA1BkB,WACR,OAAO,2BACF/D,GADL,IAEExC,KAAK,2BACAwC,EAAMxC,MADP,IAEFqF,MAAM,2BACD7C,EAAMxC,KAAKqF,OADX,IAEHkB,WAAYA,EAAaA,EAAa,OAAIvD,MAG9C8C,KAAK,2BAAMtD,EAAMsD,MAAb,IAAmBxB,OAAO,EAAMU,SAAS,EAAOjC,KAAMN,EAAOC,QAAQhC,cAOtEgE,GAAO,2BACfpB,GAAIoB,SADW,IAElBuB,iBACAC,sBACAC,uBACAC,uBACAJ,oBAGarB,GAAYrB,GAAZqB,QClMTrC,GAAW,CACfkE,YAAa,SAAChE,EAAUC,GAAyC,IACvDgE,EAAWhE,EAAOC,QAAlB+D,OAER,OAAO,2BACFjE,GADL,IAEEkE,MAAM,2BACDlE,EAAMkE,OADN,IAEHD,YAAmBzD,IAAXyD,GAAwBjE,EAAMkE,MAAMD,OAASA,OAI3DE,UAAW,SAACnE,EAAUC,GACpB,OAAO,2BACFD,GADL,IAEErE,OAAO,2BACFqE,EAAMrE,QACNsE,EAAOC,aAOZkE,GAAkB1D,YAAiB,GAAD,OA3BzB,cA2ByB,qDAEtC,WAAO/E,EAA+B0I,GAAtC,eAAAzI,EAAA,sEACuB+E,EAAIpD,KAAKkB,QAAQ9C,GADxC,cACQW,EADR,yBAESA,GAFT,2CAFsC,yDASlCwE,GAAMC,YAAwC,CAClDC,aAAc,CACZsD,aC9CiC,CACnC,CAAEnG,GAAI,MAAOoG,MAAO,OACpB,CAAEpG,GAAI,MAAOoG,MAAO,QD6ClBC,aC1CyB,CAC3B,CAAErG,GAAI,UAAWoG,MAAO,WACxB,CAAEpG,GAAI,SAAUoG,MAAO,WDyCrB5I,OAAQ,GACRuI,MAAO,GACPO,QAAS,CACP3C,MAAO,KACPU,SAAS,IAGbrD,KA/Ca,cAgDbW,YACAmB,cAAe,SAACC,GACdA,EAAQG,QAAQ+C,GAAgB7C,WAAW,SAACvB,EAAOC,GACjD,OAAO,2BACFD,GADL,IAEEyE,QAAQ,2BACHzE,EAAMyE,SADJ,IAEL3C,MAAO,KACPU,SAAS,EACTnH,KAAM4E,EAAOC,kBAOVgC,GAAO,2BACfpB,GAAIoB,SADW,IAElBkC,qBElEItE,GAAW,CACf4E,QAASC,GACTpH,KAAMqH,GACN1H,SAAU2H,GACV/F,MAAOgG,GACPzG,QAAS0G,GACTC,WF+DyBlE,GAAZqB,SExDA8C,GAJKC,0BAAgBpF,I,qBCdnBqF,I,YAIPC,IAJH,SAAUD,KAAV,iEACL,OADK,SACCE,aAAKD,IADN,wCAIP,SAAUA,KAAV,iEACE,OADF,SACQE,aAAU,CACdpD,GAAQzB,eAAec,UACvBW,GAAQtB,QAAQW,WAFH,UAGZ,8EACD,OADC,SACKgE,aAAIrD,GAAQ9B,mBADjB,2CAJL,wC,aCHaoF,GAAiB,SAACxF,GAAD,OAA+BA,EAAMzC,MAEtDkI,IADoBC,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMxC,KAAKoF,SACtD8C,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMxC,SACnEmI,GAAoBD,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMxC,KAAKqF,SACzE+C,GAAqBF,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMxC,KAAKK,SAC1EgI,GAA2BH,0BACtCF,IACA,SAACxF,GAAD,OAAWA,EAAMxC,KAAKsF,gBAEXgD,GAAiBJ,0BAC5BE,GACAH,IACA,SAAC9H,EAAQH,GACP,QAASG,GAA4B,IAAlBA,EAAOoI,UAAkBvI,EAAKgF,QAAQjF,MAA8B,IAAtBC,EAAKoF,MAAMmD,UAInEC,GAAsBN,0BAAeD,IAAkB,SAACjI,GACnE,MAAO,CACLgF,QAAShF,EAAKgF,QAAQjF,KACtBuE,MAAOtE,EAAKgF,QAAQjF,KACpBlC,KAAM,CACJuH,MAAOpF,EAAKoF,OAEdC,MAAOrF,EAAKqF,U,YCnBCoD,I,YAIPC,IAJH,SAAUD,KAAV,iEACL,OADK,SACCZ,aAAKa,IADN,wCAIP,SAAUA,KAAV,iEACE,OADF,SACQZ,aACJ,CACEa,GAAY3C,eAAejC,UAC3B4E,GAAYzC,mBAAmBnC,UAC/B4E,GAAYxC,oBAAoBpC,UAChC4E,GAAYvC,oBAAoBrC,WALrB,UAOb,WAAWtB,GAAX,6EAC2B,OAD3B,SACiCmG,aAAOT,IADxC,UACQ9C,EADR,OAEQjF,EAAa,CACjBuI,GAAYvC,oBAAoBrC,UAAUnD,WAC1C+H,GAAYzC,mBAAmBnC,UAAUnD,YACzC4D,SAAS/B,EAAOoG,MAEZC,EAAkC,CACtC7I,KAAMoF,EAAMpF,KACZC,QAASmF,EAAMnF,QACfE,eAGEiF,EAAMkB,WAbZ,uBAcUwC,EAAaC,KAAKC,IAAID,KAAKE,KAAK7D,EAAMkB,WAAalB,EAAMnF,SAAU,IAExDmF,EAAMpF,MAhB3B,iBAiBM,OAjBN,UAiBY8H,aAAIY,GAAYpD,YAAY,CAAEtF,KAAM8I,KAjBhD,gCAmBM,OAnBN,UAmBYhB,aAASY,GAAY1C,cAAc6C,IAnB/C,gCAsBI,OAtBJ,UAsBUf,aAASY,GAAY1C,cAAc6C,IAtB7C,4CARJ,wCCTO,IAAMd,GAAiB,SAACxF,GAAD,OAAgCA,EAAMlB,OAEvD6H,IADsBjB,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAM/B,UAClDyH,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMxC,SACpEoJ,GAAgBlB,0BAAeiB,IAAmB,SAACnJ,GAAD,OAAUA,EAAKqF,SACjEgE,GAAiBnB,0BAAeiB,IAAmB,SAACnJ,GAAD,OAAUA,EAAKG,UAElEmJ,IADuBpB,0BAAeiB,IAAmB,SAACnJ,GAAD,OAAUA,EAAKsF,gBACtD4C,0BAAeiB,IAAmB,SAACnJ,GAAU,IAClEG,EAA2BH,EAA3BG,OAAQ6E,EAAmBhF,EAAnBgF,QAASI,EAAUpF,EAAVoF,MACzB,QAASjF,GAA4B,IAAlBA,EAAOoI,UAAkBvD,GAA4B,IAAjBI,EAAMmD,W,YCJ9CgB,I,YAIPC,IAJH,SAAUD,KAAV,iEACL,OADK,SACC1B,aAAK2B,IADN,wCAIP,SAAUA,KAAV,iEACE,OADF,SACQ1B,aACJ,CAAC2B,GAAa/D,gBAAgB3B,UAAW0F,GAAa9D,iBAAiB5B,WAD1D,UAEb,WAAWtB,GAAX,+EAC2B,OAD3B,SACiCmG,aAAOc,IADxC,OAEyB,OADjBrE,EADR,gBAE+BuD,aAAOc,IAFtC,UAEQvJ,EAFR,OAGQwJ,EAAalH,EAAOoG,OAASY,GAAa/D,gBAAgB3B,UAAUnD,WACpEkI,EAAc,CAAE7I,KAAMoF,EAAMpF,KAAMC,QAASmF,EAAMnF,QAASC,WAE5DwJ,IAActE,EAAMkB,WAN1B,iBAQI,OADMqD,EAAUZ,KAAKE,KAAK7D,EAAMkB,WAAa,EAAIlB,EAAMnF,SAP3D,UAQU6H,aAAI0B,GAAalE,YAAY,CAAEtF,KAAM2J,KAR/C,gCAUI,OAVJ,UAUU7B,aAAS0B,GAAahE,cAAcqD,IAV9C,4CAHJ,wC,gBCNyBe,IAAV,SAAUA,KAAV,iEACb,OADa,SACPhC,aAAKF,IADE,OAEb,OAFa,SAEPE,aAAKY,IAFE,OAGb,OAHa,SAGPZ,aAAK0B,IAHE,wCCiCR,IAAMzL,GA1BN,WAA6C,IAApB0F,EAAmB,uDAAJ,GAIvCsG,EAAiBC,cACjBC,EAA2B,CAACC,IAAOH,GASnCI,EAAWC,kBAAe,WAAf,EAAmBH,GAK9BlL,EAASsL,sBAAY3C,GAAajE,EAAc6G,8BAAoBH,IAI1E,OAFAJ,EAAeQ,IAAIC,IAEZzL,EAGY0L,GAERC,GAAiB,kBAAmBC,e,mBCvC3CC,GAAQ,UAGC,IACbC,MAHY,UAIZD,SACAE,QAAS,CACPC,aAAcH,GACdI,KAAMC,KAAOC,OAAO,KACpBC,KAAMF,KAAOC,OAAO,KACpBE,MAAOH,KAAOC,OAAO,MAEvBG,UAAW,CACTN,aAAcH,GACdI,KAAMC,KAAOK,KAAK,KAClBH,KAAMF,KAAOK,KAAP,KACNF,MAAOH,KAAOK,KAAP,MAET/G,MAAO,CACLwG,aAAcH,GACdI,KAAMC,KAAOM,IAAI,KACjBJ,KAAMF,KAAOM,IAAI,KACjBH,MAAOH,KAAOM,IAAI,MAEpBC,KAAM,CACJV,QAASG,KAAOQ,SAAS,KACzBJ,UAAWJ,KAAOQ,SAAS,KAC3BC,KAAMT,KAAOK,KAAK,MAEpBI,KAAMT,KAAOK,KAAK,KAClBxJ,KAAMmJ,KAAOQ,SAAS,KACtBE,WAAY,CACVC,QAAS,UACTC,MAAOjB,IAETkB,QAASb,KAAOc,KAAK,MCsDRC,GAxF+C,SAACC,GAAD,MAAc,CAC1EC,GAAI,CACFC,MAAOF,EAAQT,KAAKV,QACpBsB,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdC,GAAI,CACFL,MAAOF,EAAQT,KAAKV,QACpBsB,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdE,GAAI,CACFN,MAAOF,EAAQT,KAAKV,QACpBsB,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdG,GAAI,CACFP,MAAOF,EAAQT,KAAKV,QACpBsB,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdI,GAAI,CACFR,MAAOF,EAAQT,KAAKV,QACpBsB,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdK,GAAI,CACFT,MAAOF,EAAQT,KAAKV,QACpBsB,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdM,UAAW,CACTV,MAAOF,EAAQT,KAAKV,QACpBuB,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdO,UAAW,CACTX,MAAOF,EAAQT,KAAKH,UACpBe,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdQ,MAAO,CACLZ,MAAOF,EAAQT,KAAKV,QACpBuB,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdS,MAAO,CACLb,MAAOF,EAAQT,KAAKH,UACpBgB,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdU,OAAQ,CACNd,MAAOF,EAAQT,KAAKV,QACpBuB,SAAU,QAEZa,QAAS,CACPf,MAAOF,EAAQT,KAAKH,UACpBgB,SAAU,OACVC,cAAe,SACfC,WAAY,QAEdY,SAAU,CACRhB,MAAOF,EAAQT,KAAKH,UACpBgB,SAAU,OACVD,WAAY,IACZE,cAAe,SACfC,WAAY,OACZa,cAAe,eCnFJ,IACbC,aCHa,CACbC,KAAM,CACJC,gBAAiBtC,KAAOc,KAAK,MDE/ByB,aEJa,CACbF,KAAM,CACJjB,SAAU,IAEZzN,KAAM,CACJ6O,aAAa,aAAD,OAAexC,KAAOc,KAAK,OAEzC2B,KAAM,CACJC,WAAY,GACZC,cAAe,GACfH,aAAa,aAAD,OAAexC,KAAOc,KAAK,MACvCI,MAAOlB,KAAOQ,SAAS,OFNzBoC,cGHa,CACbP,KAAM,CACJG,aAAa,aAAD,OAAexC,KAAOc,KAAK,OAEzCrJ,OAAQ,CACNoL,YAAa,EACbC,UAAW,KCEAC,GANDC,aAAe,CAC3BhC,WACAD,cACAkC,e,uCCLWjG,GAAiB,SAACxF,GAAD,OAAkCA,EAAM0E,SACzDlF,GAAmBkG,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMR,oBACnEC,GAAmBiG,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMP,oBACnEC,GAAmBgG,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMN,oBACnEzC,GAAUyI,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAM/C,WAC1DyO,GAAOhG,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAM0L,QACvD/L,GAAgB+F,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAML,iBAChEC,GAAS8F,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMJ,UAEzD+L,IADMjG,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMvD,OAAS,QACzCiJ,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMyB,gBACtEmK,GAAqBlG,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAM2B,c,6GCZ3E,IAAMkK,GAAOC,KAAOC,IAAV,MCIJC,GAAsB,WACjC,IAAMzQ,EAAW0M,KAYjB,MAAO,CACL7K,OAXa6O,uBAAY,WACzB,OAAO1Q,EAASC,GAAeqF,iBAC9B,CAACtF,IAUFqF,QARcqL,uBAAY,kBAAM1Q,EAASC,GAAeoF,aAAY,CAACrF,IASrEkF,eAPqBwL,uBAAY,SAACtQ,GAClC,OAAOJ,EAASC,GAAeiF,eAAe9E,MAC7C,CAACJ,MCgBA2Q,GAAW,WAGf,MAAO,CACL9O,OAHiB4O,KAAX5O,SAOK+O,GA/BU,WACvB,IAAMC,EAAOC,YAAYC,IACjBlP,EAAW8O,KAAX9O,OAEFmP,OAAyB/L,IAAT4L,EAEtB,OACE,kBAACI,GAAA,EAAD,CAAQC,SAAU,UAChB,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,QAAS,KAAMlD,MAAM,WAAjC,cAGA,kBAAC,GAAD,MACC6C,GACC,kBAACM,GAAA,EAAD,CAAQnD,MAAM,UAAUoD,QAAS1P,GAAjC,a,mXCtBH,IAAM2P,GAAOjB,KAAOC,IAAV,MAMJiB,GAAYlB,KAAOC,IAAV,MAETkB,GAAanB,KAAOC,IAAV,M,8cCNhB,IAAMmB,GAAOpB,aAAOqB,KAAPrB,CAAH,KAGKP,GAAM/B,QAAQ1H,MAAM6G,MAC/B4C,GAAM/B,QAAQ1H,MAAMwG,cAGlB8E,GAAUtB,aAAOa,KAAPb,CAAH,MAKPuB,GAAWvB,aAAOwB,KAAPxB,CAAH,MCLfsB,GAAmC,SAACG,GACxC,OACE,kBAAC,GAAD,eAAQC,UAAWD,EAAMC,WAAeD,EAAM1C,MAC5C,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAyBnB,MAAM,YAC/B,kBAAC,GAAD,CAAWA,MAAM,WACb6D,EAAME,aAOlBL,GAAQM,aAAe,CACrBF,UAAW,EACXG,UAAW,SAGEP,U,6rBC1BR,IAAMQ,GAAY9B,KAAOC,IAAV,MAQT8B,IAJQ/B,KAAOC,IAAV,MAIED,KAAOC,IAAV,OAEJ+B,GAAWhC,KAAOC,IAAV,MASRgC,GAAWjC,KAAOC,IAAV,MAQRiC,GAAelC,aAAOe,KAAPf,CAAH,M,wCCdnBmC,GAAgB,CAAEC,SAAU,GAAIC,SAAU,IAiF1CjC,GAAW,WAAO,IACdzL,EAAmBuL,KAAnBvL,eAEF2N,EAAenC,sBAAW,uCAC9B,WAAOoC,GAAP,SAAAzS,EAAA,sEACQ6E,EAAe4N,GADvB,2CAD8B,sDAI9B,CAAC5N,IAmBH,MAAO,CACL6N,SAjBerC,uBAAY,SAACoC,GAA4B,IAChDH,EAAuBG,EAAvBH,SAAUC,EAAaE,EAAbF,SACZvO,EAAsC,GAU5C,OARKsO,GAAgC,IAApBA,EAASnI,SACxBnG,EAAOsO,SAAW,qBAGfC,GAAgC,IAApBA,EAASpI,SACxBnG,EAAOuO,SAAW,qBAGbvO,IACN,IAKDwO,iBAIWG,GA/Ga,WAC1B,IAAMC,EAAenC,YAAYoC,IADD,EAEGvC,KAA3BkC,EAFwB,EAExBA,aAAcE,EAFU,EAEVA,SAEtB,OACE,kBAACI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYvP,MAAO,kBAACuN,GAAA,EAAD,CAAYC,QAAQ,MAApB,aACnB,kBAACgC,GAAA,EAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,KAAD,CACEX,cAAeA,GACfK,SAAUA,EACVO,SAAUT,IAET,SAACU,GACA,OACE,kBAAC,KAAD,KACE,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAO3P,KAAK,aACT,SAACxD,GAAgC,IACxBoT,EAAgBpT,EAAhBoT,MAAOlL,EAASlI,EAATkI,KACf,OACE,kBAACmL,GAAA,EAAD,eACElN,MAAO3B,QAAQ0D,EAAKoL,SAAWpL,EAAK/B,OACpCyC,MAAM,QACNqI,QAAQ,WACRsC,aAAa,iBACTH,QAMd,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAO5P,KAAK,aACT,SAACxD,GAAgC,IACxBoT,EAAgBpT,EAAhBoT,MAAOlL,EAASlI,EAATkI,KACf,OACE,kBAACmL,GAAA,EAAD,eACEzK,MAAM,WACNqI,QAAQ,WACRvG,KAAK,WACL6I,aAAa,mBACbpN,MAAO3B,QAAQ0D,EAAKoL,SAAWpL,EAAK/B,QAChCiN,QAMbP,EAAa3O,WACZ,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAU2O,EAAa3O,YAG3B,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE6J,MAAM,YACNyF,KAAK,QACL9I,KAAK,SACLuG,QAAQ,aAJV,6CCvDTwC,GAbc,WAC3B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,GAAD,KACE,kBAAC,GAAD,S,UCCOC,GAVkB,WAC/B,IAAM3T,EAAY2Q,YAAY3M,IAE9B,OACE,kBAAC4P,GAAA,EAAD,CAAQC,KAAM7T,GACZ,kBAAC,GAAD,Q,4DCHA8T,GAAYC,cAAW,iBAAO,CAClCC,SAAU,CACRC,SAAU,GACVC,SAAU,QAyBCC,GArBY,WACzB,IAAMC,EAAUC,cACVC,EAAW3D,YAAY1M,IACvBsQ,EAAST,KAEf,OACE,kBAACU,GAAA,EAAD,CAAMC,UAAU,OACbH,EAASI,KAAI,SAAC7P,GACb,OACE,kBAAC8P,GAAA,EAAD,CAAUnS,IAAKqC,EAAKpC,GAAIqM,QAAM,EAACsC,QAAS,kBAAMgD,EAAQQ,KAAK/P,EAAKrB,QAC9D,kBAACqR,GAAA,EAAD,CAAcC,UAAWP,EAAOP,UAC9B,kBAACe,GAAA,EAAD,KAAOlQ,EAAKlB,OAEd,kBAACqR,GAAA,EAAD,KAAenQ,EAAKnB,a,omBCzBzB,IAAM2N,GAAOjB,KAAOC,IAAV,MAKJ4E,GAAS7E,KAAOC,IAAV,MACN8B,GAAO/B,KAAOC,IAAV,MAKJ6E,GAAO9E,KAAOC,IAAV,KAEKR,GAAM/B,QAAQN,WAAWE,OAGlCyH,GAAO/E,KAAOpD,KAAV,KAEK6C,GAAM/B,QAAQN,WAAWC,SCWhC2H,GApB0C,SAACvD,GAAW,IAC3DwD,EAAUxD,EAAVwD,MACR,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,GAAD,KACGA,GAASA,EAAMC,QAAUC,YAAaF,EAAMC,Y,+ECzB1CE,GAAmB,SAC9BnL,GAIA,IAFY,IADZoL,EACW,uDADD,iEAENC,EAAS,GACJC,EAAI,EAAGC,EAAIH,EAAQpL,OAAQsL,EAAItL,IAAUsL,EAChDD,GAAUD,EAAQI,OAAO/K,KAAKgL,MAAMhL,KAAKiL,SAAWH,IAEtD,OAAOF,GCOIM,GAAmB,WAC9B,IAAMnW,EAAW0M,KACXpF,EAAQwJ,YAAYsF,IACpBhU,EAAS0O,YAAYsF,IAErBlO,EAAgBwI,uBAAY,SAACtQ,GACjC,OAAOJ,EAAS4K,GAAY1C,cAAc9H,MACzC,CAACJ,IAEEqW,EAAqB3F,uBAAY,WACrC,IAAMtQ,EAAS,CACb8B,KAAMoF,EAAMpF,KACZC,QAASmF,EAAMnF,QACfC,UAEF,OAAO8F,EAAc9H,KACpB,CAAC8H,EAAeZ,EAAMpF,KAAMoF,EAAMnF,QAASC,IAExCkU,EAAwB5F,uBAAY,WACxC,IAAMtQ,EAAS,CACb8B,KAAMoF,EAAMpF,KACZC,QAASmF,EAAMnF,QACfC,SACAC,YAAY,GAEd,OAAO6F,EAAc9H,KACpB,CAAC8H,EAAeZ,EAAMpF,KAAMoF,EAAMnF,QAASC,IAExC6F,EAAiByI,sBAAW,uCAChC,WAAOtQ,GAAP,mBAAAC,EAAA,6DACQkW,EAAcZ,GAAiB,IADvC,SAEuB3V,EACnB4K,GAAY3C,eAAZ,2BACK7H,GADL,IAEEmW,kBALN,UAEQxV,EAFR,SASUwF,EAAUxF,EAAVwF,OATV,yCAYW,CAAEA,UAZb,gCAeSxF,GAfT,2CADgC,sDAkBhC,CAACf,IAGGmI,EAAqBuI,sBAAW,uCACpC,WAAOtQ,GAAP,SAAAC,EAAA,sEACeL,EAAS4K,GAAYzC,mBAAmB/H,IADvD,mFADoC,sDAIpC,CAACJ,IAGGoI,EAAsBsI,uBAC1B,SAACtQ,GACC,OAAOJ,EAAS4K,GAAYxC,oBAAoBhI,MAElD,CAACJ,IAGGqI,EAAsBqI,uBAC1B,SAACtQ,GACC,OAAOJ,EAAS4K,GAAYvC,oBAAoBjI,MAElD,CAACJ,IAGGwH,EAAckJ,uBAClB,SAACtQ,GACC,OAAOJ,EAAS4K,GAAYpD,YAAYpH,MAE1C,CAACJ,IAGGyH,EAAeiJ,uBACnB,SAACtQ,GACC,OAAOJ,EAAS4K,GAAYnD,aAAarH,MAE3C,CAACJ,IAGGwW,EAAkB9F,sBAAW,uCAAC,WAAOtQ,GAAP,SAAAC,EAAA,+EAC3B+E,EAAIpD,KAAKC,KAAK7B,IADa,2CAAD,sDAEhC,IAEGqW,EAAmB/F,sBAAW,uCAAC,WAAOtQ,GAAP,SAAAC,EAAA,sEACtB+E,EAAIpD,KAAKqB,MAAMjD,GADO,mFAAD,sDAEjC,IAMH,MAAO,CACLsW,UALgBhG,uBAAY,WAC5B,OAAO1Q,EAAS4K,GAAY5C,WAC3B,CAAChI,IAIFwH,cACAC,eACAS,gBACAmO,qBACAC,wBACArO,iBACAE,qBACAE,sBACAD,sBACAoO,kBACAC,qB,iFC7EE9F,GAAW,WAUf,MAAO,CACL+D,OAVaT,KAWb0C,gBATsBC,mBAAQ,WAC9B,MAAO,CACLC,aAAc,CAAEC,WAAY,QAASC,SAAU,OAC/CC,gBAAiB,CAAEF,WAAY,QAASC,SAAU,UAEnD,MAQC9C,GAAYC,cAAW,iBAAO,CAClC+C,KAAM,CACJC,MAAO,SAIIC,GArD0B,SAACnF,GAAW,IAAD,EACdrB,KAA5BgG,EAD0C,EAC1CA,gBAAiBjC,EADyB,EACzBA,OAEzB,OACE,kBAAC,KAAD,iBACMiC,EADN,CAEES,aAAW,EACXC,SAAUrF,EAAMqF,SAChBpC,UAAWP,EAAOuC,KAClBjD,KAAMpP,QAAQoN,EAAMqF,UACpBC,QAAStF,EAAMuF,cAEdvF,EAAMiF,KAAKpC,KAAI,SAAC7P,GACf,OACE,kBAACwS,GAAA,EAAD,CACE7U,IAAKqC,EAAKpC,GACV2O,QAAS,WACHS,EAAMyF,kBACRzF,EAAMyF,iBAAiBzS,GAEzBgN,EAAMuF,gBAGR,kBAACnG,GAAA,EAAD,CAAYC,QAAS,UAAWrM,EAAKgE,aCgClC0O,GA5CoD,SAAC1F,GAAW,IACrEiF,EAA6DjF,EAA7DiF,KAAMU,EAAuD3F,EAAvD2F,iBAAkBC,EAAqC5F,EAArC4F,WAAYC,EAAyB7F,EAAzB6F,WAAYC,EAAa9F,EAAb8F,SADoB,EAE5CC,IAAMC,SAA6B,MAFS,oBAErEX,EAFqE,KAE3DY,EAF2D,KAY5E,OACE,oCACE,kBAACxE,GAAA,EAAD,eACEyE,WAAS,GACLN,EAFN,CAGEvG,QAAQ,WACRyG,SAAUA,EACVK,WAAU,aACRC,aAAcT,EACZ,kBAACU,GAAA,EAAD,CAAgBnH,SAAS,OACtBc,EAAMsG,cACP,kBAAChH,GAAA,EAAD,CAAQsC,KAAM,QAASkE,SAAUA,EAAUvG,QAnB5B,SAACgH,GAC1BN,EAAYM,EAAMC,iBAmBLb,GAEF3F,EAAMyG,cAEP,MACDZ,MAGNZ,GACC,kBAAC,GAAD,CACEI,SAAUA,EACVJ,KAAMA,EACNQ,iBAAkBzF,EAAMyF,iBACxBF,YA7BoB,WAC1BU,EAAY,W,kLCbhB,IAAMS,GAAc,CAClBC,EAAG,QACHC,EAAG,OACHC,EAAG,QACHC,EAAG,UAgBCC,GAA4C,CAChDnV,KAAM,GACN8C,KAAM,GACNsS,SAAU,GACVC,KAAM,IACNC,UAAW,KA+IPvI,GAAW,SAACqB,GAA+B,IACvC/J,EAAmBkO,KAAnBlO,eAEFkR,EAAYvC,mBAAQ,WAExB,OADgBjY,OAAOqD,KAAK0W,IACb7D,KAAI,SAACoE,GAClB,MAAO,CACLrW,GAAIqW,EACJjQ,MAAO0P,GAAYO,SAGtB,IAEK3F,EAAatB,EAAbsB,SAEFT,EAAenC,sBAAW,uCAAC,WAC/BoC,EACAsG,GAF+B,iBAAA/Y,EAAA,sEAIV4H,EAAe,CAClCrE,KAAMkP,EAAOlP,KACb8C,KAAMoM,EAAOpM,KACbsS,SAA+B,MAArBlG,EAAOoG,UAAP,UAA8BpG,EAAOkG,SAArC,YAAiDlG,EAAOmG,WAAShU,IAP9C,OAIzBlE,EAJyB,QAUzBsY,EAAetY,GACLwF,MACd6S,EAAcE,UAAU,CAAEC,OAAQF,EAAY9S,MAAM7H,UAC3C4U,GACTA,IAd6B,2CAAD,wDAgB7B,CAACA,EAAUrL,IAER8K,EAAWrC,uBAAY,SAACoC,GAC5B,IAAMzO,EAAsC,GAkB5C,OAhBKyO,EAAOlP,MAA+B,IAAvBkP,EAAOlP,KAAK4G,SAC9BnG,EAAOT,KAAO,kBAGXkP,EAAOpM,MAA+B,IAAvBoM,EAAOpM,KAAK8D,SAC9BnG,EAAOqC,KAAO,kBAGS,MAArBoM,EAAOoG,YACJpG,EAAOkG,UAAuC,IAA3BlG,EAAOkG,SAASxO,OAE7BgP,MAAMC,SAAS3G,EAAOkG,aAC/B3U,EAAO2U,SAAW,uCAFlB3U,EAAO2U,SAAW,+BAMf3U,IACN,IAEH,MAAO,CACL8U,YACAtG,eACA5K,iBACA8K,aAIE2G,GAAYC,KAAU,CAAEC,MAAOC,OAAOC,IAAT,QAC7BC,GAAWJ,KAAU,CAAEC,MAAOC,OAAOC,IAAT,QAE5B7F,GAAYC,cAAW,iBAAO,CAClC8F,UAAW,CACT9C,MAAO,QAET+C,SAAU,CACRC,WAAY,IAEdjD,KAAM,CACJC,MAAO,IACPgD,WAAY,QAIDC,GA3NoC,SAACnI,GAClD,IAAM0C,EAAST,KAD6C,EAEdtD,GAASqB,GAA/CmH,EAFoD,EAEpDA,UAAWpG,EAFyC,EAEzCA,SAAUF,EAF+B,EAE/BA,aAE7B,OACE,kBAACM,GAAA,EAAD,CAAMiH,MAAO,CAAElD,MAAO,MACpB,kBAAC9D,GAAA,EAAD,CAAYvP,MAAO,kBAACuN,GAAA,EAAD,CAAYC,QAAQ,MAApB,uBACnB,kBAACgC,GAAA,EAAD,KACE,kBAAC,KAAD,CAAQX,cAAeqG,GAAsBhG,SAAUA,EAAUO,SAAUT,IACxE,SAACwH,GACA,IAAMpT,EAAUoT,EAAYC,aAC5B,OACE,kBAAC,KAAD,KACE,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,KAAD,CAAO9W,KAAK,SACT,SAACxD,GAAgC,IACxBoT,EAAgBpT,EAAhBoT,MAAOlL,EAASlI,EAATkI,KACf,OACE,kBAACmL,GAAA,EAAD,eACEwB,UAAWP,EAAOsF,UAClBzT,MAAO3B,QAAQ0D,EAAKoL,SAAWpL,EAAK/B,OACpCyC,MAAM,cACNqI,QAAQ,YACJmC,QAMd,kBAAC+G,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,KAAD,CAAO9W,KAAK,SACT,SAACxD,GAAgC,IACxBoT,EAAgBpT,EAAhBoT,MAAOlL,EAASlI,EAATkI,KACf,OACE,kBAACmL,GAAA,EAAD,eACEwB,UAAWP,EAAOsF,UAClBzT,MAAO3B,QAAQ0D,EAAKoL,SAAWpL,EAAK/B,OACpCyC,MAAM,cACNqI,QAAQ,WACR8G,WAAY,CACVwC,SAAU,SAACC,GACLA,GACFb,GAASc,KAAKD,MAIhBpH,QAMd,kBAAC+G,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,KAAD,CAAO9W,KAAK,aACT,SAACxD,GAAgC,IACxBoT,EAAgBpT,EAAhBoT,MAAOlL,EAASlI,EAATkI,KACTwS,EAA6C,MAAjCT,EAAYvH,OAAOoG,UACrC,OACE,kBAAC,GAAD,CACEjC,KAAMkC,EACN1B,iBAAkB,SAACzS,GACM,kBAAZA,EAAKpC,IACdyX,EAAYU,cAAc,OAAQ/V,EAAKpC,KAG3CkV,UAAWgD,EACXnD,iBAAkBe,GAAY2B,EAAYvH,OAAOmG,MACjDpB,WAAY,CACV8C,SAAU,SAACC,GACLA,GACFlB,GAAUmB,KAAKD,KAIrBhD,WAAU,aACRrR,MAAO3B,QAAQ0D,EAAKoL,SAAWpL,EAAK/B,OACpCyC,MAAM,qBACHwK,SAOf,kBAAC+G,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,KAAD,CAAO9W,KAAK,cACT,SAACxD,GAAgC,IACxBoT,EAAUpT,EAAVoT,MACR,OACE,kBAACwH,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,QAAyB,MAAhB3H,EAAM4H,MACfC,SAAU,SAACC,EAAGH,GACZd,EAAYU,cAAc,YAAaI,EAAU,IAAM,MAEzDvX,KAAK,WACLuK,MAAM,YAGVnF,MAAM,wBAOfqR,EAAYhW,OAAOkV,QAClB,kBAACgB,GAAA,EAAD,CAAMvV,MAAI,EAACwV,WAAS,EAACE,GAAI,GAAIN,MAAO,CAAEmB,WAAY,WAChD,kBAAC,GAAD,CAASjM,KAAM,CAAE8K,MAAO,CAAEoB,SAAU,KACjCnB,EAAYhW,OAAOkV,SAK1B,kBAACgB,GAAA,EAAD,CAAMvV,MAAI,EAACwV,WAAS,EAACE,GAAI,GAAIN,MAAO,CAAEmB,WAAY,WAChD,kBAACjK,GAAA,EAAD,CACEwG,SAAU7Q,EACV2M,KAAK,QACL9I,KAAK,SACLuG,QAAS,YACTlD,MAAM,YACNsN,kBAAgB,EAChBvD,WAAS,IAEPjR,GAAW,SACZA,GAAW,kBAACyU,GAAA,EAAD,CAAkBzG,UAAWP,EAAOuF,SAAUrG,KAAM,e,8KC/IhFjD,GAAW,SAACqB,GAA0B,IAAD,EACXgG,oBAAS,GADE,oBAClC2D,EADkC,KACxBC,EADwB,KAGnCC,EAAanL,uBAAY,WAC7B,IAAMtR,EAAQ4S,EAAM2I,SAASmB,QAEzB1c,IACFA,EAAMyL,SACNkR,SAASC,YAAY,QACrBJ,GAAU,MAEX,CAAC5J,EAAM2I,WAEJsB,EAAmBvL,uBAAY,WACnCkL,GAAU,KACT,IAEH,MAAO,CACLD,WACAC,YACAC,aACAI,qBAIWC,GAjD0B,SAAClK,GAAW,IAAD,EACCrB,GAASqB,GAApD2J,EAD0C,EAC1CA,SAAUE,EADgC,EAChCA,WAAYI,EADoB,EACpBA,iBAE9B,OACE,oCACE,kBAACE,GAAA,EAAD,CACEtF,aAAc,CAAEC,WAAY,SAAUC,SAAU,UAChD/C,KAAM2H,EACNS,iBAAkB,IAClB9E,QAAS2E,GAET,kBAACI,GAAA,EAAD,CAAO/E,QAAS2E,EAAkBK,SAAS,WACzC,kBAAClL,GAAA,EAAD,CAAYC,QAAQ,KAAKuD,UAAW,OACjC5C,EAAMtT,WAIb,kBAAC6d,GAAA,EAAD,CAAYhL,QAASsK,GACnB,kBAAC,KAAD,CAAcxN,SAAU,aCoC1BsC,GAAW,SAACqB,GAChB,IAAMwK,EAAyD9L,uBAC7D,SAAC6H,GACCA,EAAMkE,OAAO5R,WAEf,IAKF,MAAO,CACL6R,UAHgB9F,mBAAQ,kBAAM5E,EAAM3K,MAAMwN,KAAI,kBAAMkD,IAAM4E,iBAAgC,CAAC3K,EAAM3K,QAIjGmV,gBAIEvI,GAAYC,cAAW,iBAAO,CAClCjS,KAAM,CACJ2a,QAAS,EACThN,cAAe,GACfsH,MAAO,QAETlS,KAAM,CACJ4X,QAAS,EACThN,cAAe,GACfD,WAAY,QAKDkN,GAtE4B,SAAC7K,GAC1C,IAAM0C,EAAST,KADqC,EAEjBtD,GAASqB,GAApC0K,EAF4C,EAE5CA,UAAWF,EAFiC,EAEjCA,YAEnB,OACE,kBAAC7H,GAAA,EAAD,CAAMM,UAAWP,EAAOzS,MACrB+P,EAAM3K,MAAMwN,KAAI,SAAC7P,EAAM8Q,GACtB,OACE,kBAAChB,GAAA,EAAD,CAAUG,UAAWP,EAAO1P,KAAMrC,IAAKqC,EAAK0B,MAC1C,kBAAC+M,GAAA,EAAD,CACE2H,MAAOpW,EAAK1F,IACZ0J,MAAOhE,EAAKgE,MACZkP,WAAS,EACT7G,QAAQ,WACRyL,QAASN,EACTrE,WAAY,CACVwC,SAAU+B,EAAU5G,GACpBsC,aACE,kBAACC,GAAA,EAAD,CAAgBnH,SAAS,OACvB,kBAAC,GAAD,CAASyJ,SAAU+B,EAAU5G,GAAIpX,QAAO,0BACtCsG,EAAK+X,WACL,kBAACR,GAAA,EAAD,CACEhL,QAAS,WACP9R,OAAOuU,KAAKhP,EAAK1F,IAAK,YAGxB,kBAAC,KAAD,CAAe+O,SAAU,qB,8BCNlC2O,GAnC2C,SAAChL,GAAW,IAAD,EACpCgG,oBAAS,GAD2B,oBAC5DtP,EAD4D,KACpDuU,EADoD,KAE3D3J,EAAatB,EAAbsB,SAQR,OACE,oCACE,kBAACS,GAAA,EAAD,CAAQC,KAAMtL,EAAQ4O,QAAS,kBAAM2F,GAAa,KAC9CjL,EAAMnO,OACN,kBAACqZ,GAAA,EAAD,KACE,kBAAC9L,GAAA,EAAD,CAAYC,QAAS,KAAMuD,UAAW,OAAS5C,EAAMnO,QAGvDmO,EAAMmL,SACN,kBAACC,GAAA,EAAD,KAAiBpL,EAAMmL,SAEzB,kBAACE,GAAA,EAAD,KACE,kBAAC/L,GAAA,EAAD,CAAQC,QAAS,kBAAM0L,GAAa,IAAQ9O,MAAM,WAAlD,UAGA,kBAACmD,GAAA,EAAD,CAAQC,QAtBK,WACf+B,GACFA,IAEF2J,GAAa,IAkBwB9O,MAAM,UAAUmP,WAAS,GAAxD,YAKJ,yBAAK/L,QAAS,kBAAM0L,GAAa,KAAQjL,EAAME,Y,oBCnC/CqL,GAAcC,cAAW,SAACxN,GAAD,MAAmB,CAChDyN,QAAS,CACPlO,gBAAiB,QACjBpB,MAAO,sBACPiG,SAAU,IACV/F,SAAU2B,EAAMhC,WAAW0P,QAAQ,IACnCC,OAAQ,oBACRf,QAAS,OAPOY,CAShBI,MAUWC,GARgC,SAAC7L,GAC9C,OACE,kBAACuL,GACKvL,I,UCJJiC,GAAY,SAACjC,GAAD,OAA6BkC,cAAW,WACxD,MAAO,CACL5E,KAAM,CACJsN,QAAS,SAEXkB,IAAK,CACHC,QAAS,QACTC,UAAW,OACXC,OAAQ,uBAAuBhZ,IAAjB+M,EAAMiM,OAAuBjM,EAAMiM,OAAS,QAC1DC,WAAY,MACZtB,QAAS,YACTjP,WAAYV,KAAOc,KAAK,MAE1BrH,KAAM,CACJiH,WAAY,aAKHwQ,GA1BgC,SAACnM,GAC9C,IAAM0C,EAAST,GAAUjC,EAAViC,GACf,OACI,yBAAKgB,UAAWP,EAAOoJ,KAAK,0BAAM7I,UAAWP,EAAOhO,MAAOsL,EAAME,YCF1DkM,GAAyB,WACpC,IAAMpe,EAAW0M,KAEXjE,EAAciI,uBAClB,SAAChI,GACC1I,EAASqe,GAAkB5V,YAAY,CAAEC,cAE3C,CAAC1I,IAGG6I,EAAkB6H,uBACtB,SAACtQ,GACC,OAAOJ,EAASqe,GAAkBxV,gBAAgBzI,MAEpD,CAACJ,IAGGse,EAAmB5N,uBAAY,SAACtQ,GACpCJ,EAASqe,GAAkBzV,UAAUxI,MACpC,CAACJ,IAEEue,EAAiB7N,sBAAW,uCAChC,WAAO8N,EAAkCC,GAAzC,SAAApe,EAAA,6DACEoI,GAAY,GACZgW,GAAiBH,EAAiBG,GAFpC,SAGQ5V,EAAgB2V,GAHxB,2CADgC,wDAMhC,CAAC3V,EAAiBJ,EAAa6V,IAGjC,MAAO,CAAE7V,cAAaI,kBAAiB0V,iBAAgBD,qBCF5CI,GAA4B,CACvC,CAAE9b,GAAI,MAAOoG,MAAO,OACpB,CAAEpG,GAAI,OAAQoG,MAAO,QACrB,CAAEpG,GAAI,MAAOoG,MAAO,QA+DhB2H,GAAW,SAACqB,GAA8B,IAAD,EACfgG,mBAAiC0G,GAAY,GAAG9b,IADjC,oBACtC+b,EADsC,KAC5BC,EAD4B,KAErCL,EAAmBH,KAAnBG,eAEFM,EAASjI,mBAAQ,WACrB,OAAO8H,GAAYI,MAAK,SAAChJ,GAAD,OAAOA,EAAElT,KAAO+b,MAAaD,GAAY,KAChE,CAACC,IAEEI,EAAWjO,YAAYV,KAAwB,GAE/C4O,EAASC,iBAAyB,MAClCC,EAAYD,iBAAyB,MAErCzC,EAAyD9L,uBAAY,SAAC6H,GAC1EA,EAAMkE,OAAO5R,WACZ,IAEG+M,EAA6BhB,mBAAQ,WACzC,MAAO,CACL5N,MAAO,aACP8T,QAASN,KAEV,CAACA,IAEEpZ,EAAYwT,mBAAQ,WACxB,MAAM,GAAN,OAAUmI,EAAV,0BAAoCF,EAAOjc,GAA3C,YAAiDoP,EAAMhN,KAAK0B,QAC3D,CAACqY,EAAUF,EAAOjc,GAAIoP,EAAMhN,KAAK0B,OAE9BmR,EAAyBjB,mBAAQ,WACrC,MAAO,CACLwE,MAAOhY,EACPuX,SAAUqE,KAEX,CAAC5b,IAEE+b,EAAkBzO,uBACtB,SAACoF,GACqB,kBAATA,EAAElT,IAAmB,CAAC,MAAO,OAAQ,OAAO6D,SAASqP,EAAElT,KAChEgc,EAAU9I,EAAElT,MAGhB,CAACgc,IAGGQ,EAAyB1O,uBAAY,WACzC,OAAO6N,EACL,CAAE3b,GAAIoP,EAAMhN,KAAKpC,GAAIO,WAAW,GAChC,CAAEkc,QAAS,UAAWR,OAAQF,MAE/B,CAACJ,EAAgBvM,EAAMhN,KAAKpC,GAAI+b,IAEnC,MAAO,CACLI,WACAlH,aACA8G,WACA/G,aACAiH,SACAzb,YACA4b,SACAE,YACAN,YACApC,cACA2C,kBACAC,2BAIEnL,GAAYC,cAAW,WAC3B,MAAO,CACLoL,eAAgB,CACdvB,QAAS,OACTwB,eAAgB,qBAKPC,GAxIkC,SAACxN,GAAW,IAAD,EAWtDrB,GAASqB,GATX4F,EAFwD,EAExDA,WACAC,EAHwD,EAGxDA,WACAgH,EAJwD,EAIxDA,OACAzb,EALwD,EAKxDA,UACA4b,EANwD,EAMxDA,OACAE,EAPwD,EAOxDA,UACAC,EARwD,EAQxDA,gBACAC,EATwD,EASxDA,uBACA5C,EAVwD,EAUxDA,YAEI9H,EAAST,KAEPjP,EAASgN,EAAThN,KAER,OACE,kBAACuV,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAACjH,GAAA,EAAD,CACEyE,WAAS,EACTlP,MAAM,aACNqI,QAAQ,WACR+J,MAAOpW,EAAKya,WACZ3C,QAASN,EACTrE,WAAY,CACVwC,SAAUuE,EACV9G,aACE,kBAACC,GAAA,EAAD,CAAgBnH,SAAS,OACvB,kBAAC,GAAD,CAASyJ,SAAUuE,EAAWxgB,QAAO,8BAM/C,kBAAC6b,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,GAAD,CACEzD,KAAMyH,GACN/G,iBAAkBkH,EAAO7V,MACzByO,iBAAkB0H,EAClBvH,WAAYA,EACZC,WAAYA,EACZY,aAAc,kBAAC,GAAD,CAASkC,SAAUqE,EAAQtgB,QAAO,4BAGnDsG,EAAKya,YACJ,kBAAClF,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,yBAAKzF,UAAWP,EAAO4K,gBACrB,kBAAClO,GAAA,EAAD,sDACA,kBAACsO,GAAA,EAAD,CAAMnO,QAAS6N,GAAf,YAEF,kBAAC,GAAD,0CACgCpa,EAAKya,WADrC,6DACmGrc,OCmCvGuN,GAAW,SAACqB,GAChB,IAAM5L,EAAa0K,YAAYT,IADU,EAEgC8F,KAAjEhO,EAFiC,EAEjCA,mBAAoBC,EAFa,EAEbA,oBAAqBC,EAFR,EAEQA,oBACzCvI,EAASkS,EAATlS,KACF6f,EAAiB7f,EAAOA,EAAK6f,eAAiB,KAC9CjZ,EAAO5G,EAAOA,EAAK4G,KAAO,KAE1BkZ,EAAahJ,mBAAQ,WACzB,YAAmB3R,IAAfmB,GAAqC,OAATM,EACvB,GAEF,CACL,CAAEA,KAAM,MAAOpH,IAAI,GAAD,OAAK8G,EAAL,6BAAoCM,GAAQsC,MAAO,OACrE,CAAEtC,KAAM,OAAQpH,IAAI,GAAD,OAAK8G,EAAL,8BAAqCM,GAAQsC,MAAO,QACvE,CAAEtC,KAAM,MAAOpH,IAAI,GAAD,OAAK8G,EAAL,6BAAoCM,GAAQsC,MAAO,UAEtE,CAACtC,EAAMN,IAEJyZ,EAAanP,uBACjB,SAAC9N,GACC,OAAOuF,EAAmB,CAAEvF,SAE9B,CAACuF,IAGG2X,EAAcpP,uBAClB,SAAC9N,GACC,OAAOwF,EAAoB,CAAExF,SAE/B,CAACwF,IAGG2X,EAAcrP,uBAClB,SAAC9N,GACC,OAAOyF,EAAoB,CAAEzF,SAE/B,CAACyF,IAGG2Q,EAAWpC,mBAAQ,WACvB,OAAO+I,GAAc,2BAAwBK,KAAOC,SAASN,EAAgB,KAAKO,cACjF,CAACP,IAEJ,MAAO,CACLxP,KAAM/J,EACN4S,WACA4G,aACAC,aACAC,cACAC,gBAIE9L,GAAYC,cAAW,iBAAO,CAClCvN,QAAS,CACP4Y,eAAgB,YAElBY,YAAa,CACXjJ,MAAO,QAETpJ,QAAS,CACPiC,UAAW,GACXqQ,aAAc,IAEhB3C,QAAS,CACPvD,WAAY,GACZmG,QAAS,GACT,UAAW,CACTA,QAAS,IAGbC,WAAY,CACVC,UAAW,aAIAC,GArK0B,SAACxO,GACxC,IAAM0C,EAAST,KADmC,EAEqBtD,GAASqB,GAAxE6N,EAF0C,EAE1CA,WAAYC,EAF8B,EAE9BA,YAAaC,EAFiB,EAEjBA,YAAa/G,EAFI,EAEJA,SAAU4G,EAFN,EAEMA,WAChD9f,EAASkS,EAATlS,KAER,OAAKA,EAKH,kBAACqT,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KACE,kBAACkH,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGgG,QAAS,iBACnC,kBAAClG,GAAA,EAAD,CAAMvV,MAAI,GACR,kBAACoM,GAAA,EAAD,CAAYC,QAAS,WAArB,QACA,kBAACD,GAAA,EAAD,CAAYC,QAAS,MAAOvR,EAAK8D,OAEnC,kBAAC2W,GAAA,EAAD,CAAMvV,MAAI,EAACiQ,UAAWP,EAAO4L,YAC3B,kBAAClP,GAAA,EAAD,CAAYC,QAAS,WAArB,eACA,kBAACD,GAAA,EAAD,CAAYC,QAAS,MAAOvR,EAAK4G,QAGrC,kBAACga,GAAA,EAAD,CAASzL,UAAWP,EAAO5G,UAC3B,kBAACsD,GAAA,EAAD,CAAYC,QAAS,WACjBvR,EAAK6f,eAAuC3G,EAAtB,qBAE1B,kBAAC0H,GAAA,EAAD,CAASzL,UAAWP,EAAO5G,UAC3B,kBAAC6S,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAkBC,WAAY,kBAAC,KAAD,OAC5B,kBAACzP,GAAA,EAAD,CAAYC,QAAS,MAArB,cACA,kBAAC,GAAD,CACEyP,UAAU,YACVjd,MACE,kBAACuN,GAAA,EAAD,CAAY2P,cAAY,EAAC1P,QAAS,QAASlD,MAAO,eAAlD,mHAKF,kBAAC,KAAD,CAAU8G,UAAWP,EAAO+I,QAAStP,MAAO,UAAWE,SAAU,YAGrE,kBAAC2S,GAAA,EAAD,KACE,yBAAK5G,MAAO,CAAEoB,SAAU,IACtB,kBAAC,GAAD,CAAUnU,MAAOuY,OAIvB,kBAACe,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAkBC,WAAY,kBAAC,KAAD,OAC5B,kBAACzP,GAAA,EAAD,CAAYC,QAAS,MAArB,gBAEF,kBAAC2P,GAAA,EAAD,KACE,yBAAK/L,UAAWP,EAAOyL,aACrB,kBAAC,GAAD,CAAanb,KAAMlF,QAK3B,kBAACmhB,GAAA,EAAD,CAAahM,UAAWP,EAAO/N,SACR,OAApB7G,EAAKohB,YACJ,oCACE,kBAAC,GAAD,CACErd,MAAO,mCACPsZ,QAAS,4CACT7J,SAAU,kBAAMuM,EAAW/f,EAAK8C,MAEhC,kBAAC0O,GAAA,EAAD,CAAQsC,KAAK,SAAb,WAEF,kBAACtC,GAAA,EAAD,CAAQsC,KAAK,QAAQrC,QAAS,kBAAMwO,EAAYjgB,EAAK8C,MAArD,YAKiB,OAApB9C,EAAKohB,YACJ,kBAAC,GAAD,CACErd,MAAO,iDACPsZ,QACE,kHAEF7J,SAAU,kBAAMwM,EAAYhgB,EAAK8C,MAEjC,kBAAC0O,GAAA,EAAD,CAAQsC,KAAK,SAAb,cA3ED,M,+BCRLjD,GAAW,SAACqB,GAAgC,IACxCmP,EAAanP,EAAbmP,SAcR,MAAO,CACLC,aAbmB1Q,uBACnB,SACE2Q,GAKAF,GAAYA,EAASE,EAAE5E,OAAOrB,SAEhC,CAAC+F,MAQClN,GAAYC,cAAW,WAC3B,MAAO,CACLlL,MAAO,CACL8G,YAAa,GACbzB,SAAU,QAKDiT,GAxDsC,SAACtP,GACpD,IAAM0C,EAAST,KACP6H,EAAqB9J,EAArB8J,QAASyF,EAAYvP,EAAZuP,QACTH,EAAiBzQ,GAASqB,GAA1BoP,aAER,OACE,kBAACrP,GAAA,EAAD,KACE,kBAAC,KAAD,CAAMyI,WAAS,EAACe,WAAW,UACzB,kBAAC,KAAD,CAAMvW,MAAI,EAACiQ,UAAWP,EAAO1L,OAA7B,mBAGA,kBAAC,KAAD,CAAMhE,MAAI,GACR,kBAACwc,GAAA,EAAD,CAAQpG,MAAOU,EAAST,SAAU+F,GAC/BG,EAAQ1M,KAAI,SAAC1V,GACZ,OACE,kBAACqY,GAAA,EAAD,CAAU7U,IAAKxD,EAAKic,MAAOjc,GACxBA,W,oDCTbwR,GAAW,SAACqB,GAA8B,IACtCmG,EAA0DnG,EAA1DmG,WAAYkD,EAA8CrJ,EAA9CqJ,SAAUoG,EAAoCzP,EAApCyP,kBAAsBC,EADP,aACqB1P,EADrB,+CAEvC2P,EAAiB/K,mBAAQ,WAC7B,OAAO,aACLgL,eACE,kBAACvJ,GAAA,EAAD,CAAgBnH,SAAS,SACvB,kBAAC,KAAD,QAGDiH,KAEJ,CAACA,IAEE0J,EAAkBnR,sBAAYoR,MAAS,SAAC3iB,GACxCsiB,GACFA,EAAkBtiB,KAEnB,KAAM,CAACsiB,IAUV,MAAO,CACLE,iBACAD,YACAN,aAXmB1Q,uBAAY,SAAC6H,GAChC,IAAMpZ,EAAMoZ,EAAMkE,OAAOrB,MACrBC,GACFA,EAAS9C,GAEXsJ,EAAgB1iB,KACf,CAAC0iB,EAAiBxG,MASR0G,GA3CkC,SAAC/P,GAAW,IAAD,EACNrB,GAASqB,GAArD2P,EADkD,EAClDA,eAAgBD,EADkC,EAClCA,UAAWN,EADuB,EACvBA,aACnC,OACE,oCACE,kBAAC3N,GAAA,EAAD,iBAAeiO,EAAf,CAA0BrG,SAAU+F,EAAcxN,KAAK,QAAQvC,QAAS,WAAY8G,WAAYwJ,OC6GhGhR,GAAW,WAAO,IAAD,EACcqH,oBAAS,GADvB,oBACdgK,EADc,KACAC,EADA,OAEiB9L,KAA9B3O,EAFa,EAEbA,YAAaC,EAFA,EAEAA,aAEfya,EAAoBxR,uBAAY,WACpCuR,GAAYD,KACX,CAACA,EAAcC,IAEZE,EAAoBzR,uBACxB,SAAC0R,EAAoChH,GACnC,OAAO5T,EAAY,CAAEtF,KAAMkZ,MAE7B,CAAC5T,IAGG6a,EAAsB3R,uBAC1B,SAACvR,GACC,OAAOqI,EAAY,CAAErF,QAAShD,MAEhC,CAACqI,IAGG8a,EAAqB5R,uBACzB,SAACvR,GACC,OAAOsI,EAAa,CAAErF,OAAQjD,MAEhC,CAACsI,IAGH,MAAO,CACLua,eACAC,aACAI,sBACAC,qBACAJ,oBACAC,sBAIElO,GAAYC,cAAW,WAC3B,MAAO,CACLqO,YAAa,CACXrI,WAAY,QAEdsI,aAAc,CACZtI,WAAY,OACZnK,UAAW,QAEb0S,KAAM,CACJrO,SAAU,OACVoH,SAAU,GAEZkH,QAAS,CACP3S,UAAW,QAKF4S,GA7J4B,SAAC3Q,GAC1C,IAAM0C,EAAST,KADqC,EAEZnD,YAAYrG,IAA5CxD,EAF4C,EAE5CA,QAASnH,EAFmC,EAEnCA,KAAMyG,EAF6B,EAE7BA,MAAOe,EAFsB,EAEtBA,MACxBC,EAAeuJ,YAAYxG,IAC3BlI,EAAS0O,YAAYzG,IACrBuY,EAAU9R,YAAYvG,IALwB,EAahDoG,KALFqR,EARkD,EAQlDA,aACAE,EATkD,EASlDA,kBACAC,EAVkD,EAUlDA,kBACAE,EAXkD,EAWlDA,oBACAC,EAZkD,EAYlDA,mBAGF,OAAIrb,EACK,KAGLV,EACK,kBAAC8V,GAAA,EAAD,KAAQ9V,GAIf,kBAACwL,GAAA,EAAD,CAAKkD,UAAWP,EAAO+N,MACrB,kBAAClI,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMvV,MAAI,EAACwV,WAAS,EAACC,QAAS,EAAGC,GAAI,GAAIa,WAAY,WACjDvJ,EAAMjP,SACN,kBAACwX,GAAA,EAAD,CAAMvV,MAAI,GACR,kBAACsM,GAAA,EAAD,CACED,QAAQ,WACRwR,UAAW,kBAAC,KAAD,MACXtR,QAAS2Q,GAHX,mBASDU,GACD,kBAACrI,GAAA,EAAD,CAAMvV,MAAI,GACR,kBAAC,GAAD,CACE8d,aAAc1gB,EACdqf,kBAAmBa,EACnBS,YAAa,wBAKpBH,IAAY5Q,EAAMjP,SAChB,kBAACwX,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,GAAIzF,UAAWP,EAAOgO,SACnC,kBAACtR,GAAA,EAAD,CAAYC,QAAQ,MAApB,iDAGJuR,GAAW5Q,EAAMjP,SACf,kBAACwX,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,GAAIzF,UAAWP,EAAOgO,SACnC,kBAACtR,GAAA,EAAD,CAAYC,QAAQ,MAApB,sBAGJvR,EAAKuH,MAAMmD,OAAS,GACnB,kBAAC+P,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAACH,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACtB3a,EAAKuH,MAAMwN,KAAI,SAAC7P,GACf,OACE,kBAACuV,GAAA,EAAD,CAAMvV,MAAI,EAACrC,IAAKqC,EAAKpC,GAAI8X,GAAI,GAC3B,kBAAC,GAAD,CAAS5a,KAAMkF,eAOLC,IAArBqC,EAAM0b,YAA4B1b,EAAM0b,WAAa,GACpD,kBAACzI,GAAA,EAAD,CAAMC,WAAS,EAACxV,MAAI,EAAC0V,GAAI,GAAIa,WAAW,UACtC,kBAAChB,GAAA,EAAD,CAAMvV,MAAI,GACR,kBAAC,GAAD,CACE8W,QAASxU,EAAMnF,QACfof,QAASha,EACT4Z,SAAUkB,KAGd,kBAAC9H,GAAA,EAAD,CAAMvV,MAAI,EAACiQ,UAAWP,EAAO6N,aAC1Bjb,EAAM0b,WAAa,GAClB,kBAACC,GAAA,EAAD,CACE5H,SAAU8G,EACVe,MAAO5b,EAAM0b,WACb9gB,KAAMoF,EAAMpF,UAOxB,kBAAC6R,GAAA,EAAD,CAAQC,KAAMgO,EAAc1K,QAAS4K,GACnC,kBAAC,GAAD,CAAc5O,SAAU4O,OChHnBjY,GAAiB,SAACxF,GAAD,OAAqCA,EAAMgF,YAC5Dd,GAAQwB,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMkE,SACxDO,GAAUiB,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMyE,WAC1D9I,GAAS+J,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMrE,UACzD2I,GAAeoB,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMsE,gBAC/DE,GAAekB,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMwE,gBCQtEka,GAAyC,WAAO,IAAD,IAC7CzO,EAAST,KADoC,EAqB/CtD,KAjBF5H,EAJiD,EAIjDA,aACAE,EALiD,EAKjDA,aACAma,EANiD,EAMjDA,QACA3E,EAPiD,EAOjDA,cACA4E,EARiD,EAQjDA,YACAC,EATiD,EASjDA,cACAC,EAViD,EAUjDA,cACAC,EAXiD,EAWjDA,UACAC,EAZiD,EAYjDA,kBACAC,EAbiD,EAajDA,kBACAC,EAdiD,EAcjDA,uBACAC,EAfiD,EAejDA,sBACAC,EAhBiD,EAgBjDA,uBACAC,EAjBiD,EAiBjDA,sBACAC,EAlBiD,EAkBjDA,4BACAC,EAnBiD,EAmBjDA,4BACAC,EApBiD,EAoBjDA,kBAGF,GAAIb,EAAQ7c,YAA0BtB,IAAjBme,EAAQtjB,KAC3B,OAAO,mEAGT,QAAkBmF,IAAdue,EACF,OAAO,qDAGT,IAAMU,EAAY,UAAGzF,EAAcI,cAAjB,aAAG,EAAsBsF,cACrCC,EAAa,UAAG3F,EAAcY,eAAjB,aAAG,EAAuB8E,cACvCE,EAAcrE,KAAOsE,KAAKlB,EAAQtjB,KAAKukB,aAAaxF,OAAO,OAC3D0F,EAAYnB,EAAQtjB,KAAKykB,WAAavE,KAAOsE,KAAKlB,EAAQtjB,KAAKykB,WAAW1F,OAAO,OAEvF,OACE,kBAACjN,GAAA,EAAD,CAAOqD,UAAWP,EAAO+N,MACvB,kBAAC,GAAD,CACEpL,SAAUoM,EAAoBH,EAAcxH,QAAU,KACtDvE,YAAaoM,EACblM,iBAAkBsM,EAClB9M,KAAMlO,IAER,kBAAC,GAAD,CACEsO,SAAUqM,EAAoBH,EAAczH,QAAU,KACtDvE,YAAasM,EACbpM,iBAAkBuM,EAClB/M,KAAMhO,IAER,kBAACsR,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMC,WAAS,EAACxV,MAAI,EAAC0V,GAAI,GAAIa,WAAY,UACvC,kBAAChB,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,GACb,kBAACtJ,GAAA,EAAD,CAAYC,QAAS,MAArB,gBAEF,kBAACkJ,GAAA,EAAD,CAAMC,WAAS,EAACxV,MAAI,EAAC0V,GAAI,EAAG+F,QAAS,YACnC,kBAACnP,GAAA,EAAD,CAAQsC,KAAM,QAAS4Q,IAAKjB,EAAehS,QAASuS,GACjDM,GAEH,kBAAC9S,GAAA,EAAD,CAAQsC,KAAM,QAAS4Q,IAAKlB,EAAe/R,QAASqS,GACjDM,GAEH,yBAAKjP,UAAWP,EAAO+P,YACrB,8BAAUC,UAAQ,EAACF,IAAKnB,EAAajI,MAAOoI,EAAWvO,UAAWP,EAAOiQ,WACzE,kBAAC,GAAD,CAAShK,SAAU0I,EAAa3kB,QAAS,4BAI/C,kBAAC6b,GAAA,EAAD,CAAMvV,MAAI,EAACwV,WAAS,EAACE,GAAI,GAAI+F,QAAQ,aAAahG,QAAS,GACzD,kBAACF,GAAA,EAAD,CAAMvV,MAAI,GACR,kBAACoM,GAAA,EAAD,CAAYC,QAAQ,WAApB,iBAA6CgT,IAE/C,kBAAC9J,GAAA,EAAD,CAAMvV,MAAI,GACR,kBAACoM,GAAA,EAAD,CAAYC,QAAQ,WACjBkT,EAAS,sBAAkBA,GAAlB,mBAIhB,kBAAChK,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,GAAD,KAAa8I,IAEf,kBAACjJ,GAAA,EAAD,CAAMvV,MAAI,EAACwV,WAAS,EAACE,GAAI,GAAI+F,QAAS,YACpC,kBAACnP,GAAA,EAAD,CAAQC,QAAS0S,GAAjB,aAOGW,GAA8C,SAAC5S,GAAW,IAAD,EAC1BrB,KAAlCkU,EAD4D,EAC5DA,WAAYZ,EADgD,EAChDA,kBAEpB,OACE,kBAAClQ,GAAA,EAAD,eAAQC,KAAMpP,QAAQigB,EAAWnc,QAAS4O,QAAS2M,GAAuBjS,GACxE,kBAAC,GAAD,QAKArB,GAAW,WACf,IAAMyS,EAAUtS,YAAYgU,IACtBD,EAAa/T,YAAYgU,IACzBrG,EAAgB3N,YAAYgU,IAC5B/b,EAAe+H,YAAYgU,IAC3B7b,EAAe6H,YAAYgU,IALZ,EAO0B9M,oBAAS,GAPnC,oBAOdyL,EAPc,KAOKsB,EAPL,OAQ0B/M,oBAAS,GARnC,oBAQd0L,EARc,KAQKsB,EARL,OAUqB5G,KAAlCE,EAVa,EAUbA,iBAAkB7V,EAVL,EAUKA,YAEpBwb,EAAoBvT,uBAAY,WACpCjI,GAAY,KACX,CAACA,IAEEkb,EAAyBjT,uBAAY,WACzCqU,GAAkB,KACjB,CAACA,IAEEnB,EAAwBlT,uBAAY,WACxCqU,GAAkB,KACjB,CAACA,IAEElB,EAAyBnT,uBAAY,WACzCsU,GAAkB,KACjB,CAACA,IAEElB,EAAwBpT,uBAAY,WACxCsU,GAAkB,KACjB,CAACA,IAEEjB,EAA8BrT,uBAClC,SAAC1L,GACCsZ,EAAiB,CAAEO,OAAQ7Z,EAAKpC,OAElC,CAAC0b,IAGG0F,EAA8BtT,uBAClC,SAAC1L,GACCsZ,EAAiB,CAAEe,QAASra,EAAKpC,OAEnC,CAAC0b,IAGG+E,EAAcpE,iBAA4B,MAC1CqE,EAAgBrE,iBAA0B,MAC1CsE,EAAgBtE,iBAA0B,MAuBhD,MAAO,CACLlW,eACAE,eACAya,oBACAD,oBACAD,UA1BgB5M,mBAAQ,WACxB,QAAqB3R,IAAjBme,EAAQtjB,KAAZ,CAD8B,MAKIsjB,EAAQtjB,KAAlCmlB,EALsB,EAKtBA,UAAWC,EALW,EAKXA,WAEbC,EADsC,YAA1B1G,EAAcY,QACD6F,EAAaD,EAE5C,QAAmBhgB,IAAfkgB,EAIJ,OAAQ1G,EAAcI,QACpB,IAAK,MACH,OAAOsG,EAAWC,IACpB,QACE,OAAOvkB,KAAKC,UAAUqkB,EAAWE,IAAK,KAAM,OAE/C,CAACjC,EAAQtjB,KAAM2e,EAAcI,OAAQJ,EAAcY,UAQpDwF,aACAzB,UACA3E,gBACA4E,cACAE,gBACAD,gBACAK,yBACAC,wBACAC,yBACAC,wBACAC,8BACAC,8BACAC,oBACAc,oBACAC,oBACAM,mBAAoB7c,IAIlBwL,GAAYC,cAAW,WAC3B,MAAO,CACLuO,KAAM,CACJvL,MAAO,QACP0F,QAAS,QAEX6H,WAAY,CACVvT,SAAU,YAEZyT,SAAU,CACRzT,SAAU,WACVqU,SAAU,SACVrO,MAAO,GACP+G,OAAQ,GACRuH,KAAM,GACNC,IAAK,GACLpF,QAAS,OChNTpM,GAAYC,cAAW,iBAAO,CAClCsG,UAAW,CACTuD,QAAS,OACT1J,SAAU,EACVmH,SAAU,EACV7L,WAAY,QAIVgB,GAAW,WAAO,IAAD,EACqBwF,KAAlCE,EADa,EACbA,mBAAoBK,EADP,EACOA,UAE5BgP,qBAAU,WACR,IAAMC,EAAMtP,IACZ,OAAO,WACLsP,EAAIC,WAEL,CAACvP,EAAoBK,IAExBgP,qBAAU,WACR,OAAO,WACLhP,OAED,CAACA,KAGSmP,GAtCmB,WAChC,IAAMnR,EAAST,KAGf,OAFAtD,KAGE,kBAAC,KAAD,CAAWsE,UAAWP,EAAO8F,WAC3B,kBAAC,GAAD,MACA,kBAAC,GAAD,QCTOsL,GAAuB,WAClC,IAAM9lB,EAAW0M,KAEX7F,EAAqB6J,sBAAW,uCAAC,WAAOtQ,GAAP,SAAAC,EAAA,sEACxBL,EACX+lB,GAAgBlf,mBAAmBzG,IAFA,mFAAD,sDAInC,CAACJ,IAEEgH,EAAsB0J,sBAAW,uCAAC,WAAOtQ,GAAP,SAAAC,EAAA,sEACzBL,EACX+lB,GAAgB/e,oBAAoB5G,IAFA,mFAAD,sDAIpC,CAACJ,IAQJ,MAAO,CACL+G,kBAPwB2J,sBAAW,sBAAC,sBAAArQ,EAAA,sEACvBL,EACX+lB,GAAgBhf,qBAFkB,mFAInC,CAAC/G,IAIF6G,qBACAG,wBCHE0L,GAAoC,CACxC9Q,MAAO,GACPgR,SAAU,GACVoT,MAAO,KAqGHrV,GAAW,SAACqB,GAA8B,IACtCsB,EAAatB,EAAbsB,SACAzM,EAAuBif,KAAvBjf,mBAeR,MAAO,CACLkM,SAdarC,uBAAY,cAAU,IAenCmC,aAbmBnC,sBAAW,uCAAC,WAAOoC,GAAP,SAAAzS,EAAA,sEACzBwG,EAAmB,CACvB/B,QAA0B,MAAjBgO,EAAOkT,MAChBpkB,MAAOkR,EAAOlR,MACdgR,SAAUE,EAAOF,WAJY,OAM3BU,GACFA,IAP6B,2CAAD,sDAS7B,CAACA,EAAUzM,IAKZA,uBAIEoN,GAAYC,cAAW,iBAAO,CAClC+F,SAAU,CACRC,WAAY,QAID+L,GAhIkC,SAACjU,GAChD,IAAM0C,EAAST,KAD2C,EAEvBtD,GAASqB,GAApCa,EAFkD,EAElDA,aAAcE,EAFoC,EAEpCA,SAEtB,OACE,kBAACI,GAAA,EAAD,CAAMiH,MAAO,CAAElD,MAAO,MACpB,kBAAC9D,GAAA,EAAD,CAAYvP,MAAO,kBAACuN,GAAA,EAAD,CAAYC,QAAQ,MAApB,wBACnB,kBAACgC,GAAA,EAAD,KACE,kBAAC,KAAD,CACEX,cAAeA,GACfK,SAAUA,EACVO,SAAUT,IAET,SAACwH,GACA,IAAMpT,EAAUoT,EAAYC,aAC5B,OACE,kBAAC,KAAD,KACE,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,KAAD,CAAO9W,KAAK,UACT,SAACxD,GAAgC,IACxBoT,EAAgBpT,EAAhBoT,MAAOlL,EAASlI,EAATkI,KACf,OACE,kBAACmL,GAAA,EAAD,eACEyE,WAAS,EACT3R,MAAO3B,QAAQ0D,EAAKoL,SAAWpL,EAAK/B,OACpCyC,MAAM,cACNqI,QAAQ,YACJmC,QAMd,kBAAC+G,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,KAAD,CAAO9W,KAAK,aACT,SAACxD,GAAgC,IACxBoT,EAAgBpT,EAAhBoT,MAAOlL,EAASlI,EAATkI,KACf,OACE,kBAACmL,GAAA,EAAD,eACEyE,WAAS,EACT3R,MAAO3B,QAAQ0D,EAAKoL,SAAWpL,EAAK/B,OACpCyC,MAAM,WACN8B,KAAK,WACL6I,aAAc,MACdtC,QAAQ,YACJmC,QAMd,kBAAC+G,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,KAAD,CAAO9W,KAAK,UACT,SAACxD,GAAgC,IACxBoT,EAAUpT,EAAVoT,MACR,OACE,kBAACwH,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,QAAyB,MAAhB3H,EAAM4H,MACfC,SAAU,SAACC,EAAGH,GACZd,EAAYU,cAAc,QAASI,EAAU,IAAM,MAErDvX,KAAK,WACLuK,MAAM,YAGVnF,MAAM,sBAMhB,kBAACuR,GAAA,EAAD,CAAMvV,MAAI,EAACwV,WAAS,EAACE,GAAI,GAAIN,MAAO,CAAEmB,WAAY,WAChD,kBAACjK,GAAA,EAAD,CACEwG,SAAU7Q,EACV2M,KAAK,QACL9I,KAAK,SACLuG,QAAS,YACTlD,MAAM,YACNsN,kBAAgB,EAChBvD,WAAS,IAEPjR,GAAW,SACZA,GAAW,kBAACyU,GAAA,EAAD,CAAkBzG,UAAWP,EAAOuF,SAAUrG,KAAM,eClHzE3J,GAAiB,SAACxF,GAAD,OAAmCA,EAAM9C,UAE1DukB,IADsB/b,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAM/B,UAC/CyH,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMxC,SCqC9E0O,GAAW,WAAO,IACd3J,EAAwB8e,KAAxB9e,oBAQR,MAAO,CACLmf,cARoBzV,sBAAW,uCAC/B,WAAO9N,GAAP,SAAAvC,EAAA,sEACQ2G,EAAoB,CAAE1D,IAAK,CAACV,KADpC,2CAD+B,sDAI/B,CAACoE,MAQCiN,GAAYC,cAAW,iBAAO,CAClCvN,QAAS,CACP4Y,eAAgB,gBAIL6G,GAjDkC,SAACpU,GAChD,IAAM0C,EAAST,KACPkS,EAAkBxV,KAAlBwV,cAEArmB,EAASkS,EAATlS,KAER,OACE,kBAACqT,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KACE,kBAACjC,GAAA,EAAD,CAAYC,QAAS,UAAWuD,UAAW,OAA3C,WAGA,kBAACxD,GAAA,EAAD,CAAYC,QAAS,KAAMuD,UAAW,OACnC9U,EAAK8B,QAGV,kBAACqf,GAAA,EAAD,CAAahM,UAAWP,EAAO/N,SAC7B,kBAAC,GAAD,CACE9C,MAAO,uCACPsZ,QAAS,4CACT7J,SAAU,kBAAM6S,EAAcrmB,EAAK8C,MAEnC,kBAAC0O,GAAA,EAAD,CAAQsC,KAAK,SAAb,sBCMJjD,GAAW,WAAO,IAAD,EACcqH,oBAAS,GADvB,oBACdgK,EADc,KACAC,EADA,KAEblb,EAAsB+e,KAAtB/e,kBAEFmb,EAAoBxR,uBAAY,WACpCuR,GAAYD,KACX,CAACA,EAAcC,IAMlB,OAJAyD,qBAAU,WACH3e,MACJ,CAACA,IAEG,CACLib,eACAC,aACAC,sBAIWmE,GApDgB,WAC7B,IAAMC,EAAexV,YAAYoV,IADE,EAESvV,KAApCqR,EAF2B,EAE3BA,aAAcE,EAFa,EAEbA,kBAEtB,OACE,oCACE,kBAACnO,GAAA,EAAD,CAAQC,KAAMgO,EAAc1K,QAAS4K,GACnC,kBAAC,GAAD,CAAa5O,SAAU4O,KAEzB,kBAAC3H,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAACpJ,GAAA,EAAD,CACED,QAAQ,WACRwR,UAAW,kBAAC,KAAD,MACXtR,QAAS2Q,GAHX,gBAQF,kBAAC3H,GAAA,EAAD,CAAMC,WAAS,EAACxV,MAAI,EAACyV,QAAS,EAAGC,GAAI,IAClC4L,EAAa3kB,SAASkT,KAAI,SAACnT,GAC1B,OACE,kBAAC6Y,GAAA,EAAD,CAAMvV,MAAI,EAACrC,IAAKjB,EAAQkB,GAAI8X,GAAI,GAC9B,kBAAC,GAAD,CAAa5a,KAAM4B,YC5B7BuS,GAAYC,cAAW,iBAAO,CAClCsG,UAAW,CACT7K,WAAY,GACZC,cAAe,QAaJ2W,GATgB,WAC7B,IAAM7R,EAAST,KACf,OACE,kBAAC,KAAD,CAAWgB,UAAWP,EAAO8F,WAC3B,kBAAC,GAAD,Q,UCAOgM,GAAoB,WAC/B,IAAMxmB,EAAW0M,KACXpF,EAAQwJ,YAAYnF,IACpBvJ,EAAS0O,YAAYnF,IAErB8a,EAAgB/V,uBACpB,SAACtQ,GACC,IAAMc,EAAQyU,GAAiB,IAC/B,OAAO3V,EAAS0L,GAAa/D,gBAAb,2BAAkCvH,GAAlC,IAA0CmW,YAAarV,QAEzE,CAAClB,IAGGwH,EAAckJ,uBAClB,SAACtQ,GACC,OAAOJ,EAAS0L,GAAalE,YAAYpH,MAE3C,CAACJ,IAGGyH,EAAeiJ,uBACnB,SAACtO,GACC,OAAOpC,EAAS0L,GAAajE,aAAa,CAAErF,cAE9C,CAACpC,IAGG0H,EAAgBgJ,uBACpB,SAACtQ,GACC,OAAOJ,EAAS0L,GAAahE,cAActH,MAE7C,CAACJ,IAGG0mB,EAAqBhW,uBAAY,WACrC,IAAMtQ,EAAS,CACb8B,KAAMoF,EAAMpF,KACZC,QAASmF,EAAMnF,QACfC,UAEF,OAAOsF,EAActH,KACpB,CAACsH,EAAeJ,EAAMpF,KAAMoF,EAAMnF,QAASC,IAS9C,MAAO,CACLqkB,gBACAE,YATkBjW,sBAAW,uCAC7B,WAAOtQ,GAAP,SAAAC,EAAA,sEACQL,EAAS0L,GAAa9D,iBAAiBxH,IAD/C,2CAD6B,sDAI7B,CAACJ,IAMD0H,gBACAF,cACAkf,qBACAjf,iBCsCEkJ,GAAW,WAAO,IACdgW,EAAgBH,KAAhBG,YAEFnK,EAAyD9L,uBAAY,SAAC6H,GAC1EA,EAAMkE,OAAO5R,WACZ,IAIH,MAAO,CACLqU,UAHgBD,iBAAyB,MAIzC0H,cACAnK,gBAIEvI,GAAYC,cAAW,iBAAO,CAClCvN,QAAS,CACP4Y,eAAgB,YAElBqH,aAAc,CACZ7I,QAAS,QAEX8I,YAAa,CACX/W,YAAa,QAIFgX,GAxG4B,SAAC9U,GAAW,IAC7ClS,EAASkS,EAATlS,KACF4U,EAAST,KACT9D,EAAOW,YAAYC,IAH2B,EAIJJ,KAAxCgW,EAJ4C,EAI5CA,YAAazH,EAJ+B,EAI/BA,UAAW1C,EAJoB,EAIpBA,YAC1BpZ,EAAS,UAAM+M,GAAQ,GAAd,uBAA+BrQ,EAAK4G,MAEnD,OACE,kBAACyM,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KACE,kBAACkH,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAACtJ,GAAA,EAAD,CAAYC,QAAS,UAAWuD,UAAW,OAA3C,cAGA,kBAACxD,GAAA,EAAD,CAAYC,QAAS,KAAMuD,UAAW,OACnC9U,EAAK8D,OAGV,kBAAC2W,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAACgG,GAAA,EAAD,OAEF,kBAACnG,GAAA,EAAD,CAAMC,WAAS,EAACxV,MAAI,EAAC0V,GAAI,GAAID,QAAS,GACpC,kBAACF,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAACtJ,GAAA,EAAD,CAAYC,QAAS,UAAWuD,UAAW,OAA3C,mBAID9U,EAAKinB,QAAQlS,KAAI,WAAWiB,GAAO,IAAflS,EAAc,EAAdA,KACnB,OACE,kBAAC2W,GAAA,EAAD,CAAMvV,MAAI,EAACrC,IAAKmT,GACd,kBAACkR,GAAA,EAAD,CAAMhe,MAAOpF,EAAMyN,QAAS,kBAKpC,kBAACkJ,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAACgG,GAAA,EAAD,OAEF,kBAACnG,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAACjH,GAAA,EAAD,CACEyE,WAAS,EACTlP,MAAM,eACNqI,QAAQ,WACR+J,MAAOtb,EAAKyW,YACZuG,QAASN,EACTrE,WAAY,CACVwC,SAAUuE,EACV9G,aACE,kBAACC,GAAA,EAAD,CAAgBnH,SAAS,OACvB,kBAAC,GAAD,CAASyJ,SAAUuE,EAAWxgB,QAAO,8BAM/C,kBAAC6b,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAACtJ,GAAA,EAAD,uDACA,kBAAC,GAAD,0CACgCtR,EAAKyW,YADrC,6DACoGnT,OAK1G,kBAAC6d,GAAA,EAAD,CAAahM,UAAWP,EAAO/N,SAC7B,kBAAC,GAAD,CACE9C,MAAO,oCACPyP,SAAU,kBAAMqT,EAAY,CAAErjB,IAAK,CAACxD,EAAK8C,QAEzC,kBAAC0O,GAAA,EAAD,CAAQsC,KAAK,SAAb,c,qBCtCJjD,GAAW,SAACqB,GAAgC,IACxCiV,EAAwBjV,EAAxBiV,UAAWC,EAAalV,EAAbkV,SAD4B,EAEnBlP,mBAAmB,IAFA,oBAExCmP,EAFwC,KAEhCC,EAFgC,OAGjBpP,mBAAyB,IAHR,oBAGxCuJ,EAHwC,KAG/B8F,EAH+B,OAIFrP,mBAAyC,IAJvC,oBAIxCsP,EAJwC,KAIzBC,EAJyB,OAKbvP,mBAI/B,IAT4C,oBAKxCwP,EALwC,KAK1B5e,EAL0B,KAW/C6e,GAA4BR,EAAWG,GACvCM,GAAoBP,EAAQG,EAAeC,GAC3CI,GAAgBH,EAAcH,GAE9B,IAAMO,EAAmBlX,uBACvB,SAAChK,EAAcyU,GACb,IAAM0M,EAAW1M,EAAUgM,EAAOW,OAAO,CAACphB,IAASygB,EAAOpiB,QAAO,SAACC,GAAD,OAAUA,IAAS0B,KAEhFwgB,GACFA,EAAS3F,EAAQxc,QAAO,SAACC,GAAD,OAAU6iB,EAASphB,SAASzB,EAAK0B,UAG3D0gB,EAAUS,KAEZ,CAACX,EAAUE,EAAW7F,EAAS4F,IAG3BY,EAAqBrX,uBACzB,SAACvR,GACCyJ,GAAU,SAACof,GAAD,mBAAC,eAAYA,GAAb,IAAgB5lB,OAAQjD,SAEpC,CAACyJ,IAGH,MAAO,CACL2Y,UACA4F,SACAS,mBACAG,uBAIE9T,GAAYC,cAAW,iBAAO,CAClC+T,UAAW,CACThK,OAAQ,KAEViK,WAAY,CACV9H,aAAc,OAIZqH,GAA8B,SAClCR,EACAG,GAEA1B,qBAAU,WACJuB,GACFG,EAAUH,KAEX,CAACA,EAAWG,KAGXM,GAAsB,SAC1BP,EACAG,EACAC,GACI,IACI9Q,EAAqBN,KAArBM,iBACRiP,qBAAU,WACR,IAAMyC,EAAab,EACbc,EAA2B,GAEjCjB,EAAOvhB,SAAQ,SAAChD,GACTulB,EAAWvlB,IACdwlB,EAAerT,KAAKnS,QAiBvB,CAACukB,EAAQG,EAAeC,EAAqB9Q,KAG5CkR,GAAkB,SACtBvnB,EACAinB,GACI,IC/JJgB,EACAC,EACAC,ED8JQ/R,EAAoBL,KAApBK,gBAEFgS,EAAY9X,uBAAY,WAC5B,OAAO8F,EAAgBpW,KACtB,CAACA,EAAQoW,IAENiS,EAAa/X,uBACjB,SAAC9Q,GACCynB,EAAWznB,EAAIyH,SAEjB,CAACggB,IC1KHgB,ED6KeG,EC5KfF,ED4K0BG,ECzK1B/C,qBAAU,WACR,IAAIgD,GAAc,EAYlB,OAVAL,IAAOM,MAAK,SAAC5nB,IACV2nB,GAAeJ,EAAUvnB,MACzB6nB,OAAM,SAACC,GACR,IAAKH,GAAeH,EAClBA,EAAQM,QACH,IAAKH,EACV,MAAMG,KAIH,WACLH,GAAc,KAEf,CAACL,EAAMC,EAAWC,KD4JRO,GA3JsC,SAAC9W,GAAW,IAAD,EACIrB,GAASqB,GAAnEmV,EADsD,EACtDA,OAAQ5F,EAD8C,EAC9CA,QAASqG,EADqC,EACrCA,iBAAkBG,EADmB,EACnBA,mBACrCrT,EAAST,KAEf,OACE,kBAACsG,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,GAAIzF,UAAWP,EAAOwT,YAAY,kBAACxH,GAAA,EAAD,OACjD,kBAACnG,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,GAAD,CAAaqI,YAAa,0BAA2BtB,kBAAmBsG,EAAoB7P,WAAS,IACrG,kBAACnG,GAAA,EAAD,CAAKkD,UAAWP,EAAOuT,WACrB,kBAAC,KAAD,KACE,kBAACtT,GAAA,EAAD,KACG4M,EAAQ1M,KAAI,SAAC7P,GACZ,OACE,yBAAKrC,IAAKqC,EAAKpC,IACb,kBAACkS,GAAA,EAAD,CAAUnS,IAAKqC,EAAKpC,IAClB,kBAACoS,GAAA,EAAD,KACE,kBAACkG,GAAA,EAAD,CACE6N,KAAK,QACLnV,KAAK,QACLoV,eAAa,EACb7N,QAASgM,EAAO1gB,SAASzB,EAAK0B,MAC9B2U,SAAU,SAACgG,GAAD,OACRuG,EAAiB5iB,EAAK0B,KAAM2a,EAAE5E,OAAOtB,aAI3C,kBAAChG,GAAA,EAAD,CAAcrI,QAAS9H,EAAKpB,kBEtB5CmP,GAAW,SAACD,GAAmC,IAC3CpM,EAAkBoM,EAAlBpM,KAAMqgB,EAAYjU,EAAZiU,QACR1iB,EAAsC,GAU5C,OARKqC,GAAwB,IAAhBA,EAAK8D,SAChBnG,EAAOqC,KAAO,kBAGO,IAAnBqgB,EAAQvc,SACVnG,EAAO0iB,QAAU,6BAGZ1iB,GAoGHsM,GAAW,SAACqB,GAAiC,IACzCsB,EAAatB,EAAbsB,SACAmT,EAAkBD,KAAlBC,cAqBR,MAAO,CAAE5T,aAnBYnC,sBAAW,uCAC9B,WAAOoC,EAA+BsG,GAAtC,iBAAA/Y,EAAA,sEACuBomB,EAAc,CACjC/f,KAAMoM,EAAOpM,KACb9C,KAAMkP,EAAOpM,KACbuiB,YAAanW,EAAOpM,KACpB1E,KAAM8Q,EAAOiU,UALjB,OACQhmB,EADR,SAOQwF,EAASxF,EAAsCwF,QAEvC+M,EACZA,IAEA8F,EAAcE,UAAU,CAAEC,OAAQhT,EAAM7H,UAZ5C,2CAD8B,wDAgB9B,CAAC+nB,EAAenT,MAMdW,GAAYC,cAAW,iBAAO,CAClC+F,SAAU,CACRC,WAAY,IAEdgP,SAAU,CACRnZ,UAAW,GACXoZ,aAAc,GACdC,YAAa,IAEfC,SAAU,CACRD,YAAa,QAIFE,GAzIwC,SAACtX,GACtD,IAAM0C,EAAST,KACPpB,EAAiBlC,GAASqB,GAA1Ba,aAER,OACE,oCACE,kBAACM,GAAA,EAAD,CAAMiH,MAAO,CAAElD,MAAO,MACpB,kBAAC9D,GAAA,EAAD,CAAYvP,MAAO,kBAACuN,GAAA,EAAD,CAAYC,QAAQ,MAApB,2BACnB,kBAACgC,GAAA,EAAD,KACE,kBAAC,KAAD,CACEX,cAAe,CACbhM,KAAM,GACNqgB,QAAS,IAEXhU,SAAUA,GACVO,SAAUT,IAET,SAACwH,GACA,IAAMpT,EAAUoT,EAAYC,aAC5B,OACE,kBAAC,KAAD,KACE,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,KAAD,CAAO9W,KAAK,SACT,SAACxD,GAAgC,IACxBoT,EAAgBpT,EAAhBoT,MAAOlL,EAASlI,EAATkI,KACf,OACE,kBAACmL,GAAA,EAAD,eACEyE,WAAS,EACT3R,MAAO3B,QAAQ0D,EAAKoL,SAAWpL,EAAK/B,OACpCyC,MAAM,qBACNqI,QAAQ,YACJmC,QAMd,kBAAC+G,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,KAAD,CAAO9W,KAAK,YACT,SAACxD,GAAkC,IAC1BoT,EAAgBpT,EAAhBoT,MAAOlL,EAASlI,EAATkI,KACf,OACE,oCACE,kBAAC,GAAD,CACE4e,SAAU,SAAC7f,GACTgT,EAAYU,cACV,UACA1T,EAAMwN,KAAI,qBAAGnO,UAGjBugB,UAAWzT,EAAM4H,QAElB9S,EAAKoL,SAAWpL,EAAK/B,OACpB,kBAAC6K,GAAA,EAAD,CACEC,QAAS,UACTlD,MAAO,QACP8G,UAAWP,EAAO2U,UAEjB/gB,EAAK/B,YAQnB8T,EAAYhW,OAAOkV,QAClB,kBAACgB,GAAA,EAAD,CAAMvV,MAAI,EAACwV,WAAS,EAACE,GAAI,GAAIN,MAAO,CAAEmB,WAAY,WAChD,kBAAC,GAAD,KAAUlB,EAAYhW,OAAOkV,SAGjC,kBAACgB,GAAA,EAAD,CAAMvV,MAAI,EAACwV,WAAS,EAACE,GAAI,GAAIN,MAAO,CAAEmB,WAAY,WAChD,kBAACjK,GAAA,EAAD,CACEwG,SAAU7Q,EACV2M,KAAK,QACL9I,KAAK,SACLuG,QAAS,YACTlD,MAAM,YACNsN,kBAAgB,EAChBvD,WAAS,IAEPjR,GAAW,SACZA,GAAW,kBAACyU,GAAA,EAAD,CAAkBzG,UAAWP,EAAOuF,SAAUrG,KAAM,gBC9BlFjD,GAAW,WAAO,IAAD,EACiB6V,KAA9Bhf,EADa,EACbA,YAAaC,EADA,EACAA,aADA,EAEcuQ,oBAAS,GAFvB,oBAEdgK,EAFc,KAEAC,EAFA,KAIfK,EAAqB5R,uBACzB,SAACvR,GACC,OAAOsI,EAAatI,KAEtB,CAACsI,IAGG4a,EAAsB3R,uBAC1B,SAACvR,GACC,OAAOqI,EAAY,CAAErF,QAAShD,MAEhC,CAACqI,IAGG2a,EAAoBzR,uBACxB,SAAC4K,EAAYpZ,GACX,OAAOsF,EAAY,CAAEtF,WAEvB,CAACsF,IAGG0a,EAAoBxR,uBAAY,WACpCuR,GAAYD,KACX,CAACA,EAAcC,IAElB,MAAO,CACLD,eACAM,qBACAJ,oBACAG,sBACAF,sBAIElO,GAAYC,cAAW,iBAAO,CAClCqO,YAAa,CACXrI,WAAY,QAEdsI,aAAc,CACZtI,WAAY,QAEdwI,QAAS,CACP3S,UAAW,QAIAwZ,GArIa,WAC1B,IAAM7U,EAAST,KADiB,EAEOnD,YAAYnF,IAA3CtE,EAFwB,EAExBA,MAAOC,EAFiB,EAEjBA,MAAOC,EAFU,EAEVA,aAChBnF,EAAS0O,YAAYnF,IACrBiX,EAAU9R,YAAYnF,IAJI,EAY5BgF,KALFuR,EAP8B,EAO9BA,kBACAF,EAR8B,EAQ9BA,aACAK,EAT8B,EAS9BA,oBACAF,EAV8B,EAU9BA,kBACAG,EAX8B,EAW9BA,mBAGF,OACE,kBAACvQ,GAAA,EAAD,KACE,kBAACgC,GAAA,EAAD,CAAQC,KAAMgO,EAAc1K,QAAS4K,GACnC,kBAAC,GAAD,CAAgB5O,SAAU4O,KAE5B,kBAAC3H,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMvV,MAAI,EAACyV,QAAS,EAAGD,WAAS,EAACE,GAAI,IACnC,kBAACH,GAAA,EAAD,CAAMvV,MAAI,GACR,kBAACsM,GAAA,EAAD,CACED,QAAQ,WACRwR,UAAW,kBAAC,KAAD,MACXtR,QAAS2Q,GAHX,oBAQAU,GACA,kBAACrI,GAAA,EAAD,CAAMvV,MAAI,GACR,kBAAC,GAAD,CACE8d,aAAc1gB,EACdqf,kBAAmBa,EACnBS,YAAa,wBAKpB1b,EAAMmD,OAAS,GACd,kBAAC+P,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAACH,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACtBpT,EAAMwN,KAAI,SAAC2U,GACV,OACE,kBAACjP,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,EAAG/X,IAAK6mB,EAAK5mB,IAC1B,kBAAC,GAAD,CAAU9C,KAAM0pB,UAO3B5G,GACC,kBAACrI,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,GAAIzF,UAAWP,EAAOgO,SACnC,kBAACtR,GAAA,EAAD,CAAYC,QAAQ,MAApB,mCAGkBpM,IAArBqC,EAAMkB,YAA4BlB,EAAMkB,WAAa,GACpD,kBAAC+R,GAAA,EAAD,CAAMC,WAAS,EAACxV,MAAI,EAAC0V,GAAI,GAAID,QAAS,EAAGc,WAAW,UAClD,kBAAChB,GAAA,EAAD,CAAMvV,MAAI,GACR,kBAAC,GAAD,CACE8W,QAASxU,EAAMnF,QACfof,QAASha,EACT4Z,SAAUkB,KAGd,kBAAC9H,GAAA,EAAD,CAAMvV,MAAI,EAACiQ,UAAWP,EAAO6N,kBACLtd,IAArBqC,EAAM0b,YAA4B1b,EAAM0b,WAAa,GACpD,kBAACC,GAAA,EAAD,CACE5H,SAAU8G,EACVe,MAAO5b,EAAM0b,WACb9gB,KAAMoF,EAAMpF,YChFxB+R,GAAYC,cAAW,iBAAO,CAClCsG,UAAW,CACT7K,WAAY,GACZC,cAAe,QAIN6Z,GAAsB,WACjC,IAAM/U,EAAST,KAGf,OAFAtD,KAGE,kBAAC,KAAD,CAAWsE,UAAWP,EAAO8F,WAC3B,kBAAC,GAAD,QAKA7J,GAAW,WAAO,IACd+V,EAAuBF,KAAvBE,mBAERhB,qBAAU,WACR,IAAMC,EAAMe,IACZ,OAAO,WACLf,EAAIC,WAEL,CAACc,K,UC5BOzc,GAAiB,SAACxF,GAAD,OAAkCA,EAAM3B,SACzD4mB,GAAevf,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAM4C,SAC/DsiB,GAAexf,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAM6C,SAC/DsiB,GAAgBzf,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAMM,UAChE8kB,GAAsB1f,0BAAeF,IAAgB,SAACxF,GAAD,OAAWA,EAAM8C,gBAEtEgE,GAAkBpB,0BAAeyf,GAAeF,IAAc,SAAC3kB,EAAQsC,GAAW,IACrFyiB,EAAc/kB,EAAd+kB,UACR,QAASA,GAAkC,IAArBA,EAAUtf,SAAkC,IAAjBnD,EAAMmD,U,sGCyFnDmG,GAAW,WAAO,IACd4N,EAAmBH,KAAnBG,eAMR,MAAO,CACLwL,qBAL2BrZ,sBAAW,uCAAC,WAAO9N,GAAP,SAAAvC,EAAA,sEACjCke,EAAe,CAAE3b,GAAI6W,SAAS7W,IAAO,CAAEic,OAAQ,MAAOQ,QAAS,WAD9B,2CAAD,sDAErC,CAACd,MAOSyL,GAnFoC,SAAChY,GAAW,IACrD3K,EAAU2K,EAAV3K,MACA0iB,EAAyBpZ,KAAzBoZ,qBAER,OACE,kBAACE,GAAA,EAAD,CAAgBrV,UAAWhD,MACzB,kBAACsY,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,kBACA,kBAACA,GAAA,EAAD,mBACA,kBAACA,GAAA,EAAD,mBACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,UAAjB,aAKJ,kBAACC,GAAA,EAAD,KACGljB,EAAMwN,KAAI,SAAC7P,GACV,IAAMwlB,EAAMxK,OACNyK,EAAYzK,KAAOsE,KAAKtf,EAAK0lB,SAC7BC,EAAiB3K,KAAOsE,KAAKtf,EAAK4lB,cAGpCC,EAAgB,GAYpB,OATEA,EAD4B,OAA1B7lB,EAAKhC,MAAMke,WACG,WACPtc,QAAQI,EAAK0lB,UAAYD,EAAUK,SAASN,GACrC,UACPG,EAAeI,QAAQP,GAChB,WAEA,SAIhB,kBAACJ,GAAA,EAAD,CAAUznB,IAAKqC,EAAKrC,IAAIqoB,KACtB,kBAACX,GAAA,EAAD,KAAYrlB,EAAKrC,IAAIqoB,KACrB,kBAACX,GAAA,EAAD,KAAYrlB,EAAKrC,IAAIsoB,KACrB,kBAACZ,GAAA,EAAD,KAAYrlB,EAAKrC,IAAIuoB,KACrB,kBAACb,GAAA,EAAD,KAAYrlB,EAAKhC,MAAMY,MACvB,kBAACymB,GAAA,EAAD,KAAYrlB,EAAKhC,MAAM0D,MACvB,kBAAC2jB,GAAA,EAAD,KAAYQ,GACZ,kBAACR,GAAA,EAAD,KACGrlB,EAAK0lB,QAAL,UACMC,EAAe9L,OAxBT,MAuBZ,cAC6C4L,EAAU5L,OAxB3C,OAuBZ,iBAIH,kBAACwL,GAAA,EAAD,CAAWC,MAAM,UACf,kBAAC/P,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGgG,QAAQ,UAClC,kBAAClG,GAAA,EAAD,CAAMvV,MAAI,GACR,kBAAC,KAAD,CAAY4O,KAAK,QAAQrC,QAAS,kBAAMwY,EAAqB/kB,EAAKrC,IAAIqoB,OACpE,kBAAC,KAAD,kBC7EXG,GAAsB,WACjC,IAAMnrB,EAAW0M,KACXid,EAAe7Y,YAAYsa,IAC3BxB,EAAgB9Y,YAAYsa,IAE5B5jB,EAAckJ,uBAAY,SAACpJ,GAC/B,OAAOtH,EAASqrB,GAAe7jB,YAAYF,MAC1C,CAACtH,IAEE6H,EAAe6I,uBAAY,SAAC3L,GAChC,OAAO/E,EAASqrB,GAAexjB,aAAa9C,MAC3C,CAAC/E,IAEE8H,EAAoB4I,uBACxB,SAACtQ,GACC,OAAOJ,EAASqrB,GAAevjB,kBAAkB1H,MAEnD,CAACJ,IAGGsrB,EAA2B5a,uBAAY,WAC3C,IAAMtQ,EAAS,CACb8B,KAAMynB,EAAaznB,KACnBC,QAASwnB,EAAaxnB,QACtB4C,OAAQ6kB,GAEV,OAAO9hB,EAAkB1H,KACxB,CAAC0H,EAAmB6hB,EAAaznB,KAAMynB,EAAaxnB,QAASynB,IAEhE,MAAO,CACLpiB,cACAK,eACAC,oBACAwjB,6BC0BE3a,GAAW,WAAO,IAAD,EACiBwa,KAA9B3jB,EADa,EACbA,YAAaK,EADA,EACAA,aACf8hB,EAAe7Y,YAAYsa,IACzB5iB,EAA8BmhB,EAA9BnhB,WAAYrG,EAAkBwnB,EAAlBxnB,QAASD,EAASynB,EAATznB,KAEvB8I,EAAa4L,mBAAQ,WACzB,QAAmB3R,IAAfuD,EAAJ,CAGA,IAAM+iB,EAAUtgB,KAAKE,KAAK3C,EAAarG,GACvC,OAAO8I,KAAKugB,IAAID,EAASrpB,MACxB,CAACsG,EAAYrG,EAASD,IAEnBupB,EAA8B/a,uBAClC,SAACvR,GACC,OAAO0I,EAAa,CAAEiiB,UAAW3qB,MAEnC,CAAC0I,IAGGsa,EAAoBzR,uBACxB,SAAC0R,EAAoDhH,GACnD,OAAO5T,EAAY,CAAEtF,KAAMkZ,EAAQ,MAErC,CAAC5T,IAGG6a,EAAsB3R,uBAC1B,SAAC6H,GACC,IAAMpZ,EAAMsa,SAASlB,EAAMkE,OAAOrB,MAAO,IACzC,OAAO5T,EAAY,CAAErF,QAAShD,MAEhC,CAACqI,IAGH,MAAO,CACLwD,aACA2e,eACAnhB,aACA2Z,oBACAsJ,8BACApJ,wBAIWqJ,GAxGe,WAC5B,IAAMhC,EAAe5Y,YAAYsa,IAC3BxB,EAAgB9Y,YAAYsa,IAC5B7jB,EAAeuJ,YAAYsa,IAC3BxI,EAAU9R,YAAYsa,IAJM,EAa9Bza,KANF3F,EAPgC,EAOhCA,WACA2e,EARgC,EAQhCA,aACAnhB,EATgC,EAShCA,WACA2Z,EAVgC,EAUhCA,kBACAE,EAXgC,EAWhCA,oBACAoJ,EAZgC,EAYhCA,4BAGF,YAAmBxmB,IAAfuD,EACK,KAIP,kBAAC+R,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,IACpBmI,GACD,kBAACrI,GAAA,EAAD,CAAMC,WAAS,EAACxV,MAAI,EAAC0V,GAAI,IACvB,kBAACH,GAAA,EAAD,CAAMvV,MAAI,GACR,kBAAC,GAAD,CACE+d,YAAa,uBACbD,aAAc8G,EAAcE,UAC5BrI,kBAAmBgK,MAKzB7I,GACA,kBAACrI,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAACtJ,GAAA,EAAD,CAAYC,QAAQ,MAApB,sBAGH7I,EAAa,GACZ,kBAAC+R,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAAC,GAAD,CAAcrT,MAAOqiB,UAGTzkB,IAAf+F,GAA4BxC,EAAa,GACxC,kBAAC+R,GAAA,EAAD,CAAMvV,MAAI,EAAC0V,GAAI,IACb,kBAACiR,GAAA,EAAD,CACE/W,UAAU,MACVsO,MAAO1a,EACPtG,KAAM8I,EAAa,EACnB4gB,mBAAoBrkB,EACpBskB,aAAc1J,EACd2J,YAAanC,EAAaxnB,QAC1B4pB,oBAAqB1J,OCtD3BpO,GAAYC,cAAW,iBAAO,CAClCsG,UAAW,CACT7K,WAAY,GACZC,cAAe,QAINoc,GAAwB,WACnC,IAAMtX,EAAST,KAGf,OAFAtD,KAGE,kBAAC,KAAD,CAAWsE,UAAWP,EAAO8F,WAC3B,kBAAC,GAAD,MACA,kBAAC,GAAD,QAKA7J,GAAW,WAAO,IACd2a,EAA6BH,KAA7BG,yBAER5F,qBAAU,WACR,IAAMC,EAAM2F,IAEZ,OAAO,WACL3F,EAAIC,WAEL,CAAC0F,KC3BOW,GAAwB,WACnC,IAAMvX,EAAST,KAGf,OAFAtD,KAGE,kBAAC,KAAD,CAAWsE,UAAWP,EAAO8F,WAC3B,kBAAC,GAAD,CAAUzX,SAAO,IACjB,kBAAC,GAAD,QAKAkR,GAAYC,cAAW,iBAAO,CAClCsG,UAAW,CACTuD,QAAS,OACT1J,SAAU,EACVmH,SAAU,EACV7L,WAAY,QAIVgB,GAAW,WAAO,IAAD,EACwBwF,KAArCG,EADa,EACbA,sBAAuBI,EADV,EACUA,UAE/BgP,qBAAU,WACR,IAAMC,EAAMrP,IACZ,OAAO,WACLqP,EAAIC,WAEL,CAACtP,IAEJoP,qBAAU,WACR,OAAO,WACLhP,OAED,CAACA,KCiBSjB,GA7Ce,CAC5B,CACE9R,KAAM,IACNuoB,OAAO,EACPtX,UAAW,kBAA0B,kBAAC,IAAD,CAAUuX,GAAI1oB,MAErD,CACEE,KAAMF,EACNmR,UAAWf,GACX4B,OAAQ,CACN,CACE9R,KAAMF,EACNyoB,OAAO,EACPtX,UAAW5B,MAIjB,CACErP,KAAMF,EACNmR,UAAWW,GACXE,OAAQ,CACN,CACE9R,KAAMF,EACNmR,UAAWiR,IAEb,CACEliB,KAAMF,EACNmR,UAAW2R,IAEb,CACE5iB,KAAMF,EACNmR,UAAW6U,IAEb,CACE9lB,KAAMF,EACNmR,UAAWoX,IAEb,CACEroB,KAAMF,EACNmR,UAAWqX,O,kNCpDZ,IAAMza,GAAOjB,KAAOC,IAAV,MCqBXG,GAAW,WAAO,IACdtL,EAAYoL,KAAZpL,QAERqgB,qBAAU,WACR,IAAMC,EAAMtgB,IACZ,OAAO,WACLsgB,EAAIC,WAEL,CAACvgB,KAGS+mB,GA1Be,SAACpa,GAC7B,IAAMqa,EAAavb,YAAY5M,IAG/B,OAFAyM,KAEI0b,EACK,oCAAGra,EAAME,UAIhB,kBAAC,GAAD,KACE,kBAACwJ,GAAA,EAAD,CAAkB9H,KAAM,OCgBf0Y,GApB8B,SAACta,GAC5C,IAAMua,EAAWC,cAEXC,EAAY3b,YAChB4b,oCAAyB,CACvBzoB,iBAAkB0oB,MAItB,OAAIF,EAAUxoB,kBAA0C,gBAAtBsoB,EAASK,SAClC,kBAAC,IAAD,CAAUT,GAAG,MAGjBM,EAAUxoB,kBAA0C,gBAAtBsoB,EAASK,SAIrC,oCAAG5a,EAAME,UAHP,kBAAC,IAAD,CAAUia,GAAG,iBCXlBU,GAAa9Q,SAAS+Q,eAAe,QAE3C,GAAID,GAAY,CACd,IAAMtY,GAAUwY,cAChBC,IAASC,OACP,kBAAC,IAAD,CAAeltB,MAAOA,IACpB,kBAACmtB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAend,MAAOA,IACpB,kBAAC,IAAD,CAAQuE,QAASA,IACf,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAYmB,YAAaD,SAKjCoX,O","file":"static/js/main.7f9335f8.chunk.js","sourcesContent":["export interface IHttpRequestErrorInfo {\r\n  statusCode: number;\r\n  message: string;\r\n}\r\n\r\nexport class HttpRequestError extends Error {\r\n  constructor (public status: number, public message: string) {\r\n    super(message);\r\n    Object.setPrototypeOf(this, HttpRequestError.prototype);\r\n  }\r\n\r\n  getInfo(): IHttpRequestErrorInfo {\r\n    return {\r\n      statusCode: this.status,\r\n      message: this.message,\r\n    };\r\n  }\r\n}\r\n","import 'whatwg-fetch';\r\nimport { HttpRequestError } from '../errors/HttpResponseError';\r\nimport { API_URL } from 'src/constants/settings';\r\nimport { store } from 'src/store';\r\nimport { actions as sessionActions } from 'src/containers/Session/reducer';\r\n\r\nconst targetApi = API_URL;\r\n\r\nclass AppFetcher {\r\n  headers: Record<string, string>;\r\n\r\n  constructor(headers?: Record<string, string>) {\r\n    this.headers = headers || {};\r\n  }\r\n\r\n  setHeader(prop: string, val: string) {\r\n    this.headers = {\r\n      ...this.headers,\r\n      [prop]: val\r\n    }\r\n  }\r\n\r\n  removeHeader(prop: string) {\r\n    if (this.headers) {\r\n      delete this.headers[prop];\r\n    }\r\n  }\r\n\r\n  async fetch(input: RequestInfo, init?: RequestInit): Promise<Response> {\r\n    let processedInput;\r\n\r\n    if (typeof input !== 'string') {\r\n      input.url.replace('{api}', targetApi);\r\n\r\n      processedInput = {\r\n        ...input,\r\n        url: input.url,\r\n      };\r\n    } else {\r\n      processedInput = input.replace('{api}', targetApi);\r\n    }\r\n\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      ...this.headers,\r\n      ...init?.headers,\r\n    };\r\n\r\n    return window.fetch(processedInput, {\r\n      credentials: 'include',\r\n      ...init,\r\n      headers,\r\n    });\r\n  }\r\n\r\n  async fetchJson<T>(\r\n    input: RequestInfo,\r\n    init?: RequestInit,\r\n  ): Promise<T> {\r\n    try {\r\n      const res = await this.fetch(input, init);\r\n\r\n      if (res.status < 300) {\r\n        return (await res.json()) as T;\r\n      } else {\r\n        const data = (await res.json()) as { statusCode: number; message: string };\r\n        throw new HttpRequestError(data.statusCode, data.message);\r\n      }\r\n    } catch (err) {\r\n      if (err instanceof HttpRequestError) {\r\n        switch (err.status) {\r\n          case 401:\r\n            store.dispatch(sessionActions.setSessionExpired({ isExpired: true }));\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AppFetcher();\r\n","export const IS_DEV = process.env.NODE_ENV === 'development';\r\nexport const API_URL = IS_DEV ? 'http://localhost:3000' : '';\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsAuthLogin, IApiResultAuthLogin } from './types';\r\n\r\nexport default async (params: IApiParamsAuthLogin): Promise<IApiResultAuthLogin> => {\r\n  fetcher.removeHeader(`Authorization`);\r\n  localStorage.removeItem('auth');\r\n\r\n  const result = await fetcher.fetchJson<IApiResultAuthLogin>(\r\n    '{api}/auth/token',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(params)\r\n    }\r\n  );\r\n\r\n\r\n  if (result) {\r\n    localStorage.setItem('auth', JSON.stringify(result));\r\n    fetcher.setHeader(`Authorization`, `Bearer ${result.token}`);\r\n  }\r\n\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultAuthLogout } from './types';\r\n\r\n// eslint-disable-next-line @typescript-eslint/require-await\r\nexport default async (): Promise<IApiResultAuthLogout> => {\r\n  fetcher.removeHeader(`Authorization`);\r\n  localStorage.removeItem('auth');\r\n  return { isLogout: true }\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultAuthLogin } from './types';\r\nimport { HttpRequestError } from 'src/lib/errors/HttpResponseError';\r\n\r\n// eslint-disable-next-line @typescript-eslint/require-await\r\nexport default async (): Promise<IApiResultAuthLogin> => {\r\n  const rawAuth = localStorage.getItem('auth');\r\n\r\n  if (rawAuth === null) {\r\n    throw new HttpRequestError(401, 'No jwt presents')\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n  const result: IApiResultAuthLogin = JSON.parse(rawAuth);\r\n  fetcher.setHeader(`Authorization`, `Bearer ${result.token}`);\r\n\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsAuthAccount, IApiResultAuthAccount } from './types';\r\n\r\nexport default async (params: IApiParamsAuthAccount): Promise<IApiResultAuthAccount | null> => {\r\n  const result = await fetcher.fetchJson<IApiResultAuthAccount>(\r\n    '{api}/auth/account',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(params)\r\n    }\r\n  );\r\n\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsAuthAccounts, IApiResultAuthAccounts } from './types';\r\n\r\nexport default async (_params?: IApiParamsAuthAccounts): Promise<IApiResultAuthAccounts> => {\r\n  const result = await fetcher.fetchJson<IApiResultAuthAccounts>(\r\n    '{api}/auth/accounts',\r\n    {\r\n      method: 'GET',\r\n    }\r\n  );\r\n\r\n  return result;\r\n};\r\n","import login from './login';\r\nimport logout from './logout';\r\nimport me from './me';\r\nimport account from './account';\r\nimport accounts from './accounts';\r\nimport remove from './remove';\r\n\r\nexport default {\r\n  remove,\r\n  account,\r\n  accounts,\r\n  login,\r\n  logout,\r\n  me,\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultAuthRemove, IApiParamsAuthRemove } from './types';\r\n\r\nexport default async (params: IApiParamsAuthRemove): Promise<IApiResultAuthRemove | null> => {\r\n  const result = await fetcher.fetchJson<IApiResultAuthRemove['deleted']>(\r\n    '{api}/auth/accounts',\r\n    {\r\n      method: 'DELETE',\r\n      body: JSON.stringify(params),\r\n    }\r\n  );\r\n\r\n  return result ? { deleted: result } : null;\r\n};\r\n","import auth from './auth';\r\nimport keys from './keys';\r\nimport repos from './repos';\r\n\r\nexport default {\r\n  auth,\r\n  keys,\r\n  repos,\r\n};\r\n","import list from './list';\r\nimport create from './create';\r\nimport remove from './remove';\r\nimport storage from './storage';\r\nimport archive from './archive';\r\nimport restore from './restore';\r\nimport preview from './preview';\r\nimport byIds from './byIds';\r\n\r\nexport default {\r\n  list,\r\n  create,\r\n  remove,\r\n  storage,\r\n  archive,\r\n  restore,\r\n  preview,\r\n  byIds,\r\n}\r\n","import qs from 'qs';\r\nimport fetcher from 'src/lib/utils/fetch';\r\nimport { IApiKeyEntry, IApiPager } from '../types';\r\n\r\nexport interface IApiParamsKeysList {\r\n  page?: number;\r\n  perPage?: number;\r\n  search?: string;\r\n  isArchived?: boolean;\r\n}\r\n\r\nexport interface IApiResultKeysList {\r\n  items: IApiKeyEntry[];\r\n  pager: IApiPager;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysList = {}): Promise<IApiResultKeysList> => {\r\n  const { page, perPage, search, isArchived } = params;\r\n  const query = qs.stringify({ page, perPage, search, archived: isArchived ? 1 : 0 }, { addQueryPrefix: true });\r\n\r\n  const result = await fetcher.fetchJson<IApiResultKeysList>(\r\n    `{api}/entry/list${query}`,\r\n    {\r\n      method: 'GET',\r\n    }\r\n  );\r\n\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultKeysCreate, IApiParamsKeysCreate } from './types';\r\n\r\nexport default async (params: IApiParamsKeysCreate): Promise<IApiResultKeysCreate> => {\r\n  const result = await fetcher.fetchJson<IApiResultKeysCreate['key']>(\r\n    '{api}/entry/create',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(params),\r\n    }\r\n  );\r\n\r\n  return { key: result };\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsKeysRemove, IApiResultKeysRemove } from './types';\r\n\r\nexport default async (params: IApiParamsKeysRemove): Promise<IApiResultKeysRemove> => {\r\n  const result = await fetcher.fetchJson<IApiResultKeysRemove['deleted']>(\r\n    `{api}/entry/${params.id.toString()}`,\r\n    {\r\n      method: 'DELETE',\r\n    }\r\n  );\r\n\r\n  return { deleted: result };\r\n};\r\n","import qs from 'qs';\r\nimport fetcher from 'src/lib/utils/fetch';\r\nimport { IApiPager, IApiStorageItem } from 'src/lib/api/types';\r\n\r\nexport interface IApiParamsKeysStorage {\r\n  page: number;\r\n  perPage: number;\r\n  filter?: {\r\n    entryName?: string;\r\n  }\r\n}\r\n\r\nexport interface IApiResultKeysStorage {\r\n  items: IApiStorageItem[];\r\n  pager: IApiPager;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysStorage): Promise<IApiResultKeysStorage> => {\r\n  const query = qs.stringify(params, { addQueryPrefix: true });\r\n  return await fetcher.fetchJson<IApiResultKeysStorage>(`{api}/key/storage${query}`, {\r\n    method: 'GET',\r\n  });\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiKeyEntry } from 'src/lib/api/types';\r\n\r\nexport interface IApiParamsKeysArchive {\r\n  id: number;\r\n}\r\n\r\nexport interface IApiResultKeysArchive {\r\n  entry: IApiKeyEntry;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysArchive): Promise<IApiResultKeysArchive> => {\r\n  const result = await fetcher.fetchJson<IApiResultKeysArchive['entry']>(\r\n    `{api}/entry/archive/${params.id.toString()}`,\r\n    {\r\n      method: 'POST',\r\n    }\r\n  );\r\n\r\n  return { entry: result };\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiKeyEntry } from 'src/lib/api/types';\r\n\r\nexport interface IApiParamsKeysRestore {\r\n  id: number;\r\n}\r\n\r\nexport interface IApiResultKeysRestore {\r\n  entry: IApiKeyEntry;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysRestore): Promise<IApiResultKeysRestore> => {\r\n  const result = await fetcher.fetchJson<IApiResultKeysRestore['entry']>(\r\n    `{api}/entry/restore/${params.id.toString()}`,\r\n    {\r\n      method: 'POST',\r\n    }\r\n  );\r\n\r\n  return { entry: result };\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiPrivateJWK, IApiPublicJWK } from '../types';\r\n\r\nexport interface IApiParamsKeysPreview {\r\n  id: number;\r\n  isByEntry?: boolean;\r\n}\r\nexport interface IApiResultKeysPreview {\r\n  publicKey: { jwk: IApiPublicJWK; pem: string };\r\n  privateKey?: { jwk: IApiPrivateJWK; pem: string };\r\n  activatesAt: number;\r\n  expiresAt: number;\r\n  entryId: number;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysPreview): Promise<IApiResultKeysPreview> => {\r\n  const { id, isByEntry } = params;\r\n  const targetUrl = isByEntry ? `{api}/key/byEntry/${id.toString()}` : `{api}/key/${id.toString()}`;\r\n  return await fetcher.fetchJson<IApiResultKeysPreview>(targetUrl);\r\n};\r\n","import qs from 'qs';\r\nimport fetcher from 'src/lib/utils/fetch';\r\nimport { IApiKeyEntry } from '../types';\r\n\r\nexport interface IApiParamsKeysByIds {\r\n  ids: number[];\r\n}\r\n\r\nexport interface IApiResultKeysByIds {\r\n  items: IApiKeyEntry[];\r\n}\r\n\r\nexport default async (params: IApiParamsKeysByIds): Promise<IApiResultKeysByIds> => {\r\n  const { ids } = params;\r\n  const query = qs.stringify({ ids }, { addQueryPrefix: true });\r\n\r\n  const result = await fetcher.fetchJson<IApiResultKeysByIds>(`{api}/entry/byIds${query}`, {\r\n    method: 'GET',\r\n  });\r\n\r\n  return result;\r\n};\r\n","import { create } from './create';\r\nimport { list } from './list';\r\nimport { remove } from './remove';\r\n\r\nexport default {\r\n  create,\r\n  list,\r\n  remove,\r\n}\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsReposCreate, IApiResultReposCreate } from './types';\r\n\r\nexport const create = async (\r\n  params: IApiParamsReposCreate,\r\n): Promise<IApiResultReposCreate | null> => {\r\n  const result = await fetcher.fetchJson<IApiResultReposCreate['created']>('{api}/repo/create', {\r\n    method: 'POST',\r\n    body: JSON.stringify(params),\r\n  });\r\n\r\n  return result ? { created: result } : null;\r\n};\r\n","import qs from 'qs';\r\nimport fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultReposList } from './types';\r\n\r\nexport interface IApiParamsReposList {\r\n  page?: number;\r\n  perPage?: number;\r\n}\r\nexport const list = async (params: IApiParamsReposList = {}): Promise<IApiResultReposList> => {\r\n  const query = qs.stringify(params, { addQueryPrefix: true });\r\n  const result = await fetcher.fetchJson<IApiResultReposList>(`{api}/repo/list${query}`);\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsReposRemove, IApiResultReposRemove } from './types';\r\n\r\nexport const remove = async (params: IApiParamsReposRemove): Promise<IApiResultReposRemove> => {\r\n  const result = await fetcher.fetchJson<IApiResultReposRemove['deleted']>('{api}/repo/remove', {\r\n    method: 'DELETE',\r\n    body: JSON.stringify(params),\r\n  });\r\n\r\n  return { deleted: result ? result : [] };\r\n};\r\n","export const ROUTES = {\r\n  AUTH: '/auth',\r\n  AUTH_LOGIN: '/auth/login',\r\n  DASHBOARD: '/dashboard',\r\n  DASHBOARD_SPECIES: '/dashboard/species',\r\n  ACCOUNTS: '/dashboard/accounts',\r\n  KEYS: '/dashboard/keys',\r\n  REPOS: '/dashboard/repos',\r\n  STORAGE: '/dashboard/journal',\r\n  ARCHIVE: '/dashboard/archive',\r\n}\r\n","import { ROUTES } from \"./routes\";\r\n\r\nexport const MAIN_MENU_LINKS = [\r\n  { id: 1, path: ROUTES.KEYS , name: 'keys', title: 'Active keys', icon: 'vpn_key', isAdminOnly: false },\r\n  { id: 3, path: ROUTES.ARCHIVE , name: 'archive', title: 'Archived keys', icon: 'unarchive', isAdminOnly: false },\r\n  { id: 2, path: ROUTES.REPOS, name: 'repos', title: 'Repositories', icon: 'apps', isAdminOnly: false },\r\n  { id: 4, path: ROUTES.STORAGE , name: 'storage', title: 'Storage', icon: 'inbox', isAdminOnly: false },\r\n];\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IStoreSession } from './types';\r\nimport {\r\n  IApiResultAuthLogin,\r\n  IApiParamsAuthLogin,\r\n  IApiResultAuthLogout,\r\n} from 'src/lib/api/auth/types';\r\nimport { MAIN_MENU_LINKS } from 'src/constants/mainMenu';\r\n\r\ntype S = IStoreSession;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'SESSION';\r\n\r\nconst pureState: IStoreSession = {\r\n  isUserAuthorized: false,\r\n  isAlreadyFetched: false,\r\n  isSessionExpired: false,\r\n  mainMenuLinks: [],\r\n  errors: {\r\n    loginForm: null,\r\n  },\r\n};\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  setUserData: (state: S, action: PA<IApiResultAuthLogin>): S => {\r\n    const { token, account } = action.payload;\r\n\r\n    return {\r\n      ...state,\r\n      token,\r\n      account,\r\n      isUserAuthorized: Boolean(token),\r\n    };\r\n  },\r\n  defineMenuLinks: (state: S): S => {\r\n    const isAdmin = Boolean(state.account?.isAdmin);\r\n    const mainMenuLinks = MAIN_MENU_LINKS.filter((item) => {\r\n      return isAdmin || !item.isAdminOnly;\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      mainMenuLinks,\r\n    };\r\n  },\r\n  setSessionExpired: (state: S, action: PA<{ isExpired: boolean }>): S => {\r\n    if (state.isUserAuthorized) {\r\n      return {\r\n        ...state,\r\n        isSessionExpired: action.payload.isExpired,\r\n      };\r\n    } else {\r\n      return {\r\n        ...state,\r\n        token: undefined,\r\n        isUserAuthorized: false,\r\n      };\r\n    }\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchLoginUser = createAsyncThunk(\r\n  `${prefix}/REQ_LOGIN`,\r\n  async (params: IApiParamsAuthLogin): Promise<IApiResultAuthLogin> => {\r\n    return await api.auth.login(params);\r\n  },\r\n);\r\n\r\nconst fetchMe = createAsyncThunk(\r\n  `${prefix}/REQ_ME`,\r\n  async (): Promise<IApiResultAuthLogin> => {\r\n    return await api.auth.me();\r\n  },\r\n);\r\n\r\nconst fetchLogout = createAsyncThunk(\r\n  `${prefix}/REQ_LOGOUT`,\r\n  async (): Promise<IApiResultAuthLogout> => {\r\n    return await api.auth.logout();\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: pureState,\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    [fetchLoginUser, fetchMe].forEach((trigger) => {\r\n      builder.addCase(trigger.pending, (state) => {\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            loginForm: null,\r\n          },\r\n        };\r\n      });\r\n\r\n      builder.addCase(trigger.fulfilled, (state, action) => {\r\n        const { token, account, hosts } = action.payload;\r\n        return {\r\n          ...state,\r\n          token,\r\n          account,\r\n          isUserAuthorized: Boolean(token),\r\n          isSessionExpired: false,\r\n          isAlreadyFetched: true,\r\n          privateHost: hosts.private,\r\n          publicHost: hosts.public,\r\n        };\r\n      });\r\n\r\n      builder.addCase(trigger.rejected, (state, action) => {\r\n        const { error } = action;\r\n        if (error === undefined) {\r\n          return state;\r\n        }\r\n\r\n        const parsedError = error.message?.includes('No jwt presents')\r\n          ? {}\r\n          : {\r\n              loginForm:\r\n                error.code === '500'\r\n                  ? 'Server error. Please, try again.'\r\n                  : 'Wrong login/password pair.',\r\n            };\r\n\r\n        return {\r\n          ...pureState,\r\n          isAlreadyFetched: true,\r\n          errors: {\r\n            ...state.errors,\r\n            ...parsedError,\r\n          },\r\n        };\r\n      });\r\n    });\r\n\r\n    builder.addCase(fetchLogout.fulfilled, (state) => {\r\n      return {\r\n        ...state,\r\n        token: undefined,\r\n        isUserAuthorized: false,\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchLoginUser,\r\n  fetchLogout,\r\n  fetchMe,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IStoreAccounts } from './types';\r\nimport {\r\n  IApiParamsAuthAccount,\r\n  IApiResultAuthAccount,\r\n  IApiResultAuthAccounts,\r\n  IApiResultAuthRemove,\r\n  IApiParamsAuthRemove,\r\n} from 'src/lib/api/auth/types';\r\n\r\ntype S = IStoreAccounts;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'ACCOUNTS';\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  test: (state: S, _action: PA<number>): S => {\r\n    return state;\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchCreateAccount = createAsyncThunk(\r\n  `${prefix}/SUBMIT_ACCOUNT`,\r\n  async (params: IApiParamsAuthAccount, thunkApi): Promise<IApiResultAuthAccount | null> => {\r\n    const result = await api.auth.account(params);\r\n    await thunkApi.dispatch(fetchAccountsList());\r\n    return result;\r\n  },\r\n);\r\n\r\nconst fetchRemoveAccounts = createAsyncThunk(\r\n  `${prefix}/REMOVE_ACCOUNTS`,\r\n  async (params: IApiParamsAuthRemove, thunkApi): Promise<IApiResultAuthRemove | null> => {\r\n    const result = await api.auth.remove(params);\r\n    await thunkApi.dispatch(fetchAccountsList());\r\n    return result;\r\n  },\r\n);\r\n\r\nconst fetchAccountsList = createAsyncThunk(\r\n  `${prefix}/FETCH_LIST`,\r\n  async (): Promise<IApiResultAuthAccounts> => {\r\n    const result = await api.auth.accounts();\r\n    return result;\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: {\r\n    create: {\r\n      error: null,\r\n      loading: false,\r\n    },\r\n    list: {\r\n      error: null,\r\n      loading: false,\r\n      accounts: [],\r\n    },\r\n  },\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCreateAccount.fulfilled, (state, action) => {\r\n      if (action.payload === null) {\r\n        return { ...state, create: { ...state.create, error: true, loading: false } };\r\n      }\r\n      return { ...state, error: null, loading: false };\r\n    });\r\n    builder.addCase(fetchAccountsList.fulfilled, (state, action) => {\r\n      if (action.payload === null) {\r\n        return { ...state, list: { ...state.list, error: true, loading: false, accounts: [] } };\r\n      }\r\n\r\n      const { accounts } = action.payload;\r\n\r\n      return { ...state, list: { ...state.list, error: null, loading: false, accounts } };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchCreateAccount,\r\n  fetchAccountsList,\r\n  fetchRemoveAccounts,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","export const DEFAULT_PAGE_OPTIONS = [4, 8, 16];\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IStoreRepos } from './types';\r\nimport {\r\n  IApiParamsReposCreate,\r\n  IApiResultReposCreate,\r\n  IApiResultReposList,\r\n  IApiParamsReposRemove,\r\n  IApiResultReposRemove,\r\n  IApiParamsReposList,\r\n} from 'src/lib/api/repos/types';\r\nimport { DEFAULT_PAGE_OPTIONS } from 'src/constants/pager';\r\nimport { IApiPager } from 'src/lib/api/types';\r\n\r\ntype S = IStoreRepos;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'REPOS';\r\n\r\nconst pureState: S = {\r\n  create: {\r\n    error: null,\r\n    loading: false,\r\n  },\r\n  list: {\r\n    error: null,\r\n    loading: false,\r\n    items: [],\r\n    pager: {\r\n      page: 1,\r\n      perPage: DEFAULT_PAGE_OPTIONS[0],\r\n    },\r\n    pagerOptions: DEFAULT_PAGE_OPTIONS,\r\n  },\r\n};\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  changePager: (state: S, action: PA<Partial<IApiPager>>): S => {\r\n    return {\r\n      ...state,\r\n      list: {\r\n        ...state.list,\r\n        pager: {\r\n          ...state.list.pager,\r\n          ...action.payload,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  changeSearch: (state: S, action: PA<Partial<{ search?: string }>>): S => {\r\n    return {\r\n      ...state,\r\n      list: {\r\n        ...state.list,\r\n        search: action.payload.search,\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchListRepo = createAsyncThunk(\r\n  `${prefix}/FETCH_LIST`,\r\n  async (params?: IApiParamsReposList): Promise<IApiResultReposList> => {\r\n    return await api.repos.list(params);\r\n  },\r\n);\r\n\r\nconst fetchCreateRepo = createAsyncThunk(\r\n  `${prefix}/SUBMIT_REPO`,\r\n  async (params: IApiParamsReposCreate): Promise<IApiResultReposCreate | null> => {\r\n    const result = await api.repos.create(params);\r\n    return result;\r\n  },\r\n);\r\n\r\nconst fetchRemoveRepos = createAsyncThunk(\r\n  `${prefix}/REMOVE_REPOS`,\r\n  async (params: IApiParamsReposRemove): Promise<IApiResultReposRemove> => {\r\n    const result = await api.repos.remove(params);\r\n    return result;\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: pureState,\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCreateRepo.fulfilled, (state, action) => {\r\n      if (action.payload === null) {\r\n        return { ...state, create: { ...state.create, error: true, loading: false } };\r\n      }\r\n      return { ...state, error: null, loading: false };\r\n    });\r\n\r\n    builder.addCase(fetchListRepo.fulfilled, (state, action) => {\r\n      return {\r\n        ...state,\r\n        list: {\r\n          ...state.list,\r\n          error: null,\r\n          loading: false,\r\n          items: action.payload.items,\r\n          pager: action.payload.pager,\r\n        },\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchCreateRepo,\r\n  fetchListRepo,\r\n  fetchRemoveRepos,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { IStoreStorage } from './types';\r\nimport api from 'src/lib/api';\r\nimport { IApiParamsKeysStorage, IApiResultKeysStorage } from 'src/lib/api/keys/storage';\r\nimport { IApiPager } from 'src/lib/api/types';\r\n\r\ntype S = IStoreStorage;\r\ntype PA<T> = PayloadAction<T>;\r\n\r\nconst prefix = 'STORAGE';\r\n\r\nconst pureState: S = {\r\n  items: [],\r\n  pager: {\r\n    page: 1,\r\n    perPage: 10,\r\n  },\r\n  pagerOptions: [10, 25, 50],\r\n  filter: {},\r\n};\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  changePager: (state: S, action: PA<Partial<IApiPager>>): S => {\r\n    return {\r\n      ...state,\r\n      pager: {\r\n        ...state.pager,\r\n        ...action.payload,\r\n      },\r\n    };\r\n  },\r\n  changeFilter: (state: S, action: PA<Partial<Partial<S['filter']>>>): S => {\r\n    return {\r\n      ...state,\r\n      pager: {\r\n        ...state.pager,\r\n        page: 1,\r\n      },\r\n      filter: {\r\n        ...state.filter,\r\n        ...action.payload,\r\n      }\r\n    };\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchStorageItems = createAsyncThunk(\r\n  `${prefix}/FETCH_STORAGE`,\r\n  async (params: IApiParamsKeysStorage): Promise<IApiResultKeysStorage> => {\r\n    return await api.keys.storage(params);\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: pureState,\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchStorageItems.fulfilled, (state, action) => {\r\n      const { items, pager } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        items,\r\n        pager,\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchStorageItems,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IStoreKeys } from './types';\r\nimport {\r\n  IApiResultKeysRemove,\r\n  IApiParamsKeysRemove,\r\n  IApiParamsKeysCreate,\r\n  IApiResultKeysCreate,\r\n} from 'src/lib/api/keys/types';\r\nimport { IApiParamsKeysArchive, IApiResultKeysArchive } from 'src/lib/api/keys/archive';\r\nimport { IApiParamsKeysRestore, IApiResultKeysRestore } from 'src/lib/api/keys/restore';\r\nimport { IApiParamsKeysList, IApiResultKeysList } from 'src/lib/api/keys/list';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { DEFAULT_PAGE_OPTIONS } from 'src/constants/pager';\r\n\r\ntype S = IStoreKeys;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'KEYS';\r\n\r\nconst pureState: S = {\r\n  list: {\r\n    loading: {\r\n      keys: true,\r\n    },\r\n    errors: {\r\n      keys: null,\r\n    },\r\n    items: [],\r\n    pager: {\r\n      page: 1,\r\n      perPage: 4,\r\n    },\r\n    pagerOptions: DEFAULT_PAGE_OPTIONS,\r\n  },\r\n  edit: {\r\n    loading: false,\r\n    error: null,\r\n  },\r\n};\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  changePager: (state: S, action: PA<Partial<IApiPager>>): S => {\r\n    return {\r\n      ...state,\r\n      list: {\r\n        ...state.list,\r\n        pager: {\r\n          ...state.list.pager,\r\n          ...action.payload,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  changeSearch: (state: S, action: PA<Partial<{ search?: string }>>): S => {\r\n    return {\r\n      ...state,\r\n      list: {\r\n        ...state.list,\r\n        query: action.payload.search,\r\n        pager: {\r\n          ...state.list.pager,\r\n          page: 1,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  reset: () => pureState,\r\n};\r\n\r\n/** Async logic */\r\nconst fetchCreateKey = createAsyncThunk(\r\n  `${prefix}/SUBMIT_KEY`,\r\n  async (params: IApiParamsKeysCreate): Promise<IApiResultKeysCreate> => {\r\n    const result = await api.keys.create(params);\r\n    // await thunkApi.dispatch(listActions.fetchKeysList());\r\n    return result;\r\n  },\r\n);\r\n\r\nconst fetchKeysList = createAsyncThunk(\r\n  `${prefix}/FETCH_KEYS`,\r\n  async (params: IApiParamsKeysList): Promise<IApiResultKeysList> => {\r\n    return await api.keys.list(params);\r\n  },\r\n);\r\n\r\nconst fetchRemoveKeyItem = createAsyncThunk(\r\n  `${prefix}/REMOVE_KEY`,\r\n  async (params: IApiParamsKeysRemove): Promise<IApiResultKeysRemove> => {\r\n    const result = await api.keys.remove(params);\r\n    return result ? result : { deleted: [] };\r\n  },\r\n);\r\n\r\nconst fetchArchiveKeyItem = createAsyncThunk(\r\n  `${prefix}/ARCHIVE_KEY`,\r\n  async (params: IApiParamsKeysArchive): Promise<IApiResultKeysArchive> => {\r\n    return await api.keys.archive(params);\r\n  },\r\n);\r\n\r\nconst fetchRestoreKeyItem = createAsyncThunk(\r\n  `${prefix}/RESTORE_KEY`,\r\n  async (params: IApiParamsKeysRestore): Promise<IApiResultKeysRestore> => {\r\n    return await api.keys.restore(params);\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: pureState,\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(\r\n      fetchKeysList.pending,\r\n      (state): S => {\r\n        return { ...state, list: { ...state.list, loading: {...state.list.loading, keys: true } } };\r\n      },\r\n    );\r\n    builder.addCase(\r\n      fetchKeysList.fulfilled,\r\n      (state, action): S => {\r\n        const { items, pager } = action.payload;\r\n        return { ...state, list: { ...state.list, items, pager, loading: {...state.list.loading, keys: false } } };\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      fetchRemoveKeyItem.fulfilled,\r\n      (state, action): S => {\r\n        const { id } = action.meta.arg;\r\n        const { totalItems } = state.list.pager;\r\n\r\n        return {\r\n          ...state,\r\n          list: {\r\n            ...state.list,\r\n            items: state.list.items.filter((item) => id !== item.id),\r\n            pager: { ...state.list.pager, totalItems: totalItems ? totalItems - 1 : undefined },\r\n          },\r\n        };\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      fetchArchiveKeyItem.fulfilled,\r\n      (state): S => {\r\n        const { totalItems } = state.list.pager;\r\n\r\n        return {\r\n          ...state,\r\n          list: {\r\n            ...state.list,\r\n            pager: { ...state.list.pager, totalItems: totalItems ? totalItems - 1 : undefined },\r\n          },\r\n        };\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      fetchRestoreKeyItem.fulfilled,\r\n      (state): S => {\r\n        const { totalItems } = state.list.pager;\r\n\r\n        return {\r\n          ...state,\r\n          list: {\r\n            ...state.list,\r\n            pager: { ...state.list.pager, totalItems: totalItems ? totalItems - 1 : undefined },\r\n          },\r\n        };\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      fetchCreateKey.fulfilled,\r\n      (state, action): S => {\r\n        const { totalItems } = state.list.pager;\r\n        return {\r\n          ...state,\r\n          list: {\r\n            ...state.list,\r\n            pager: {\r\n              ...state.list.pager,\r\n              totalItems: totalItems ? totalItems + 1 : undefined,\r\n            },\r\n          },\r\n          edit: { ...state.edit, error: true, loading: false, item: action.payload.key },\r\n        };\r\n      },\r\n    );\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchKeysList,\r\n  fetchRemoveKeyItem,\r\n  fetchArchiveKeyItem,\r\n  fetchRestoreKeyItem,\r\n  fetchCreateKey,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IApiParamsKeysPreview, IApiResultKeysPreview } from 'src/lib/api/keys/preview';\r\nimport { AVAIL_PREVIEW_FORMATS, AVAIL_PRIVACY } from './constants';\r\nimport { IStoreKeyPreview } from './types';\r\n\r\ntype S = IStoreKeyPreview;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'KEY_PREVIEW';\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  toggleModal: (state: S, action: PA<{ isOpen?: boolean }>): S => {\r\n    const { isOpen } = action.payload;\r\n\r\n    return {\r\n      ...state,\r\n      modal: {\r\n        ...state.modal,\r\n        isOpen: isOpen === undefined ? !state.modal.isOpen : isOpen,\r\n      },\r\n    };\r\n  },\r\n  setParams: (state: S, action: PA<Partial<S['params']>>): S => {\r\n    return {\r\n      ...state,\r\n      params: {\r\n        ...state.params,\r\n        ...action.payload,\r\n      }\r\n    };\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchKeyPreview = createAsyncThunk(\r\n  `${prefix}/FETCH_KEY`,\r\n  async (params: IApiParamsKeysPreview, _thunkApi): Promise<IApiResultKeysPreview> => {\r\n    const result = await api.keys.preview(params);\r\n    return result;\r\n  },\r\n);\r\n\r\n/** Combine slice reducer and actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: {\r\n    availFormats: AVAIL_PREVIEW_FORMATS,\r\n    availPrivacy: AVAIL_PRIVACY,\r\n    params: {},\r\n    modal: {},\r\n    details: {\r\n      error: null,\r\n      loading: false,\r\n    },\r\n  },\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchKeyPreview.fulfilled, (state, action) => {\r\n      return {\r\n        ...state,\r\n        details: {\r\n          ...state.details,\r\n          error: null,\r\n          loading: false,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchKeyPreview,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","export const AVAIL_PREVIEW_FORMATS = [\r\n  { id: 'jwk', label: 'JWK' },\r\n  { id: 'pem', label: 'PEM' },\r\n];\r\n\r\nexport const AVAIL_PRIVACY = [\r\n  { id: 'private', label: 'PRIVATE' },\r\n  { id: 'public', label: 'PUBLIC' },\r\n];\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as sessionReducer } from 'src/containers/Session/reducer';\r\nimport { reducer as accountsReducer } from 'src/containers/Accounts/reducer';\r\nimport { reducer as reposReducer } from 'src/containers/Repos/reducer';\r\nimport { reducer as storageReducer } from 'src/containers/Storage/reducer';\r\nimport { reducer as keysReducer } from 'src/containers/Keys/reducer';\r\nimport { reducer as keyPreviewReducer } from 'src/containers/KeyPreview/reducer';\r\n\r\nconst reducers = {\r\n  session: sessionReducer,\r\n  keys: keysReducer,\r\n  accounts: accountsReducer,\r\n  repos: reposReducer,\r\n  storage: storageReducer,\r\n  keyPreview: keyPreviewReducer,\r\n}\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport type IStore = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import { fork, takeEvery, put, ForkEffect } from 'redux-saga/effects';\r\nimport { actions } from './reducer';\r\n\r\nexport function* sagaSession(): IterableIterator<ForkEffect<void>> {\r\n  yield fork(menuUpdate);\r\n}\r\n\r\nfunction* menuUpdate() {\r\n  yield takeEvery([\r\n    actions.fetchLoginUser.fulfilled,\r\n    actions.fetchMe.fulfilled,\r\n  ], function* () {\r\n    yield put(actions.defineMenuLinks());\r\n  });\r\n}\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreKeys } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreKeys => state.keys;\r\nexport const keysItemsSelector = createSelector(containerState, (state) => state.list.items);\r\nexport const keysListSelector = createSelector(containerState, (state) => state.list);\r\nexport const keysPagerSelector = createSelector(containerState, (state) => state.list.pager);\r\nexport const keysSearchSelector = createSelector(containerState, (state) => state.list.query);\r\nexport const keysPagerOptionsSelector = createSelector(\r\n  containerState,\r\n  (state) => state.list.pagerOptions,\r\n);\r\nexport const isKeyListEmpty = createSelector(\r\n  keysSearchSelector,\r\n  keysListSelector,\r\n  (search, list) => {\r\n    return (!search || search.length === 0) && !list.loading.keys && list.items.length === 0;\r\n  },\r\n);\r\n\r\nexport const keysRequestSelector = createSelector(keysListSelector, (list) => {\r\n  return {\r\n    loading: list.loading.keys,\r\n    error: list.loading.keys,\r\n    data: {\r\n      items: list.items,\r\n    },\r\n    pager: list.pager,\r\n  };\r\n});\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { fork, put, select, takeEvery } from 'redux-saga/effects';\r\nimport { IApiParamsKeysList } from 'src/lib/api/keys/list';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { actions as keysActions } from './reducer';\r\nimport { keysPagerSelector } from './selectors';\r\n\r\nexport function* sagaKeys() {\r\n  yield fork(reloadKeysList);\r\n}\r\n\r\nfunction* reloadKeysList() {\r\n  yield takeEvery(\r\n    [\r\n      keysActions.fetchCreateKey.fulfilled,\r\n      keysActions.fetchRemoveKeyItem.fulfilled,\r\n      keysActions.fetchArchiveKeyItem.fulfilled,\r\n      keysActions.fetchRestoreKeyItem.fulfilled,\r\n    ],\r\n    function* (action) {\r\n      const pager: IApiPager = yield select(keysPagerSelector);\r\n      const isArchived = [\r\n        keysActions.fetchRestoreKeyItem.fulfilled.toString(),\r\n        keysActions.fetchRemoveKeyItem.fulfilled.toString(),\r\n      ].includes(action.type);\r\n\r\n      const fetchParams: IApiParamsKeysList = {\r\n        page: pager.page,\r\n        perPage: pager.perPage,\r\n        isArchived,\r\n      };\r\n\r\n      if (pager.totalItems) {\r\n        const targetPage = Math.max(Math.ceil(pager.totalItems / pager.perPage), 1);\r\n\r\n        if (targetPage < pager.page) {\r\n          yield put(keysActions.changePager({ page: targetPage }));\r\n        } else {\r\n          yield put<any>(keysActions.fetchKeysList(fetchParams));\r\n        }\r\n      } else {\r\n        yield put<any>(keysActions.fetchKeysList(fetchParams));\r\n      }\r\n    },\r\n  );\r\n}\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreRepos } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreRepos => state.repos;\r\nexport const createFetchSelector = createSelector(containerState, (state) => state.create);\r\nexport const reposListSelector = createSelector(containerState, (state) => state.list);\r\nexport const pagerSelector = createSelector(reposListSelector, (list) => list.pager);\r\nexport const searchSelector = createSelector(reposListSelector, (list) => list.search);\r\nexport const pagerOptionsSelector = createSelector(reposListSelector, (list) => list.pagerOptions);\r\nexport const isEmptySelector = createSelector(reposListSelector, (list) => {\r\n  const { search, loading, items } = list;\r\n  return (!search || search.length === 0) && !loading && items.length === 0;\r\n});\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { fork, put, select, takeEvery } from 'redux-saga/effects';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { actions as reposActions } from './reducer';\r\nimport * as reposSelectors from './selectors';\r\n\r\nexport function* sagaRepos() {\r\n  yield fork(reloadReposListAfterCreationOrDeletion);\r\n}\r\n\r\nfunction* reloadReposListAfterCreationOrDeletion() {\r\n  yield takeEvery(\r\n    [reposActions.fetchCreateRepo.fulfilled, reposActions.fetchRemoveRepos.fulfilled],\r\n    function* (action) {\r\n      const pager: IApiPager = yield select(reposSelectors.pagerSelector);\r\n      const search: string = yield select(reposSelectors.searchSelector);\r\n      const isCreation = action.type === reposActions.fetchCreateRepo.fulfilled.toString();\r\n      const fetchParams = { page: pager.page, perPage: pager.perPage, search };\r\n\r\n      if (isCreation && pager.totalItems) {\r\n        const newPage = Math.ceil(pager.totalItems + 1 / pager.perPage);\r\n        yield put(reposActions.changePager({ page: newPage }))\r\n      } else {\r\n        yield put<any>(reposActions.fetchListRepo(fetchParams));\r\n      }\r\n    },\r\n  );\r\n}\r\n","import { fork, ForkEffect } from 'redux-saga/effects';\r\n\r\nimport { sagaSession } from 'src/containers/Session/saga';\r\nimport { sagaKeys } from 'src/containers/Keys/saga';\r\nimport { sagaRepos } from 'src/containers/Repos/saga';\r\n\r\nexport default function* mainSaga(): IterableIterator<ForkEffect<void>> {\r\n  yield fork(sagaSession);\r\n  yield fork(sagaKeys);\r\n  yield fork(sagaRepos);\r\n}\r\n","import { createStore, applyMiddleware, Middleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nimport rootReducer, { IStore } from './reducer';\r\nimport rootSaga from './saga';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch, AnyAction, PayloadAction, SerializedError } from '@reduxjs/toolkit';\r\nimport { IS_DEV } from './constants/settings';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport function initializeStore(initialState = {}) {\r\n  // ======================================================\r\n  // Middleware Configuration\r\n  // ======================================================\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middleware: Middleware[] = [thunk, sagaMiddleware];\r\n\r\n  if (IS_DEV) {\r\n    middleware.push(createLogger({ collapsed: true }));\r\n  }\r\n\r\n  // ======================================================\r\n  // Enhancer Configuration\r\n  // ======================================================\r\n  const enhancer = applyMiddleware(...middleware);\r\n\r\n  // ======================================================\r\n  // Store Instantiation\r\n  // ======================================================\r\n  const result = createStore(rootReducer, initialState, composeWithDevTools(enhancer));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return result;\r\n}\r\n\r\nexport const store = initializeStore();\r\nexport type AppDispatch = ThunkDispatch<IStore, void, AnyAction>;\r\nexport const useAppDispatch = (): AppDispatch => useDispatch();\r\n\r\nexport type IDispatchReturn<R, P> =\r\n  | { error: SerializedError }\r\n  | PayloadAction<\r\n      R,\r\n      string,\r\n      {\r\n        arg: P;\r\n        requestId: string;\r\n      },\r\n      never\r\n    >;\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.indigo[500],\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  link: colors.blue[800],\r\n  icon: colors.blueGrey[600],\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  divider: colors.grey[200]\r\n};\r\n","import { Palette } from '@material-ui/core/styles/createPalette';\r\nimport { TypographyOptions } from '@material-ui/core/styles/createTypography';\r\n\r\nconst typography: ((palette: Palette) => TypographyOptions) = (palette) => ({\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px',\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px',\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px',\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px',\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px',\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px',\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px',\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px',\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px',\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    lineHeight: '18px',\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px',\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase',\r\n  },\r\n});\r\n\r\nexport default typography;\r\n","import MuiTableHead from './MuiTableHead';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiCardHeader from './MuiCardHeader';\r\n\r\nexport default {\r\n  MuiTableHead,\r\n  MuiTableCell,\r\n  MuiCardHeader,\r\n}\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50],\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    fontSize: 14,\r\n  },\r\n  body: {\r\n    borderBottom: `1px solid ${colors.grey[200]}`,\r\n  },\r\n  head: {\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderBottom: `1px solid ${colors.grey[200]}`,\r\n    color: colors.blueGrey[500],\r\n  }\r\n};\r\n","// import { colors } from '@material-ui/core';\r\n\r\nimport { colors } from \"@material-ui/core\";\r\n\r\nexport default {\r\n  root: {\r\n    borderBottom: `1px solid ${colors.grey[200]}`,\r\n  },\r\n  action: {\r\n    marginRight: 0,\r\n    marginTop: 0,\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n});\r\n\r\nexport default theme;\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreSession } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreSession => state.session;\r\nexport const isUserAuthorized = createSelector(containerState, (state) => state.isUserAuthorized);\r\nexport const isAlreadyFetched = createSelector(containerState, (state) => state.isAlreadyFetched);\r\nexport const isSessionExpired = createSelector(containerState, (state) => state.isSessionExpired);\r\nexport const account = createSelector(containerState, (state) => state.account);\r\nexport const host = createSelector(containerState, (state) => state.host);\r\nexport const mainMenuLinks = createSelector(containerState, (state) => state.mainMenuLinks);\r\nexport const errors = createSelector(containerState, (state) => state.errors);\r\nexport const jwt = createSelector(containerState, (state) => state.token || null);\r\nexport const privateHostSelector = createSelector(containerState, (state) => state.privateHost);\r\nexport const publicHostSelector = createSelector(containerState, (state) => state.publicHost);\r\n","import styled from 'styled-components';\r\n\r\nexport const Grow = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n","import { useCallback } from 'react';\r\nimport { IApiParamsAuthLogin } from 'src/lib/api/auth/types';\r\nimport { useAppDispatch } from 'src/store';\r\nimport { actions as sessionActions } from './reducer';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerSession = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const logout = useCallback(() => {\r\n    return dispatch(sessionActions.fetchLogout());\r\n  }, [dispatch]);\r\n\r\n  const fetchMe = useCallback(() => dispatch(sessionActions.fetchMe()), [dispatch]);\r\n\r\n  const fetchLoginUser = useCallback((params: IApiParamsAuthLogin) => {\r\n    return dispatch(sessionActions.fetchLoginUser(params));\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    logout,\r\n    fetchMe,\r\n    fetchLoginUser,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { Toolbar, Button, Typography } from '@material-ui/core';\r\n\r\nimport * as sessionSelectors from 'src/containers/Session/selectors';\r\n\r\nimport * as S from './styled';\r\nimport { useContainerSession } from 'src/containers/Session/hooks';\r\n\r\nconst TopBar: React.FC = () => {\r\n  const user = useSelector(sessionSelectors.account);\r\n  const { logout } = useHooks();\r\n\r\n  const isLogoutAvail = user !== undefined;\r\n\r\n  return (\r\n    <AppBar position={'static'}>\r\n      <Toolbar>\r\n        <Typography variant={'h4'} color=\"inherit\">\r\n          Orkeystore\r\n        </Typography>\r\n        <S.Grow />\r\n        {isLogoutAvail && (\r\n          <Button color=\"inherit\" onClick={logout}>\r\n            Logout\r\n          </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { logout } = useContainerSession();\r\n\r\n  return {\r\n    logout,\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const BarHolder = styled.div`\r\n`\r\nexport const FormHolder = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n","import styled from 'styled-components';\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\nimport theme from 'src/theme';\r\n\r\nexport const Root = styled(Paper)<{ test?: string }>`\r\n  padding: 10px;\r\n  flex-grow: 1;\r\n  background-color: ${theme.palette.error.light};\r\n  color: ${theme.palette.error.contrastText};\r\n`;\r\n\r\nexport const Message = styled(Typography)`\r\n  padding-left: 15px;\r\n  padding-top: 2px;\r\n`;\r\n\r\nexport const TextWrap = styled(Box)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n`;\r\n","import React from 'react';\r\nimport ErrorOutlineRoundedIcon from '@material-ui/icons/ErrorOutlineRounded';\r\nimport { PaperProps } from '@material-ui/core/Paper';\r\nimport * as S from './styles';\r\n\r\nexport interface IPropsMessage {\r\n  elevation?: number;\r\n  severnity?: string;\r\n  root?: PaperProps;\r\n}\r\n\r\nconst Message: React.FC<IPropsMessage> = (props) => {\r\n  return (\r\n    <S.Root elevation={props.elevation} {...props.root}>\r\n      <S.TextWrap>\r\n        <ErrorOutlineRoundedIcon color=\"inherit\" />\r\n        <S.Message color=\"inherit\">\r\n          { props.children }\r\n        </S.Message>\r\n      </S.TextWrap>\r\n    </S.Root>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  elevation: 0,\r\n  severnity: 'error'\r\n}\r\n\r\nexport default Message;\r\n","import styled from 'styled-components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport const Container = styled.div`\r\n  width: 300px;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Body = styled.div``;\r\n\r\nexport const BodyLine = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const LineItem = styled.div`\r\n  flex-grow: 1;\r\n  margin-bottom: 10px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled(Button)`\r\n  width: 100%;\r\n`;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Formik, Form, Field, FieldProps, FormikErrors, FormikProps } from 'formik';\r\n\r\nimport Message from 'src/components/Message';\r\nimport { errors as userServerErrors } from 'src/containers/Session/selectors';\r\n\r\nimport * as S from './styled';\r\nimport { TextField, CardContent, Card, Typography, CardHeader } from '@material-ui/core';\r\nimport { useContainerSession } from 'src/containers/Session/hooks';\r\n\r\nexport interface IUserLoginData {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst initialValues = { username: '', password: '' };\r\n\r\nconst LoginForm: React.FC = () => {\r\n  const serverErrors = useSelector(userServerErrors);\r\n  const { handleSubmit, validate } = useHooks();\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title={<Typography variant=\"h3\">Sign in</Typography>} />\r\n      <CardContent>\r\n        <S.Container>\r\n          <S.Body>\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validate={validate}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {(_props: FormikProps<IUserLoginData>) => {\r\n                return (\r\n                  <Form>\r\n                    <S.BodyLine>\r\n                      <Field name=\"username\">\r\n                        {(params: FieldProps<string>) => {\r\n                          const { field, meta } = params;\r\n                          return (\r\n                            <TextField\r\n                              error={Boolean(meta.touched && meta.error)}\r\n                              label=\"Login\"\r\n                              variant=\"outlined\"\r\n                              autoComplete=\"current-login\"\r\n                              {...field}\r\n                            />\r\n                          );\r\n                        }}\r\n                      </Field>\r\n                    </S.BodyLine>\r\n                    <S.BodyLine>\r\n                      <Field name=\"password\">\r\n                        {(params: FieldProps<string>) => {\r\n                          const { field, meta } = params;\r\n                          return (\r\n                            <TextField\r\n                              label=\"Password\"\r\n                              variant=\"outlined\"\r\n                              type=\"password\"\r\n                              autoComplete=\"current-password\"\r\n                              error={Boolean(meta.touched && meta.error)}\r\n                              {...field}\r\n                            />\r\n                          );\r\n                        }}\r\n                      </Field>\r\n                    </S.BodyLine>\r\n                    {serverErrors.loginForm && (\r\n                      <S.BodyLine>\r\n                        <Message>{serverErrors.loginForm}</Message>\r\n                      </S.BodyLine>\r\n                    )}\r\n                    <S.BodyLine>\r\n                      <S.LineItem>\r\n                        <S.SubmitButton\r\n                          color=\"secondary\"\r\n                          size=\"large\"\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                        >\r\n                          Войти\r\n                        </S.SubmitButton>\r\n                      </S.LineItem>\r\n                    </S.BodyLine>\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          </S.Body>\r\n        </S.Container>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchLoginUser } = useContainerSession();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (values: IUserLoginData) => {\r\n      await fetchLoginUser(values);\r\n    },\r\n    [fetchLoginUser],\r\n  );\r\n\r\n  const validate = useCallback((values: IUserLoginData) => {\r\n    const { username, password } = values;\r\n    const errors: FormikErrors<typeof values> = {};\r\n\r\n    if (!username || username.length === 0) {\r\n      errors.username = 'Username required';\r\n    }\r\n\r\n    if (!password || password.length === 0) {\r\n      errors.password = 'Password required';\r\n    }\r\n\r\n    return errors;\r\n  }, []);\r\n\r\n\r\n  return {\r\n    validate,\r\n    handleSubmit,\r\n  };\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport TopBar from 'src/components/TopBar';\r\n\r\nimport * as S from './styled';\r\nimport LoginForm from 'src/components/LoginForm';\r\n\r\nexport interface IPropsAuthLayout {}\r\n\r\nconst AuthLayout: React.FC = () => {\r\n  return (\r\n    <S.Wrap>\r\n      <S.BarHolder>\r\n        <TopBar />\r\n      </S.BarHolder>\r\n      <S.FormHolder>\r\n        <LoginForm />\r\n      </S.FormHolder>\r\n    </S.Wrap>\r\n  );\r\n};\r\n\r\nexport default AuthLayout;\r\n","import React from 'react';\r\nimport { Dialog } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { isSessionExpired } from 'src/containers/Session/selectors';\r\nimport LoginForm from 'src/components/LoginForm';\r\n\r\nconst ExpiredSession: React.FC = () => {\r\n  const isExpired = useSelector(isSessionExpired)\r\n\r\n  return (\r\n    <Dialog open={isExpired}>\r\n      <LoginForm />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExpiredSession;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { List, ListItem, ListItemText, ListItemIcon, makeStyles } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nimport { mainMenuLinks } from 'src/containers/Session/selectors';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  iconWrap: {\r\n    maxWidth: 40,\r\n    minWidth: 40,\r\n  },\r\n}));\r\n\r\nconst MainMenu: React.FC = () => {\r\n  const history = useHistory();\r\n  const mainMenu = useSelector(mainMenuLinks);\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <List component=\"nav\">\r\n      {mainMenu.map((item) => {\r\n        return (\r\n          <ListItem key={item.id} button onClick={() => history.push(item.path)}>\r\n            <ListItemIcon className={styles.iconWrap}>\r\n              <Icon>{item.icon}</Icon>\r\n            </ListItemIcon>\r\n            <ListItemText>{item.title}</ListItemText>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default MainMenu;\r\n","import styled from 'styled-components';\r\nimport theme from 'src/theme';\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1 1 auto;\r\n`;\r\nexport const Header = styled.div``;\r\nexport const Body = styled.div`\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  min-width: 0;\r\n`;\r\nexport const Menu = styled.div`\r\n  flex: 0 0 250px;\r\n  background-color: ${theme.palette.background.paper};\r\n`;\r\n\r\nexport const Main = styled.main`\r\n  display: flex;\r\n  background-color: ${theme.palette.background.default};\r\n  flex: 1 1 auto;\r\n  min-width: 0;\r\n`;\r\n","import React from 'react';\r\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\r\n\r\nimport TopBar from 'src/components/TopBar';\r\nimport ExpiredSession from 'src/components/ExpiredSession';\r\nimport MainMenu from 'src/components/MainMenu';\r\n\r\nimport * as S from './styled';\r\n\r\nexport interface IPropsDashboardLayout extends RouteConfigComponentProps {\r\n}\r\n\r\nconst DashboardLayout: React.FC<IPropsDashboardLayout> = (props) => {\r\n  const { route } = props;\r\n  return (\r\n    <S.Wrap>\r\n      <ExpiredSession />\r\n      <S.Header>\r\n        <TopBar />\r\n      </S.Header>\r\n      <S.Body>\r\n        <S.Menu>\r\n          <MainMenu />\r\n        </S.Menu>\r\n        <S.Main>\r\n          {route && route.routes && renderRoutes(route.routes)}\r\n        </S.Main>\r\n      </S.Body>\r\n    </S.Wrap>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","export const generatePassword = (\r\n  length: number,\r\n  charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789',\r\n): string => {\r\n  let retVal = '';\r\n  for (let i = 0, n = charset.length; i < length; ++i) {\r\n    retVal += charset.charAt(Math.floor(Math.random() * n));\r\n  }\r\n  return retVal;\r\n};\r\n","import { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useAppDispatch } from 'src/store';\r\nimport { actions as keysActions } from './reducer';\r\nimport * as keysSelectors from './selectors';\r\nimport { IApiParamsKeysCreate, IApiParamsKeysRemove } from 'src/lib/api/keys/types';\r\nimport { SerializedError } from '@reduxjs/toolkit';\r\nimport { generatePassword } from 'src/lib/utils/generatePassword';\r\nimport { IApiParamsKeysArchive } from 'src/lib/api/keys/archive';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { IApiParamsKeysList } from 'src/lib/api/keys/list';\r\nimport api from 'src/lib/api';\r\nimport { IApiParamsKeysByIds } from 'src/lib/api/keys/byIds';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerKeys = () => {\r\n  const dispatch = useAppDispatch();\r\n  const pager = useSelector(keysSelectors.keysPagerSelector);\r\n  const search = useSelector(keysSelectors.keysSearchSelector);\r\n\r\n  const fetchKeysList = useCallback((params: IApiParamsKeysList) => {\r\n    return dispatch(keysActions.fetchKeysList(params));\r\n  }, [dispatch]);\r\n\r\n  const fetchKeysListWatch = useCallback(() => {\r\n    const params = {\r\n      page: pager.page,\r\n      perPage: pager.perPage,\r\n      search,\r\n    }\r\n    return fetchKeysList(params);\r\n  }, [fetchKeysList, pager.page, pager.perPage, search]);\r\n\r\n  const fetchArchiveListWatch = useCallback(() => {\r\n    const params = {\r\n      page: pager.page,\r\n      perPage: pager.perPage,\r\n      search,\r\n      isArchived: true\r\n    }\r\n    return fetchKeysList(params);\r\n  }, [fetchKeysList, pager.page, pager.perPage, search]);\r\n\r\n  const fetchCreateKey = useCallback(\r\n    async (params: Omit<IApiParamsKeysCreate, 'accessToken'>) => {\r\n      const accessToken = generatePassword(64);\r\n      const result = await dispatch(\r\n        keysActions.fetchCreateKey({\r\n          ...params,\r\n          accessToken,\r\n        }),\r\n      );\r\n\r\n      const { error } = result as { error: SerializedError };\r\n\r\n      if (error) {\r\n        return { error } as { error: SerializedError };\r\n      }\r\n\r\n      return result;\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchRemoveKeyItem = useCallback(\r\n    async (params: IApiParamsKeysRemove) => {\r\n      return await dispatch(keysActions.fetchRemoveKeyItem(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchArchiveKeyItem = useCallback(\r\n    (params: IApiParamsKeysArchive) => {\r\n      return dispatch(keysActions.fetchArchiveKeyItem(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchRestoreKeyItem = useCallback(\r\n    (params: IApiParamsKeysArchive) => {\r\n      return dispatch(keysActions.fetchRestoreKeyItem(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const changePager = useCallback(\r\n    (params: Partial<IApiPager>) => {\r\n      return dispatch(keysActions.changePager(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const changeSearch = useCallback(\r\n    (params: Partial<{ search?: string }>) => {\r\n      return dispatch(keysActions.changeSearch(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const requestKeysList = useCallback(async (params?: IApiParamsKeysList) => {\r\n    return api.keys.list(params);\r\n  }, []);\r\n\r\n  const requestKeysByIds = useCallback(async (params: IApiParamsKeysByIds) => {\r\n    return await api.keys.byIds(params);\r\n  }, [])\r\n\r\n  const resetList = useCallback(() => {\r\n    return dispatch(keysActions.reset());\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    resetList,\r\n    changePager,\r\n    changeSearch,\r\n    fetchKeysList,\r\n    fetchKeysListWatch,\r\n    fetchArchiveListWatch,\r\n    fetchCreateKey,\r\n    fetchRemoveKeyItem,\r\n    fetchRestoreKeyItem,\r\n    fetchArchiveKeyItem,\r\n    requestKeysList,\r\n    requestKeysByIds,\r\n  };\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport { makeStyles, Menu, MenuItem, MenuProps, Typography } from '@material-ui/core';\r\n\r\nexport interface IMenuItem {\r\n  id: string;\r\n  label: string;\r\n}\r\n\r\nexport interface IPropsPopMenu {\r\n  anchorEl: MenuProps['anchorEl'];\r\n  handleClose: () => void;\r\n  menu: IMenuItem[];\r\n  onSelectMenuItem?: <T extends IMenuItem>(x: T) => void;\r\n}\r\n\r\nconst PopMenu: React.FC<IPropsPopMenu> = (props) => {\r\n  const { menuStaticProps, styles } = useHooks();\r\n\r\n  return (\r\n    <Menu\r\n      {...menuStaticProps}\r\n      keepMounted\r\n      anchorEl={props.anchorEl}\r\n      className={styles.menu}\r\n      open={Boolean(props.anchorEl)}\r\n      onClose={props.handleClose}\r\n    >\r\n      {props.menu.map((item) => {\r\n        return (\r\n          <MenuItem\r\n            key={item.id}\r\n            onClick={() => {\r\n              if (props.onSelectMenuItem) {\r\n                props.onSelectMenuItem(item);\r\n              }\r\n              props.handleClose();\r\n            }}\r\n          >\r\n            <Typography variant={'button'}>{item.label}</Typography>\r\n          </MenuItem>\r\n        );\r\n      })}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const styles = useStyles();\r\n\r\n  const menuStaticProps = useMemo((): Partial<MenuProps> => {\r\n    return {\r\n      anchorOrigin: { horizontal: 'right', vertical: 'top' },\r\n      transformOrigin: { horizontal: 'right', vertical: 'top' },\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    styles,\r\n    menuStaticProps,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  menu: {\r\n    width: 150,\r\n  },\r\n}));\r\n\r\nexport default PopMenu;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  InputAdornment,\r\n  InputProps,\r\n  TextField,\r\n  TextFieldProps,\r\n} from '@material-ui/core';\r\nimport PopMenu from '../PopMenu';\r\n\r\nexport interface IMenuItem {\r\n  id: string;\r\n  label: string;\r\n}\r\n\r\nexport interface IPropsTextFieldWithOptions {\r\n  menu?: IMenuItem[];\r\n  currentMenuLabel?: React.ReactNode;\r\n  fieldProps?: TextFieldProps;\r\n  inputProps?: InputProps;\r\n  onSelectMenuItem?: <T extends IMenuItem>(i: T) => void;\r\n  disabled?: boolean;\r\n  beforeOptions?: React.ReactNode;\r\n  afterOptions?: React.ReactNode;\r\n}\r\n\r\nconst TextFieldWithOptions: React.FC<IPropsTextFieldWithOptions> = (props) => {\r\n  const { menu, currentMenuLabel, fieldProps, inputProps, disabled } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleOpenUnitMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUnitMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        fullWidth\r\n        {...fieldProps}\r\n        variant=\"outlined\"\r\n        disabled={disabled}\r\n        InputProps={{\r\n          endAdornment: currentMenuLabel ? (\r\n            <InputAdornment position=\"end\">\r\n              {props.beforeOptions}\r\n              <Button size={'small'} disabled={disabled} onClick={handleOpenUnitMenu}>\r\n                {currentMenuLabel}\r\n              </Button>\r\n              {props.afterOptions}\r\n            </InputAdornment>\r\n          ) : null,\r\n          ...inputProps,\r\n        }}\r\n      />\r\n      {menu && (\r\n        <PopMenu\r\n          anchorEl={anchorEl}\r\n          menu={menu}\r\n          onSelectMenuItem={props.onSelectMenuItem}\r\n          handleClose={handleCloseUnitMenu}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextFieldWithOptions;\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n  CircularProgress,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport Inputmask from 'inputmask';\r\nimport { Formik, Form, Field, FieldProps, FormikProps, FormikErrors, FormikHelpers } from 'formik';\r\nimport { SerializedError } from '@reduxjs/toolkit';\r\n\r\nimport Message from 'src/components/Message';\r\nimport TextFieldWithOptions from 'src/components/TextFieldWithOptions';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\n\r\nconst unitOptions = {\r\n  h: 'hours',\r\n  d: 'days',\r\n  w: 'weeks',\r\n  m: 'months',\r\n};\r\n\r\nexport interface IKeyEntryFormValues {\r\n  name: string;\r\n  code: string;\r\n  rotation: string;\r\n  rotatable: string;\r\n  server?: string;\r\n  unit: keyof typeof unitOptions;\r\n}\r\n\r\nexport interface IPropsKeyEntryForm {\r\n  onSubmit?: () => void;\r\n}\r\n\r\nconst defaultInitialValues: IKeyEntryFormValues = {\r\n  name: '',\r\n  code: '',\r\n  rotation: '',\r\n  unit: 'd',\r\n  rotatable: '1',\r\n};\r\n\r\nconst KeyEntryForm: React.FC<IPropsKeyEntryForm> = (props) => {\r\n  const styles = useStyles();\r\n  const { menuItems, validate, handleSubmit } = useHooks(props);\r\n\r\n  return (\r\n    <Card style={{ width: 400 }}>\r\n      <CardHeader title={<Typography variant=\"h3\">Add new key entry</Typography>} />\r\n      <CardContent>\r\n        <Formik initialValues={defaultInitialValues} validate={validate} onSubmit={handleSubmit}>\r\n          {(formikProps: FormikProps<IKeyEntryFormValues>) => {\r\n            const loading = formikProps.isSubmitting;\r\n            return (\r\n              <Form>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"name\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        return (\r\n                          <TextField\r\n                            className={styles.textfield}\r\n                            error={Boolean(meta.touched && meta.error)}\r\n                            label=\"Choose name\"\r\n                            variant=\"outlined\"\r\n                            {...field}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"code\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        return (\r\n                          <TextField\r\n                            className={styles.textfield}\r\n                            error={Boolean(meta.touched && meta.error)}\r\n                            label=\"Unique code\"\r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                              inputRef: (el) => {\r\n                                if (el) {\r\n                                  codeMask.mask(el);\r\n                                }\r\n                              },\r\n                            }}\r\n                            {...field}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"rotation\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        const isEnabled = formikProps.values.rotatable === '1';\r\n                        return (\r\n                          <TextFieldWithOptions\r\n                            menu={menuItems}\r\n                            onSelectMenuItem={(item) => {\r\n                              if (typeof item.id === 'string') {\r\n                                formikProps.setFieldValue('unit', item.id);\r\n                              }\r\n                            }}\r\n                            disabled={!isEnabled}\r\n                            currentMenuLabel={unitOptions[formikProps.values.unit]}\r\n                            inputProps={{\r\n                              inputRef: (el) => {\r\n                                if (el) {\r\n                                  digitMask.mask(el);\r\n                                }\r\n                              },\r\n                            }}\r\n                            fieldProps={{\r\n                              error: Boolean(meta.touched && meta.error),\r\n                              label: `Rotation interval`,\r\n                              ...field,\r\n                            }}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"rotatable\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field } = params;\r\n                        return (\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                checked={field.value === '1'}\r\n                                onChange={(_, checked) => {\r\n                                  formikProps.setFieldValue('rotatable', checked ? '1' : '0');\r\n                                }}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label=\"Enable rotation\"\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n\r\n                  {formikProps.errors.server && (\r\n                    <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                      <Message root={{ style: { flexGrow: 1 } }}>\r\n                        {formikProps.errors.server}\r\n                      </Message>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                    <Button\r\n                      disabled={loading}\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      variant={'contained'}\r\n                      color=\"secondary\"\r\n                      disableElevation\r\n                      fullWidth\r\n                    >\r\n                      {!loading && 'Submit'}\r\n                      {loading && <CircularProgress className={styles.progress} size={26} />}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsKeyEntryForm) => {\r\n  const { fetchCreateKey } = useContainerKeys();\r\n\r\n  const menuItems = useMemo(() => {\r\n    const options = Object.keys(unitOptions) as Array<keyof typeof unitOptions>;\r\n    return options.map((unit) => {\r\n      return {\r\n        id: unit,\r\n        label: unitOptions[unit],\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const { onSubmit } = props;\r\n\r\n  const handleSubmit = useCallback(async (\r\n    values: IKeyEntryFormValues,\r\n    formikHelpers: FormikHelpers<IKeyEntryFormValues>,\r\n  ) => {\r\n    const result = await fetchCreateKey({\r\n      name: values.name,\r\n      code: values.code,\r\n      rotation: values.rotatable === '1' ? `${values.rotation} ${values.unit}` : undefined,\r\n    });\r\n\r\n    const errorResult = (result as { error: SerializedError });\r\n    if (errorResult.error) {\r\n      formikHelpers.setErrors({ server: errorResult.error.message });\r\n    } else if (onSubmit) {\r\n      onSubmit();\r\n    }\r\n  }, [onSubmit, fetchCreateKey]);\r\n\r\n  const validate = useCallback((values: IKeyEntryFormValues) => {\r\n    const errors: FormikErrors<typeof values> = {};\r\n\r\n    if (!values.name || values.name.length === 0) {\r\n      errors.name = 'Name required!';\r\n    }\r\n\r\n    if (!values.code || values.code.length === 0) {\r\n      errors.code = 'Code required!';\r\n    }\r\n\r\n    if (values.rotatable === '1') {\r\n      if (!values.rotation && values.rotation.length === 0) {\r\n        errors.rotation = 'Rotation interval required!';\r\n      } else if (isNaN(parseInt(values.rotation))) {\r\n        errors.rotation = 'Rotation interval should be number!';\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  }, []);\r\n\r\n  return {\r\n    menuItems,\r\n    handleSubmit,\r\n    fetchCreateKey,\r\n    validate,\r\n  }\r\n};\r\n\r\nconst digitMask = Inputmask({ regex: String.raw`[\\d,.]*` });\r\nconst codeMask = Inputmask({ regex: String.raw`[\\w]*` });\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textfield: {\r\n    width: '100%',\r\n  },\r\n  progress: {\r\n    marginLeft: 20,\r\n  },\r\n  menu: {\r\n    width: 150,\r\n    marginLeft: 10,\r\n  },\r\n}));\r\n\r\nexport default KeyEntryForm;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { IconButton, Snackbar, Typography } from '@material-ui/core';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nexport interface IPropsCopyBtn {\r\n  inputRef: React.RefObject<HTMLInputElement | HTMLTextAreaElement>;\r\n  message: string;\r\n}\r\n\r\nconst CopyBtn: React.FC<IPropsCopyBtn> = (props) => {\r\n  const { isCopied, handleCopy, handleCloseSnack } = useHooks(props);\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\r\n        open={isCopied}\r\n        autoHideDuration={1000}\r\n        onClose={handleCloseSnack}\r\n      >\r\n        <Alert onClose={handleCloseSnack} severity=\"success\">\r\n          <Typography variant=\"h6\" component={'div'}>\r\n            {props.message}\r\n          </Typography>\r\n        </Alert>\r\n      </Snackbar>\r\n      <IconButton onClick={handleCopy}>\r\n        <FileCopyIcon fontSize={'small'} />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsCopyBtn) => {\r\n  const [isCopied, setCopied] = useState(false);\r\n\r\n  const handleCopy = useCallback(() => {\r\n    const input = props.inputRef.current;\r\n\r\n    if (input) {\r\n      input.select();\r\n      document.execCommand('copy');\r\n      setCopied(true);\r\n    }\r\n  }, [props.inputRef]);\r\n\r\n  const handleCloseSnack = useCallback(() => {\r\n    setCopied(false);\r\n  }, []);\r\n\r\n  return {\r\n    isCopied,\r\n    setCopied,\r\n    handleCopy,\r\n    handleCloseSnack,\r\n  };\r\n};\r\n\r\nexport default CopyBtn;\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport CopyBtn from 'src/components/CopyBtn';\r\n\r\nexport interface ILinkItem {\r\n  code: string;\r\n  url: string;\r\n  label: string;\r\n  isPrivate?: boolean;\r\n}\r\n\r\nexport interface IPropsUrlsList {\r\n  items: ILinkItem[];\r\n}\r\n\r\n\r\nconst UrlsList: React.FC<IPropsUrlsList> = (props) => {\r\n  const styles = useStyles();\r\n  const { inputRefs, handleFocus } = useHooks(props);\r\n\r\n  return (\r\n    <List className={styles.list}>\r\n      {props.items.map((item, i) => {\r\n        return (\r\n          <ListItem className={styles.item} key={item.code}>\r\n            <TextField\r\n              value={item.url}\r\n              label={item.label}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              onFocus={handleFocus}\r\n              InputProps={{\r\n                inputRef: inputRefs[i],\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <CopyBtn inputRef={inputRefs[i]} message={`URL has been copied!`}/>\r\n                    {!item.isPrivate && (\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          window.open(item.url, '_blank');\r\n                        }}\r\n                      >\r\n                        <OpenInNewIcon fontSize={'small'} />\r\n                      </IconButton>\r\n                    )}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsUrlsList) => {\r\n  const handleFocus: React.FocusEventHandler<HTMLInputElement> = useCallback(\r\n    (event) => {\r\n      event.target.select();\r\n    },\r\n    [],\r\n  );\r\n\r\n  const inputRefs = useMemo(() => props.items.map(() => React.createRef<HTMLInputElement>()), [props.items]);\r\n\r\n  return {\r\n    inputRefs,\r\n    handleFocus,\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  list: {\r\n    padding: 0,\r\n    paddingBottom: 10,\r\n    width: '100%',\r\n  },\r\n  item: {\r\n    padding: 0,\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n  },\r\n}));\r\n\r\n\r\nexport default UrlsList;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogActions, Button, DialogTitle, Typography } from '@material-ui/core';\r\n\r\nexport interface IPropsApproveModal {\r\n  title?: React.ReactNode;\r\n  content?: React.ReactNode;\r\n  onSubmit?: () => void;\r\n}\r\n\r\nexport const ApproveModal: React.FC<IPropsApproveModal> = (props) => {\r\n  const [isOpen, toggleDialog] = useState(false);\r\n  const { onSubmit } = props;\r\n  const handleSubmit = () => {\r\n    if (onSubmit) {\r\n      onSubmit();\r\n    }\r\n    toggleDialog(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={isOpen} onClose={() => toggleDialog(false)}>\r\n        { props.title &&\r\n          <DialogTitle>\r\n            <Typography variant={'h4'} component={'div'}>{ props.title }</Typography>\r\n          </DialogTitle>\r\n        }\r\n        { props.content &&\r\n          <DialogContent>{ props.content }</DialogContent>\r\n        }\r\n        <DialogActions>\r\n          <Button onClick={() => toggleDialog(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\" autoFocus>\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div onClick={() => toggleDialog(true)}>{props.children}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApproveModal;\r\n","import React from 'react';\r\nimport { Theme, Tooltip, TooltipProps } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst HtmlTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n    backgroundColor: 'white',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 280,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n    padding: 20,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst MessageTooltip: React.FC<TooltipProps> = (props) => {\r\n  return (\r\n    <HtmlTooltip\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MessageTooltip;\r\n","import React from 'react';\r\nimport { colors, makeStyles } from '@material-ui/core';\r\n\r\nexport interface IPropsCodeFormat {\r\n  height?: number;\r\n}\r\n\r\nconst CodeFormat: React.FC<IPropsCodeFormat> = (props) => {\r\n  const styles = useStyles(props)();\r\n  return (\r\n      <pre className={styles.pre}><code className={styles.code}>{props.children}</code></pre>\r\n  );\r\n};\r\n\r\nconst useStyles = (props: IPropsCodeFormat) => makeStyles(() => {\r\n  return {\r\n    root: {\r\n      padding: '5px 0',\r\n    },\r\n    pre: {\r\n      display: 'block',\r\n      overflowX: 'auto',\r\n      height: () => props.height !== undefined ? props.height : 'auto',\r\n      whiteSpace: 'pre',\r\n      padding: '15px 20px',\r\n      background: colors.grey[100],\r\n    },\r\n    code: {\r\n      background: 'none',\r\n    }\r\n  }\r\n})\r\n\r\nexport default CodeFormat;\r\n","import { useCallback } from 'react';\r\nimport { IApiParamsKeysPreview } from 'src/lib/api/keys/preview';\r\nimport { useAppDispatch } from 'src/store';\r\n\r\nimport { actions as keyPreviewActions } from './reducer';\r\nimport { IStoreKeyPreview } from './types';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerPreviewKey = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const toggleModal = useCallback(\r\n    (isOpen?: boolean) => {\r\n      dispatch(keyPreviewActions.toggleModal({ isOpen }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchKeyPreview = useCallback(\r\n    (params: IApiParamsKeysPreview) => {\r\n      return dispatch(keyPreviewActions.fetchKeyPreview(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const setPreviewParams = useCallback((params: IStoreKeyPreview['params']) => {\r\n    dispatch(keyPreviewActions.setParams(params));\r\n  }, [dispatch])\r\n\r\n  const openKeyPreview = useCallback(\r\n    async (apiParams: IApiParamsKeysPreview, previewParams?: IStoreKeyPreview['params']) => {\r\n      toggleModal(true);\r\n      previewParams && setPreviewParams(previewParams);\r\n      await fetchKeyPreview(apiParams);\r\n    },\r\n    [fetchKeyPreview, toggleModal, setPreviewParams],\r\n  );\r\n\r\n  return { toggleModal, fetchKeyPreview, openKeyPreview, setPreviewParams };\r\n};\r\n","import {\r\n  Grid,\r\n  InputAdornment,\r\n  InputProps,\r\n  Link,\r\n  TextField,\r\n  TextFieldProps,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useMemo, useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport CodeFormat from 'src/components/CodeFormat';\r\nimport TextFieldWithOptions from 'src/components/TextFieldWithOptions';\r\nimport { privateHostSelector } from 'src/containers/Session/selectors';\r\nimport CopyBtn from 'src/components/CopyBtn';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useContainerPreviewKey } from 'src/containers/KeyPreview/hooks';\r\n\r\nexport interface IPrivateKeyItem {\r\n  accessCode: string;\r\n  code: string;\r\n  id: number;\r\n}\r\n\r\nexport interface IPropsPrivateUrls {\r\n  item: IPrivateKeyItem;\r\n}\r\n\r\nexport interface IKeyFormat {\r\n  id: 'jwk' | 'pem' | 'jwks';\r\n  label: string;\r\n}\r\n\r\nexport const KEY_FORMATS: IKeyFormat[] = [\r\n  { id: 'jwk', label: 'JWK' },\r\n  { id: 'jwks', label: 'JWKs' },\r\n  { id: 'pem', label: 'PEM' },\r\n];\r\n\r\nconst PrivateUrls: React.FC<IPropsPrivateUrls> = (props) => {\r\n  const {\r\n    fieldProps,\r\n    inputProps,\r\n    format,\r\n    targetUrl,\r\n    urlRef,\r\n    accessRef,\r\n    handleSetFormat,\r\n    handleOpenPreviewModal,\r\n    handleFocus,\r\n  } = useHooks(props);\r\n  const styles = useStyles();\r\n\r\n  const { item } = props;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Access key\"\r\n          variant=\"outlined\"\r\n          value={item.accessCode}\r\n          onFocus={handleFocus}\r\n          InputProps={{\r\n            inputRef: accessRef,\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <CopyBtn inputRef={accessRef} message={`URL has been copied!`} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextFieldWithOptions\r\n          menu={KEY_FORMATS}\r\n          currentMenuLabel={format.label}\r\n          onSelectMenuItem={handleSetFormat}\r\n          fieldProps={fieldProps}\r\n          inputProps={inputProps}\r\n          afterOptions={<CopyBtn inputRef={urlRef} message={`URL has been copied!`} />}\r\n        />\r\n      </Grid>\r\n      {item.accessCode && (\r\n        <Grid item xs={12}>\r\n          <div className={styles.exampleMessage}>\r\n            <Typography>Key can be fetched via POST with access code.</Typography>\r\n            <Link onClick={handleOpenPreviewModal}>Preview</Link>\r\n          </div>\r\n          <CodeFormat>\r\n            {`curl -d '{ \"accessToken\":\"${item.accessCode}\" }' -H \"Content-Type: application/json\" -X POST ${targetUrl}`}\r\n          </CodeFormat>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsPrivateUrls) => {\r\n  const [formatId, setFormat] = useState<'jwk' | 'jwks' | 'pem'>(KEY_FORMATS[0].id);\r\n  const { openKeyPreview } = useContainerPreviewKey();\r\n\r\n  const format = useMemo(() => {\r\n    return KEY_FORMATS.find((i) => i.id === formatId) || KEY_FORMATS[0];\r\n  }, [formatId]);\r\n\r\n  const keysHost = useSelector(privateHostSelector) || '';\r\n\r\n  const urlRef = useRef<HTMLInputElement>(null);\r\n  const accessRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleFocus: React.FocusEventHandler<HTMLInputElement> = useCallback((event) => {\r\n    event.target.select();\r\n  }, []);\r\n\r\n  const fieldProps: TextFieldProps = useMemo(() => {\r\n    return {\r\n      label: 'Target URL',\r\n      onFocus: handleFocus,\r\n    };\r\n  }, [handleFocus]);\r\n\r\n  const targetUrl = useMemo(() => {\r\n    return `${keysHost}/entry/private/${format.id}/${props.item.code}`;\r\n  }, [keysHost, format.id, props.item.code]);\r\n\r\n  const inputProps: InputProps = useMemo(() => {\r\n    return {\r\n      value: targetUrl,\r\n      inputRef: urlRef,\r\n    };\r\n  }, [targetUrl]);\r\n\r\n  const handleSetFormat = useCallback(\r\n    (i: { id: string | number }) => {\r\n      if (typeof i.id === 'string' && ['jwk', 'jwks', 'pem'].includes(i.id)) {\r\n        setFormat(i.id as 'jwk' | 'jwks' | 'pem');\r\n      }\r\n    },\r\n    [setFormat],\r\n  );\r\n\r\n  const handleOpenPreviewModal = useCallback(() => {\r\n    return openKeyPreview(\r\n      { id: props.item.id, isByEntry: true },\r\n      { privacy: 'private', format: formatId },\r\n    );\r\n  }, [openKeyPreview, props.item.id, formatId]);\r\n\r\n  return {\r\n    keysHost,\r\n    inputProps,\r\n    formatId,\r\n    fieldProps,\r\n    format,\r\n    targetUrl,\r\n    urlRef,\r\n    accessRef,\r\n    setFormat,\r\n    handleFocus,\r\n    handleSetFormat,\r\n    handleOpenPreviewModal,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    exampleMessage: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n    },\r\n  };\r\n});\r\n\r\nexport default PrivateUrls;\r\n","import React, { useCallback } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Divider,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  CardActions,\r\n  Button,\r\n  makeStyles,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\nimport UrlsList from 'src/components/UrlsList';\r\nimport ApproveModal from 'src/components/ApproveModal';\r\nimport { publicHostSelector } from 'src/containers/Session/selectors';\r\nimport MessageTooltip from 'src/components/MessageTooltip';\r\nimport PrivateUrls from '../PrivateUrls';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\nimport { useMemo } from 'react';\r\n\r\nexport interface IKeyItemData {\r\n  id: number;\r\n  name: string;\r\n  code: string;\r\n  accessCode: string;\r\n  rotateInterval: number | null;\r\n  archivedAt: number | null;\r\n}\r\n\r\nexport interface IKeyItemProps {\r\n  data?: IKeyItemData;\r\n}\r\n\r\nconst KeyItem: React.FC<IKeyItemProps> = (props) => {\r\n  const styles = useStyles();\r\n  const { deleteItem, archiveItem, restoreItem, rotation, publicUrls } = useHooks(props);\r\n  const { data } = props;\r\n\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={2} justify={'space-between'}>\r\n          <Grid item>\r\n            <Typography variant={'caption'}>Name</Typography>\r\n            <Typography variant={'h5'}>{data.name}</Typography>\r\n          </Grid>\r\n          <Grid item className={styles.codeHolder}>\r\n            <Typography variant={'caption'}>Unique code</Typography>\r\n            <Typography variant={'h5'}>{data.code}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider className={styles.divider} />\r\n        <Typography variant={'caption'}>\r\n          {!data.rotateInterval ? 'Non rotatable key' : rotation}\r\n        </Typography>\r\n        <Divider className={styles.divider} />\r\n        <Accordion>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant={'h6'}>Public key</Typography>\r\n            <MessageTooltip\r\n              placement=\"top-start\"\r\n              title={\r\n                <Typography gutterBottom variant={'body1'} color={'textPrimary'}>\r\n                  {`Anyone can get public key by GET request in formats listed below. Rotatable response contain \"expires\" header.`}\r\n                </Typography>\r\n              }\r\n            >\r\n              <HelpIcon className={styles.tooltip} color={'primary'} fontSize={'small'} />\r\n            </MessageTooltip>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div style={{ flexGrow: 1 }}>\r\n              <UrlsList items={publicUrls} />\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        <Accordion>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant={'h6'}>Private key</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div className={styles.privateWrap}>\r\n              <PrivateUrls item={data} />\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </CardContent>\r\n      <CardActions className={styles.actions}>\r\n        {data.archivedAt !== null && (\r\n          <>\r\n            <ApproveModal\r\n              title={'Are you sure want to delete key?'}\r\n              content={'Every associated keys will be unavailable'}\r\n              onSubmit={() => deleteItem(data.id)}\r\n            >\r\n              <Button size=\"small\">Delete</Button>\r\n            </ApproveModal>\r\n            <Button size=\"small\" onClick={() => restoreItem(data.id)}>\r\n              Restore\r\n            </Button>\r\n          </>\r\n        )}\r\n        {data.archivedAt === null && (\r\n          <ApproveModal\r\n            title={'Are you sure want to archive entry in storage?'}\r\n            content={\r\n              'Associated keys will be marked as archived and unavailable. You can restore entry from the archive at any time.'\r\n            }\r\n            onSubmit={() => archiveItem(data.id)}\r\n          >\r\n            <Button size=\"small\">Archive</Button>\r\n          </ApproveModal>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IKeyItemProps) => {\r\n  const publicHost = useSelector(publicHostSelector);\r\n  const { fetchRemoveKeyItem, fetchArchiveKeyItem, fetchRestoreKeyItem } = useContainerKeys();\r\n  const { data } = props;\r\n  const rotateInterval = data ? data.rotateInterval : null;\r\n  const code = data ? data.code : null;\r\n\r\n  const publicUrls = useMemo(() => {\r\n    if (publicHost === undefined || code === null) {\r\n      return [];\r\n    }\r\n    return [\r\n      { code: 'jwk', url: `${publicHost}/entry/public/jwk/${code}`, label: 'JWK' },\r\n      { code: 'jwks', url: `${publicHost}/entry/public/jwks/${code}`, label: 'JWKs' },\r\n      { code: 'pem', url: `${publicHost}/entry/public/pem/${code}`, label: 'PEM' },\r\n    ];\r\n  }, [code, publicHost]);\r\n\r\n  const deleteItem = useCallback(\r\n    (id: number) => {\r\n      return fetchRemoveKeyItem({ id });\r\n    },\r\n    [fetchRemoveKeyItem],\r\n  );\r\n\r\n  const archiveItem = useCallback(\r\n    (id: number) => {\r\n      return fetchArchiveKeyItem({ id });\r\n    },\r\n    [fetchArchiveKeyItem],\r\n  );\r\n\r\n  const restoreItem = useCallback(\r\n    (id: number) => {\r\n      return fetchRestoreKeyItem({ id });\r\n    },\r\n    [fetchRestoreKeyItem],\r\n  );\r\n\r\n  const rotation = useMemo(() => {\r\n    return rotateInterval && `Rotation period: ${moment.duration(rotateInterval, 's').humanize()}`;\r\n  }, [rotateInterval]);\r\n\r\n  return {\r\n    host: publicHost,\r\n    rotation,\r\n    publicUrls,\r\n    deleteItem,\r\n    archiveItem,\r\n    restoreItem,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actions: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  privateWrap: {\r\n    width: '100%',\r\n  },\r\n  divider: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  tooltip: {\r\n    marginLeft: 10,\r\n    opacity: 0.2,\r\n    '&:hover': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  codeHolder: {\r\n    textAlign: 'right',\r\n  },\r\n}));\r\n\r\nexport default KeyItem;\r\n","import { Box, MenuItem, Select } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid/Grid';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { useCallback } from 'react';\r\n\r\nexport interface IPropsPerPageSelect {\r\n  current: number;\r\n  options: number[];\r\n  onSelect?: (val: number) => void;\r\n}\r\n\r\nconst PerPageSelect: React.FC<IPropsPerPageSelect> = (props) => {\r\n  const styles = useStyles();\r\n  const { current, options } = props;\r\n  const { handleChange } = useHooks(props);\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item className={styles.label}>\r\n          Items per page:\r\n        </Grid>\r\n        <Grid item>\r\n          <Select value={current} onChange={handleChange}>\r\n            {options.map((val) => {\r\n              return (\r\n                <MenuItem key={val} value={val}>\r\n                  {val}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsPerPageSelect) => {\r\n  const { onSelect } = props;\r\n\r\n  const handleChange = useCallback(\r\n    (\r\n      e: React.ChangeEvent<{\r\n        name?: string | undefined;\r\n        value: unknown;\r\n      }>,\r\n    ) => {\r\n      onSelect && onSelect(e.target.value as number);\r\n    },\r\n    [onSelect],\r\n  );\r\n\r\n  return {\r\n    handleChange,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    label: {\r\n      marginRight: 10,\r\n      fontSize: 12,\r\n    },\r\n  };\r\n});\r\n\r\nexport default PerPageSelect;\r\n","import React, { ChangeEvent, useCallback, useMemo } from 'react';\r\nimport { InputAdornment, TextField, TextFieldProps } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport debounce from 'lodash.debounce';\r\n\r\nexport type IPropsSearchInput = TextFieldProps & {\r\n  onThrottledChange?: (val: string) => void;\r\n};\r\n\r\nconst SearchInput: React.FC<IPropsSearchInput> = (props) => {\r\n  const { InputPropsMemo, restProps, handleChange } = useHooks(props);\r\n  return (\r\n    <>\r\n      <TextField {...restProps} onChange={handleChange} size=\"small\" variant={'outlined'} InputProps={InputPropsMemo} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsSearchInput) => {\r\n  const { InputProps, onChange, onThrottledChange, ...restProps } = props;\r\n  const InputPropsMemo = useMemo(() => {\r\n    return {\r\n      startAdornment: (\r\n        <InputAdornment position=\"start\">\r\n          <SearchIcon />\r\n        </InputAdornment>\r\n      ),\r\n      ...InputProps,\r\n    };\r\n  }, [InputProps]);\r\n\r\n  const throttledChange = useCallback(debounce((val: string)=> {\r\n    if (onThrottledChange) {\r\n      onThrottledChange(val)\r\n    }\r\n  }, 500), [onThrottledChange]);\r\n\r\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\r\n    const val = event.target.value;\r\n    if (onChange) {\r\n      onChange(event);\r\n    }\r\n    throttledChange(val);\r\n  }, [throttledChange, onChange]);\r\n\r\n  return {\r\n    InputPropsMemo,\r\n    restProps,\r\n    handleChange,\r\n  };\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, Button, Dialog, makeStyles, Box, Typography } from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nimport {\r\n  isKeyListEmpty,\r\n  keysPagerOptionsSelector,\r\n  keysRequestSelector,\r\n  keysSearchSelector,\r\n} from 'src/containers/Keys/selectors';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\nimport KeyEntryForm from 'src/components/KeyEntryForm';\r\nimport KeyItem from 'src/components/KeyItem';\r\nimport PerPageSelect from 'src/components/PerPageSelect';\r\nimport SearchInput from 'src/components/SearchInput';\r\n\r\nexport interface IPropsKeysList {\r\n  archive?: boolean;\r\n}\r\n\r\nconst KeysList: React.FC<IPropsKeysList> = (props) => {\r\n  const styles = useStyles();\r\n  const { loading, data, error, pager } = useSelector(keysRequestSelector);\r\n  const pagerOptions = useSelector(keysPagerOptionsSelector);\r\n  const search = useSelector(keysSearchSelector);\r\n  const isEmpty = useSelector(isKeyListEmpty);\r\n\r\n  const {\r\n    isFormOpened,\r\n    handleModalToggle,\r\n    handlePagerChange,\r\n    handleChangePerPage,\r\n    handleChangeSearch,\r\n  } = useHooks();\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  if (error) {\r\n    return <Alert>{error}</Alert>;\r\n  }\r\n\r\n  return (\r\n    <Box className={styles.wrap}>\r\n      <Grid container spacing={2}>\r\n        <Grid item container spacing={2} xs={12} alignItems={'center'}>\r\n          {!props.archive && (\r\n            <Grid item>\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<AddCircleOutlineIcon />}\r\n                onClick={handleModalToggle}\r\n              >\r\n                Add key entry\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n          { !isEmpty &&\r\n            <Grid item>\r\n              <SearchInput\r\n                defaultValue={search}\r\n                onThrottledChange={handleChangeSearch}\r\n                placeholder={'Search by name...'}\r\n              />\r\n            </Grid>\r\n          }\r\n        </Grid>\r\n        {isEmpty && !props.archive &&\r\n           <Grid item xs={12} className={styles.noItems}>\r\n             <Typography variant=\"h5\">There is no key entries. Add your first one!</Typography>\r\n           </Grid>\r\n        }\r\n        {isEmpty && props.archive &&\r\n           <Grid item xs={12} className={styles.noItems}>\r\n             <Typography variant=\"h5\">Archive is empty!</Typography>\r\n           </Grid>\r\n        }\r\n        {data.items.length > 0 && (\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              {data.items.map((item) => {\r\n                return (\r\n                  <Grid item key={item.id} xs={6}>\r\n                    <KeyItem data={item} />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {pager.totalPages !== undefined && pager.totalPages > 0 && (\r\n          <Grid container item xs={12} alignItems=\"center\">\r\n            <Grid item>\r\n              <PerPageSelect\r\n                current={pager.perPage}\r\n                options={pagerOptions}\r\n                onSelect={handleChangePerPage}\r\n              />\r\n            </Grid>\r\n            <Grid item className={styles.pagerHolder}>\r\n              {pager.totalPages > 1 && (\r\n                <Pagination\r\n                  onChange={handlePagerChange}\r\n                  count={pager.totalPages}\r\n                  page={pager.page}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      <Dialog open={isFormOpened} onClose={handleModalToggle}>\r\n        <KeyEntryForm onSubmit={handleModalToggle} />\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const [isFormOpened, toggleForm] = useState(false);\r\n  const { changePager, changeSearch } = useContainerKeys();\r\n\r\n  const handleModalToggle = useCallback(() => {\r\n    toggleForm(!isFormOpened);\r\n  }, [isFormOpened, toggleForm]);\r\n\r\n  const handlePagerChange = useCallback(\r\n    (_event: React.ChangeEvent<unknown>, value: number) => {\r\n      return changePager({ page: value });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handleChangePerPage = useCallback(\r\n    (val: number) => {\r\n      return changePager({ perPage: val });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handleChangeSearch = useCallback(\r\n    (val: string) => {\r\n      return changeSearch({ search: val });\r\n    },\r\n    [changeSearch],\r\n  );\r\n\r\n  return {\r\n    isFormOpened,\r\n    toggleForm,\r\n    handleChangePerPage,\r\n    handleChangeSearch,\r\n    handleModalToggle,\r\n    handlePagerChange,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    pagerHolder: {\r\n      marginLeft: 'auto',\r\n    },\r\n    searchHolder: {\r\n      marginLeft: 'auto',\r\n      marginTop: 'auto',\r\n    },\r\n    wrap: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n    },\r\n    noItems: {\r\n      marginTop: 20,\r\n    },\r\n  };\r\n});\r\n\r\nexport default KeysList;\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreKeyPreview } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreKeyPreview => state.keyPreview;\r\nexport const modal = createSelector(containerState, (state) => state.modal);\r\nexport const details = createSelector(containerState, (state) => state.details);\r\nexport const params = createSelector(containerState, (state) => state.params);\r\nexport const availFormats = createSelector(containerState, (state) => state.availFormats);\r\nexport const availPrivacy = createSelector(containerState, (state) => state.availPrivacy);\r\n","import React, { useCallback, useMemo, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Button, Grid, makeStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport CodeFormat from 'src/components/CodeFormat';\r\nimport CopyBtn from 'src/components/CopyBtn';\r\nimport { useContainerPreviewKey } from 'src/containers/KeyPreview/hooks';\r\nimport * as keyPreviewSelectors from 'src/containers/KeyPreview/selectors';\r\nimport PopMenu, { IMenuItem } from '../PopMenu';\r\nimport moment from 'moment';\r\n\r\nexport interface IPropsKeyPreview {}\r\n\r\nconst KeyPreview: React.FC<IPropsKeyPreview> = () => {\r\n  const styles = useStyles();\r\n\r\n  const {\r\n    availFormats,\r\n    availPrivacy,\r\n    keyData,\r\n    previewParams,\r\n    keyInputRef,\r\n    formatsBtnRef,\r\n    privacyBtnRef,\r\n    targetKey,\r\n    isFormatsMenuOpen,\r\n    isPrivacyMenuOpen,\r\n    handleFormatsMenuClose,\r\n    handleFormatsMenuOpen,\r\n    handlePrivacyMenuClose,\r\n    handlePrivacyMenuOpen,\r\n    handleFormatsMenuItemSelect,\r\n    handlePrivacyMenuItemSelect,\r\n    handleDialogClose,\r\n  } = useHooks();\r\n\r\n  if (keyData.error || keyData.data === undefined) {\r\n    return <div>Data error in KeyPreview component</div>;\r\n  }\r\n\r\n  if (targetKey === undefined) {\r\n    return <div>Key data unavailable</div>;\r\n  }\r\n\r\n  const formatString = previewParams.format?.toUpperCase();\r\n  const privacyString = previewParams.privacy?.toUpperCase();\r\n  const activatesAt = moment.unix(keyData.data.activatesAt).format('LLL');\r\n  const expiresAt = keyData.data.expiresAt && moment.unix(keyData.data.expiresAt).format('LLL');\r\n\r\n  return (\r\n    <Paper className={styles.wrap}>\r\n      <PopMenu\r\n        anchorEl={isFormatsMenuOpen ? formatsBtnRef.current : null}\r\n        handleClose={handleFormatsMenuClose}\r\n        onSelectMenuItem={handleFormatsMenuItemSelect}\r\n        menu={availFormats}\r\n      />\r\n      <PopMenu\r\n        anchorEl={isPrivacyMenuOpen ? privacyBtnRef.current : null}\r\n        handleClose={handlePrivacyMenuClose}\r\n        onSelectMenuItem={handlePrivacyMenuItemSelect}\r\n        menu={availPrivacy}\r\n      />\r\n      <Grid container spacing={2}>\r\n        <Grid container item xs={12} alignItems={'center'}>\r\n          <Grid item xs={6}>\r\n            <Typography variant={'h3'}>Key preview</Typography>\r\n          </Grid>\r\n          <Grid container item xs={6} justify={'flex-end'}>\r\n            <Button size={'small'} ref={privacyBtnRef} onClick={handlePrivacyMenuOpen}>\r\n              {privacyString}\r\n            </Button>\r\n            <Button size={'small'} ref={formatsBtnRef} onClick={handleFormatsMenuOpen}>\r\n              {formatString}\r\n            </Button>\r\n            <div className={styles.copyHolder}>\r\n              <textarea readOnly ref={keyInputRef} value={targetKey} className={styles.keyInput} />\r\n              <CopyBtn inputRef={keyInputRef} message={'Key has been copied!'} />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container xs={12} justify=\"flex-start\" spacing={2}>\r\n          <Grid item>\r\n            <Typography variant=\"caption\">Activates at: {activatesAt}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"caption\">\r\n              {expiresAt ? `Expires at: ${expiresAt}` : `No expiration`}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CodeFormat>{targetKey}</CodeFormat>\r\n        </Grid>\r\n        <Grid item container xs={12} justify={'flex-end'}>\r\n          <Button onClick={handleDialogClose}>Close</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport const KeyPreviewModal: React.FC<IPropsKeyPreview> = (props) => {\r\n  const { modalState, handleDialogClose } = useHooks();\r\n\r\n  return (\r\n    <Dialog open={Boolean(modalState.isOpen)} onClose={handleDialogClose} {...props}>\r\n      <KeyPreview />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const keyData = useSelector(keyPreviewSelectors.details);\r\n  const modalState = useSelector(keyPreviewSelectors.modal);\r\n  const previewParams = useSelector(keyPreviewSelectors.params);\r\n  const availFormats = useSelector(keyPreviewSelectors.availFormats);\r\n  const availPrivacy = useSelector(keyPreviewSelectors.availPrivacy);\r\n\r\n  const [isFormatsMenuOpen, toggleFormatsMenu] = useState(false);\r\n  const [isPrivacyMenuOpen, togglePrivacyMenu] = useState(false);\r\n\r\n  const { setPreviewParams, toggleModal } = useContainerPreviewKey();\r\n\r\n  const handleDialogClose = useCallback(() => {\r\n    toggleModal(false);\r\n  }, [toggleModal]);\r\n\r\n  const handleFormatsMenuClose = useCallback(() => {\r\n    toggleFormatsMenu(false);\r\n  }, [toggleFormatsMenu]);\r\n\r\n  const handleFormatsMenuOpen = useCallback(() => {\r\n    toggleFormatsMenu(true);\r\n  }, [toggleFormatsMenu]);\r\n\r\n  const handlePrivacyMenuClose = useCallback(() => {\r\n    togglePrivacyMenu(false);\r\n  }, [togglePrivacyMenu]);\r\n\r\n  const handlePrivacyMenuOpen = useCallback(() => {\r\n    togglePrivacyMenu(true);\r\n  }, [togglePrivacyMenu]);\r\n\r\n  const handleFormatsMenuItemSelect = useCallback(\r\n    (item: IMenuItem) => {\r\n      setPreviewParams({ format: item.id as 'jwk' | 'pem' });\r\n    },\r\n    [setPreviewParams],\r\n  );\r\n\r\n  const handlePrivacyMenuItemSelect = useCallback(\r\n    (item: IMenuItem) => {\r\n      setPreviewParams({ privacy: item.id as 'private' | 'public' });\r\n    },\r\n    [setPreviewParams],\r\n  );\r\n\r\n  const keyInputRef = useRef<HTMLTextAreaElement>(null);\r\n  const formatsBtnRef = useRef<HTMLButtonElement>(null);\r\n  const privacyBtnRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const targetKey = useMemo(() => {\r\n    if (keyData.data === undefined) {\r\n      return undefined;\r\n    }\r\n\r\n    const { publicKey, privateKey } = keyData.data;\r\n    const isPrivate = previewParams.privacy === 'private';\r\n    const targetKeys = isPrivate ? privateKey : publicKey;\r\n\r\n    if (targetKeys === undefined) {\r\n      return undefined;\r\n    }\r\n\r\n    switch (previewParams.format) {\r\n      case 'pem':\r\n        return targetKeys.pem;\r\n      default:\r\n        return JSON.stringify(targetKeys.jwk, null, 2);\r\n    }\r\n  }, [keyData.data, previewParams.format, previewParams.privacy]);\r\n\r\n  return {\r\n    availFormats,\r\n    availPrivacy,\r\n    isPrivacyMenuOpen,\r\n    isFormatsMenuOpen,\r\n    targetKey,\r\n    modalState,\r\n    keyData,\r\n    previewParams,\r\n    keyInputRef,\r\n    privacyBtnRef,\r\n    formatsBtnRef,\r\n    handleFormatsMenuClose,\r\n    handleFormatsMenuOpen,\r\n    handlePrivacyMenuClose,\r\n    handlePrivacyMenuOpen,\r\n    handleFormatsMenuItemSelect,\r\n    handlePrivacyMenuItemSelect,\r\n    handleDialogClose,\r\n    toggleFormatsMenu,\r\n    togglePrivacyMenu,\r\n    togglePreviewModal: toggleModal,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    wrap: {\r\n      width: '600px',\r\n      padding: '20px',\r\n    },\r\n    copyHolder: {\r\n      position: 'relative',\r\n    },\r\n    keyInput: {\r\n      position: 'absolute',\r\n      overflow: 'hidden',\r\n      width: 10,\r\n      height: 20,\r\n      left: 15,\r\n      top: 15,\r\n      opacity: 0,\r\n    },\r\n  };\r\n});\r\n\r\nexport default KeyPreview;\r\n","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport KeysList from 'src/components/KeysList';\r\nimport { KeyPreviewModal } from 'src/components/KeyPreview';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\n\r\nexport const KeysPage: React.FC = () => {\r\n  const styles = useStyles();\r\n  useHooks();\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <KeysList />\r\n      <KeyPreviewModal />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    flexGrow: 1,\r\n    paddingTop: 16,\r\n  }\r\n}));\r\n\r\nconst useHooks = () => {\r\n  const { fetchKeysListWatch, resetList } = useContainerKeys();\r\n\r\n  useEffect(() => {\r\n    const req = fetchKeysListWatch();\r\n    return () => {\r\n      req.abort();\r\n    };\r\n  }, [fetchKeysListWatch, resetList]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      resetList();\r\n    };\r\n  }, [resetList]);\r\n}\r\n\r\nexport default KeysPage;\r\n","import { useCallback } from 'react';\r\nimport { IApiParamsAuthAccount, IApiParamsAuthRemove } from 'src/lib/api/auth/types';\r\nimport { useAppDispatch } from 'src/store';\r\nimport { actions as accountsActions } from './reducer';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerAccounts = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const fetchCreateAccount = useCallback(async (params: IApiParamsAuthAccount) => {\r\n    return await dispatch(\r\n      accountsActions.fetchCreateAccount(params),\r\n    );\r\n  }, [dispatch]);\r\n\r\n  const fetchRemoveAccounts = useCallback(async (params: IApiParamsAuthRemove) => {\r\n    return await dispatch(\r\n      accountsActions.fetchRemoveAccounts(params)\r\n    )\r\n  }, [dispatch]);\r\n\r\n  const fetchAccountsList = useCallback(async () => {\r\n    return await dispatch(\r\n      accountsActions.fetchAccountsList()\r\n    );\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    fetchAccountsList,\r\n    fetchCreateAccount,\r\n    fetchRemoveAccounts,\r\n  }\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  makeStyles,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport { Formik, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport { useContainerAccounts } from 'src/containers/Accounts/hooks';\r\n\r\nexport interface IAccountFormValues {\r\n  login: string;\r\n  password: string;\r\n  admin: string;\r\n}\r\n\r\nexport interface IPropsAccountForm {\r\n  onSubmit?:() => void;\r\n}\r\n\r\nconst initialValues: IAccountFormValues = {\r\n  login: '',\r\n  password: '',\r\n  admin: '0',\r\n};\r\n\r\nconst AccountForm: React.FC<IPropsAccountForm> = (props) => {\r\n  const styles = useStyles();\r\n  const { handleSubmit, validate } = useHooks(props);\r\n\r\n  return (\r\n    <Card style={{ width: 400 }}>\r\n      <CardHeader title={<Typography variant=\"h3\">Create new account</Typography>} />\r\n      <CardContent>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validate={validate}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {(formikProps: FormikProps<IAccountFormValues>) => {\r\n            const loading = formikProps.isSubmitting;\r\n            return (\r\n              <Form>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"login\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        return (\r\n                          <TextField\r\n                            fullWidth\r\n                            error={Boolean(meta.touched && meta.error)}\r\n                            label=\"Enter login\"\r\n                            variant=\"outlined\"\r\n                            {...field}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"password\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        return (\r\n                          <TextField\r\n                            fullWidth\r\n                            error={Boolean(meta.touched && meta.error)}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            autoComplete={'off'}\r\n                            variant=\"outlined\"\r\n                            {...field}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"admin\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field } = params;\r\n                        return (\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                checked={field.value === '1'}\r\n                                onChange={(_, checked) => {\r\n                                  formikProps.setFieldValue('admin', checked ? '1' : '0');\r\n                                }}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label=\"Administrator\"\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                    <Button\r\n                      disabled={loading}\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      variant={'contained'}\r\n                      color=\"secondary\"\r\n                      disableElevation\r\n                      fullWidth\r\n                    >\r\n                      {!loading && 'Submit'}\r\n                      {loading && <CircularProgress className={styles.progress} size={26} />}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsAccountForm) => {\r\n  const { onSubmit } = props;\r\n  const { fetchCreateAccount } = useContainerAccounts();\r\n\r\nconst validate = useCallback(() => {}, []);\r\n\r\n  const handleSubmit = useCallback(async (values: IAccountFormValues) => {\r\n    await fetchCreateAccount({\r\n      isAdmin: values.admin === '1',\r\n      login: values.login,\r\n      password: values.password,\r\n    })\r\n    if (onSubmit) {\r\n      onSubmit();\r\n    }\r\n  }, [onSubmit, fetchCreateAccount]);\r\n\r\n  return {\r\n    validate,\r\n    handleSubmit,\r\n    fetchCreateAccount,\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  progress: {\r\n    marginLeft: 20,\r\n  },\r\n}));\r\n\r\nexport default AccountForm;\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreAccounts } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreAccounts => state.accounts;\r\nexport const createFetchSelector = createSelector(containerState, (state) => state.create);\r\nexport const accountsListSelector = createSelector(containerState, (state) => state.list);\r\n","import React, { useCallback } from 'react';\r\nimport { Card, CardContent, Typography, CardActions, Button, makeStyles } from '@material-ui/core';\r\nimport ApproveModal from '../ApproveModal';\r\nimport { useContainerAccounts } from 'src/containers/Accounts/hooks';\r\n\r\nexport interface IAccountData {\r\n  id: number;\r\n  login: string;\r\n}\r\n\r\nexport interface IPropsAccountItem {\r\n  data: IAccountData;\r\n}\r\n\r\nconst AccountItem: React.FC<IPropsAccountItem> = (props) => {\r\n  const styles = useStyles();\r\n  const { deleteAccount } = useHooks();\r\n\r\n  const { data } = props;\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant={'caption'} component={'div'}>\r\n          Account\r\n        </Typography>\r\n        <Typography variant={'h4'} component={'div'}>\r\n          {data.login}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={styles.actions}>\r\n        <ApproveModal\r\n          title={'Are you sure want to delete account?'}\r\n          content={'Every associated keys will be unavailable'}\r\n          onSubmit={() => deleteAccount(data.id)}\r\n        >\r\n          <Button size=\"small\">Remove account</Button>\r\n        </ApproveModal>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchRemoveAccounts } = useContainerAccounts();\r\n  const deleteAccount = useCallback(\r\n    async (id: number) => {\r\n      await fetchRemoveAccounts({ ids: [id] });\r\n    },\r\n    [fetchRemoveAccounts],\r\n  );\r\n\r\n  return {\r\n    deleteAccount,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actions: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n}));\r\n\r\nexport default AccountItem;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Grid, Button, Dialog } from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport AccountForm from 'src/components/AccountForm';\r\nimport { accountsListSelector } from 'src/containers/Accounts/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport AccountItem from '../AccountItem';\r\nimport { useContainerAccounts } from 'src/containers/Accounts/hooks';\r\n\r\nconst AccountsList: React.FC = () => {\r\n  const accountsData = useSelector(accountsListSelector);\r\n  const { isFormOpened, handleModalToggle } = useHooks();\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={isFormOpened} onClose={handleModalToggle}>\r\n        <AccountForm onSubmit={handleModalToggle} />\r\n      </Dialog>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<AddCircleOutlineIcon />}\r\n            onClick={handleModalToggle}\r\n          >\r\n            Add account\r\n          </Button>\r\n        </Grid>\r\n        <Grid container item spacing={2} xs={12}>\r\n          {accountsData.accounts.map((account) => {\r\n            return (\r\n              <Grid item key={account.id} xs={6}>\r\n                <AccountItem data={account} />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const [isFormOpened, toggleForm] = useState(false);\r\n  const { fetchAccountsList } = useContainerAccounts();\r\n\r\n  const handleModalToggle = useCallback(() => {\r\n    toggleForm(!isFormOpened);\r\n  }, [isFormOpened, toggleForm]);\r\n\r\n  useEffect(() => {\r\n    void fetchAccountsList();\r\n  }, [fetchAccountsList]);\r\n\r\n  return {\r\n    isFormOpened,\r\n    toggleForm,\r\n    handleModalToggle,\r\n  }\r\n};\r\n\r\nexport default AccountsList;\r\n","import React from 'react';\r\nimport { makeStyles, Container } from '@material-ui/core';\r\nimport AccountsList from 'src/components/AccountsList';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    paddingTop: 24,\r\n    paddingBottom: 24,\r\n  },\r\n}));\r\n\r\nconst AccountsPage: React.FC = () => {\r\n  const styles = useStyles();\r\n  return (\r\n    <Container className={styles.container}>\r\n      <AccountsList />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AccountsPage;\r\n","import { useCallback } from 'react';\r\nimport { useAppDispatch } from 'src/store';\r\nimport {\r\n  IApiParamsReposCreate,\r\n  IApiParamsReposList,\r\n  IApiParamsReposRemove,\r\n} from 'src/lib/api/repos/types';\r\n\r\nimport { actions as reposActions } from './reducer';\r\nimport * as reposSelectors from './selectors';\r\nimport { generatePassword } from 'src/lib/utils/generatePassword';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerRepos = () => {\r\n  const dispatch = useAppDispatch();\r\n  const pager = useSelector(reposSelectors.pagerSelector);\r\n  const search = useSelector(reposSelectors.searchSelector);\r\n\r\n  const createNewRepo = useCallback(\r\n    (params: Omit<IApiParamsReposCreate, 'accessToken'>) => {\r\n      const token = generatePassword(64);\r\n      return dispatch(reposActions.fetchCreateRepo({ ...params, accessToken: token }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const changePager = useCallback(\r\n    (params: Partial<IApiPager>) => {\r\n      return dispatch(reposActions.changePager(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const changeSearch = useCallback(\r\n    (search?: string) => {\r\n      return dispatch(reposActions.changeSearch({ search }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchListRepo = useCallback(\r\n    (params?: IApiParamsReposList) => {\r\n      return dispatch(reposActions.fetchListRepo(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchListRepoWatch = useCallback(() => {\r\n    const params = {\r\n      page: pager.page,\r\n      perPage: pager.perPage,\r\n      search,\r\n    };\r\n    return fetchListRepo(params);\r\n  }, [fetchListRepo, pager.page, pager.perPage, search]);\r\n\r\n  const deleteRepos = useCallback(\r\n    async (params: IApiParamsReposRemove) => {\r\n      await dispatch(reposActions.fetchRemoveRepos(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return {\r\n    createNewRepo,\r\n    deleteRepos,\r\n    fetchListRepo,\r\n    changePager,\r\n    fetchListRepoWatch,\r\n    changeSearch,\r\n  };\r\n};\r\n","import React, { useCallback, useRef } from 'react';\r\nimport {\r\n  CardContent,\r\n  Card,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  makeStyles,\r\n  Grid,\r\n  Chip,\r\n  Divider,\r\n  InputAdornment,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport ApproveModal from 'src/components/ApproveModal';\r\nimport { useContainerRepos } from 'src/containers/Repos/hooks';\r\nimport * as sessionSelectors from 'src/containers/Session/selectors';\r\nimport CopyBtn from '../CopyBtn';\r\nimport CodeFormat from '../CodeFormat';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport interface IRepoItemData {\r\n  id: number;\r\n  name: string;\r\n  code: string;\r\n  accessToken: string;\r\n  entries: { name: string }[];\r\n}\r\n\r\nexport interface IPropsRepoItem {\r\n  data: IRepoItemData;\r\n}\r\n\r\nconst RepoItem: React.FC<IPropsRepoItem> = (props) => {\r\n  const { data } = props;\r\n  const styles = useStyles();\r\n  const host = useSelector(sessionSelectors.host);\r\n  const { deleteRepos, accessRef, handleFocus } = useHooks();\r\n  const targetUrl = `${host || ''}/repo/bunch/${data.code}`;\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography variant={'caption'} component={'div'}>\r\n              Repository\r\n            </Typography>\r\n            <Typography variant={'h5'} component={'div'}>\r\n              {data.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid container item xs={12} spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography variant={'caption'} component={'div'}>\r\n                Contained keys\r\n              </Typography>\r\n            </Grid>\r\n            {data.entries.map(({ name }, i) => {\r\n              return (\r\n                <Grid item key={i}>\r\n                  <Chip label={name} variant={'outlined'} />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Access token\"\r\n              variant=\"outlined\"\r\n              value={data.accessToken}\r\n              onFocus={handleFocus}\r\n              InputProps={{\r\n                inputRef: accessRef,\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <CopyBtn inputRef={accessRef} message={`URL has been copied!`} />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography>Key can be fetched via POST with access token.</Typography>\r\n            <CodeFormat>\r\n              {`curl -d '{ \"accessToken\":\"${data.accessToken}\" }' -H \"Content-Type: application/json\" -X POST ${targetUrl}`}\r\n            </CodeFormat>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions className={styles.actions}>\r\n        <ApproveModal\r\n          title={'Are you sure want to delete repo?'}\r\n          onSubmit={() => deleteRepos({ ids: [data.id] })}\r\n        >\r\n          <Button size=\"small\">Remove</Button>\r\n        </ApproveModal>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { deleteRepos } = useContainerRepos();\r\n\r\n  const handleFocus: React.FocusEventHandler<HTMLInputElement> = useCallback((event) => {\r\n    event.target.select();\r\n  }, []);\r\n\r\n  const accessRef = useRef<HTMLInputElement>(null);\r\n\r\n  return {\r\n    accessRef,\r\n    deleteRepos,\r\n    handleFocus,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actions: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  contentItems: {\r\n    display: 'flex',\r\n  },\r\n  contentItem: {\r\n    marginRight: 20,\r\n  },\r\n}));\r\n\r\nexport default RepoItem;\r\n","import React, { useEffect, useState, ChangeEvent, useCallback } from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Checkbox,\r\n  makeStyles,\r\n  Box,\r\n  Divider,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { IApiKeyEntry } from 'src/lib/api/types';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\nimport { IApiParamsKeysList, IApiResultKeysList } from 'src/lib/api/keys/list';\r\nimport { useAsyncEffect } from 'src/lib/utils/useAPIEffect';\r\nimport SearchInput from '../SearchInput';\r\n\r\nexport interface IPropsEntriesPicker {\r\n  pickedSet?: string[];\r\n  onUpdate?: (selected: IApiKeyEntry[]) => void;\r\n}\r\n\r\nconst EntriesPicker: React.FC<IPropsEntriesPicker> = (props) => {\r\n  const { picked, options, handleChangeItem, handleSearchChange } = useHooks(props);\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} className={styles.topDivider}><Divider /></Grid>\r\n      <Grid item xs={12} >\r\n        <SearchInput placeholder={'Select required keys...'} onThrottledChange={handleSearchChange} fullWidth />\r\n        <Box className={styles.scrollBar}>\r\n          <PerfectScrollbar>\r\n            <List>\r\n              {options.map((item) => {\r\n                return (\r\n                  <div key={item.id}>\r\n                    <ListItem key={item.id}>\r\n                      <ListItemIcon>\r\n                        <Checkbox\r\n                          edge=\"start\"\r\n                          size=\"small\"\r\n                          disableRipple\r\n                          checked={picked.includes(item.code)}\r\n                          onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                            handleChangeItem(item.code, e.target.checked)\r\n                          }\r\n                        />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={item.name} />\r\n                    </ListItem>\r\n                  </div>\r\n                );\r\n              })}\r\n            </List>\r\n          </PerfectScrollbar>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsEntriesPicker) => {\r\n  const { pickedSet, onUpdate } = props;\r\n  const [picked, pickItems] = useState<string[]>([]);\r\n  const [options, setOptions] = useState<IApiKeyEntry[]>([]);\r\n  const [pickedDetails, changePickedDetails] = useState<{ [id: number]: IApiKeyEntry }>({});\r\n  const [searchParams, setParams] = useState<{\r\n    page?: number;\r\n    perPage?: number;\r\n    search?: string;\r\n  }>({});\r\n\r\n  useUpdatePickedSetFromProps(pickedSet, pickItems);\r\n  useGetPickedDetails(picked, pickedDetails, changePickedDetails);\r\n  useFetchOptions(searchParams, setOptions);\r\n\r\n  const handleChangeItem = useCallback(\r\n    (code: string, checked: boolean) => {\r\n      const newItems = checked ? picked.concat([code]) : picked.filter((item) => item !== code);\r\n\r\n      if (onUpdate) {\r\n        onUpdate(options.filter((item) => newItems.includes(item.code)));\r\n      }\r\n\r\n      pickItems(newItems);\r\n    },\r\n    [onUpdate, pickItems, options, picked],\r\n  );\r\n\r\n  const handleSearchChange = useCallback(\r\n    (val: string) => {\r\n      setParams((s) => ({ ...s, search: val }));\r\n    },\r\n    [setParams],\r\n  );\r\n\r\n  return {\r\n    options,\r\n    picked,\r\n    handleChangeItem,\r\n    handleSearchChange,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  scrollBar: {\r\n    height: 220,\r\n  },\r\n  topDivider: {\r\n    marginBottom: 5,\r\n  }\r\n}));\r\n\r\nconst useUpdatePickedSetFromProps = (\r\n  pickedSet: string[] | undefined,\r\n  pickItems: (p: string[]) => void,\r\n) => {\r\n  useEffect(() => {\r\n    if (pickedSet) {\r\n      pickItems(pickedSet);\r\n    }\r\n  }, [pickedSet, pickItems]);\r\n};\r\n\r\nconst useGetPickedDetails = (\r\n  picked: string[],\r\n  pickedDetails: Record<string, IApiKeyEntry>,\r\n  changePickedDetails: (p: Record<number, IApiKeyEntry>) => void,\r\n) => {\r\n  const { requestKeysByIds } = useContainerKeys();\r\n  useEffect(() => {\r\n    const newDetails = pickedDetails;\r\n    const requestTargets: string[] = [];\r\n\r\n    picked.forEach((id) => {\r\n      if (!newDetails[id]) {\r\n        requestTargets.push(id);\r\n      }\r\n    });\r\n    /*\r\n    if (requestTargets.length > 0) {\r\n      requestKeysByIds({ ids: requestTargets })\r\n        .then(({ items }) => {\r\n          items.forEach((item) => {\r\n            newDetails[item.id] = item;\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n      changePickedDetails(newDetails);\r\n    }\r\n    */\r\n  }, [picked, pickedDetails, changePickedDetails, requestKeysByIds]);\r\n};\r\n\r\nconst useFetchOptions = (\r\n  params: IApiParamsKeysList,\r\n  setOptions: (opts: IApiKeyEntry[]) => void,\r\n) => {\r\n  const { requestKeysList } = useContainerKeys();\r\n\r\n  const fetchList = useCallback(() => {\r\n    return requestKeysList(params);\r\n  }, [params, requestKeysList]);\r\n\r\n  const onComplete = useCallback(\r\n    (res: IApiResultKeysList) => {\r\n      setOptions(res.items);\r\n    },\r\n    [setOptions],\r\n  );\r\n\r\n  useAsyncEffect(fetchList, onComplete);\r\n};\r\n\r\nexport default EntriesPicker;\r\n","import { useEffect } from 'react';\r\n\r\nexport const useAsyncEffect = <R, E extends Error>(\r\n  func: () => Promise<R>,\r\n  onSuccess: (result: R) => void,\r\n  onError?: (error: E) => void,\r\n): void => {\r\n  useEffect(() => {\r\n    let isUnmounted = false;\r\n\r\n    func().then((result: R) => {\r\n      !isUnmounted && onSuccess(result);\r\n    }).catch((err: E) => {\r\n      if (!isUnmounted && onError) {\r\n        onError(err);\r\n      } else if (!isUnmounted) {\r\n        throw err;\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      isUnmounted = true;\r\n    }\r\n  }, [func, onSuccess, onError]);\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { Formik, FormikProps, Form, Field, FieldProps, FormikErrors, FormikHelpers } from 'formik';\r\n\r\nimport EntriesPicker from 'src/components/EntriesPicker';\r\nimport { useContainerRepos } from 'src/containers/Repos/hooks';\r\nimport { SerializedError } from '@reduxjs/toolkit';\r\nimport Message from '../Message';\r\n\r\nexport interface IRepositoryFormValues {\r\n  code: string;\r\n  entries: string[];\r\n  server?: string;\r\n}\r\n\r\nexport interface IPropsRepositoryForm {\r\n  onSubmit?: () => void;\r\n}\r\n\r\nconst validate = (values: IRepositoryFormValues) => {\r\n  const { code, entries } = values;\r\n  const errors: FormikErrors<typeof values> = {};\r\n\r\n  if (!code || code.length === 0) {\r\n    errors.code = 'Code required!';\r\n  }\r\n\r\n  if (entries.length === 0) {\r\n    errors.entries = 'Choose at least one entry';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst RepositoryForm: React.FC<IPropsRepositoryForm> = (props) => {\r\n  const styles = useStyles();\r\n  const { handleSubmit } = useHooks(props);\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ width: 400 }}>\r\n        <CardHeader title={<Typography variant=\"h3\">Create new repository</Typography>} />\r\n        <CardContent>\r\n          <Formik\r\n            initialValues={{\r\n              code: '',\r\n              entries: [],\r\n            }}\r\n            validate={validate}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            {(formikProps: FormikProps<IRepositoryFormValues>) => {\r\n              const loading = formikProps.isSubmitting;\r\n              return (\r\n                <Form>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <Field name=\"code\">\r\n                        {(params: FieldProps<string>) => {\r\n                          const { field, meta } = params;\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              error={Boolean(meta.touched && meta.error)}\r\n                              label=\"Choose unique code\"\r\n                              variant=\"outlined\"\r\n                              {...field}\r\n                            />\r\n                          );\r\n                        }}\r\n                      </Field>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Field name=\"entries\">\r\n                        {(params: FieldProps<string[]>) => {\r\n                          const { field, meta } = params;\r\n                          return (\r\n                            <>\r\n                              <EntriesPicker\r\n                                onUpdate={(items) => {\r\n                                  formikProps.setFieldValue(\r\n                                    'entries',\r\n                                    items.map(({ code }) => code),\r\n                                  );\r\n                                }}\r\n                                pickedSet={field.value}\r\n                              />\r\n                              {meta.touched && meta.error && (\r\n                                <Typography\r\n                                  variant={'caption'}\r\n                                  color={'error'}\r\n                                  className={styles.keyError}\r\n                                >\r\n                                  {meta.error}\r\n                                </Typography>\r\n                              )}\r\n                            </>\r\n                          );\r\n                        }}\r\n                      </Field>\r\n                    </Grid>\r\n                    {formikProps.errors.server && (\r\n                      <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                        <Message>{formikProps.errors.server}</Message>\r\n                      </Grid>\r\n                    )}\r\n                    <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                      <Button\r\n                        disabled={loading}\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        variant={'contained'}\r\n                        color=\"secondary\"\r\n                        disableElevation\r\n                        fullWidth\r\n                      >\r\n                        {!loading && 'Submit'}\r\n                        {loading && <CircularProgress className={styles.progress} size={26} />}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsRepositoryForm) => {\r\n  const { onSubmit } = props;\r\n  const { createNewRepo } = useContainerRepos();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (values: IRepositoryFormValues, formikHelpers: FormikHelpers<IRepositoryFormValues>) => {\r\n      const result = await createNewRepo({\r\n        code: values.code,\r\n        name: values.code,\r\n        description: values.code,\r\n        keys: values.entries,\r\n      });\r\n      const error = (result as { error: SerializedError }).error;\r\n\r\n      if (!error && onSubmit) {\r\n        onSubmit();\r\n      } else {\r\n        formikHelpers.setErrors({ server: error.message });\r\n      }\r\n    },\r\n    [createNewRepo, onSubmit],\r\n  );\r\n\r\n  return { handleSubmit };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  progress: {\r\n    marginLeft: 20,\r\n  },\r\n  keyTitle: {\r\n    marginTop: 10,\r\n    marginBotton: 10,\r\n    paddingLeft: 10,\r\n  },\r\n  keyError: {\r\n    paddingLeft: 10,\r\n  },\r\n}));\r\n\r\nexport default RepositoryForm;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, Button, Dialog, Box, Typography } from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nimport RepoItem from 'src/components/RepoItem';\r\nimport RepositoryForm from 'src/components/RepositoryForm';\r\nimport * as reposSelectors from 'src/containers/Repos/selectors';\r\nimport { useContainerRepos } from 'src/containers/Repos/hooks';\r\nimport PerPageSelect from '../PerPageSelect';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchInput from '../SearchInput';\r\n\r\nconst ReposList: React.FC = () => {\r\n  const styles = useStyles();\r\n  const { items, pager, pagerOptions } = useSelector(reposSelectors.reposListSelector);\r\n  const search = useSelector(reposSelectors.searchSelector);\r\n  const isEmpty = useSelector(reposSelectors.isEmptySelector);\r\n\r\n  const {\r\n    handleModalToggle,\r\n    isFormOpened,\r\n    handleChangePerPage,\r\n    handlePagerChange,\r\n    handleChangeSearch,\r\n  } = useHooks();\r\n\r\n  return (\r\n    <Box>\r\n      <Dialog open={isFormOpened} onClose={handleModalToggle}>\r\n        <RepositoryForm onSubmit={handleModalToggle} />\r\n      </Dialog>\r\n      <Grid container spacing={2}>\r\n        <Grid item spacing={2} container xs={12}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<AddCircleOutlineIcon />}\r\n              onClick={handleModalToggle}\r\n            >\r\n              Add repository\r\n            </Button>\r\n          </Grid>\r\n          {!isEmpty && (\r\n            <Grid item>\r\n              <SearchInput\r\n                defaultValue={search}\r\n                onThrottledChange={handleChangeSearch}\r\n                placeholder={'Search by name...'}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        {items.length > 0 && (\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              {items.map((repo) => {\r\n                return (\r\n                  <Grid item xs={6} key={repo.id}>\r\n                    <RepoItem data={repo} />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {isEmpty && (\r\n          <Grid item xs={12} className={styles.noItems}>\r\n            <Typography variant=\"h5\">There is no repositories.</Typography>\r\n          </Grid>\r\n        )}\r\n        {pager.totalItems !== undefined && pager.totalItems > 0 && (\r\n          <Grid container item xs={12} spacing={2} alignItems=\"center\">\r\n            <Grid item>\r\n              <PerPageSelect\r\n                current={pager.perPage}\r\n                options={pagerOptions}\r\n                onSelect={handleChangePerPage}\r\n              />\r\n            </Grid>\r\n            <Grid item className={styles.pagerHolder}>\r\n              {pager.totalPages !== undefined && pager.totalPages > 1 && (\r\n                <Pagination\r\n                  onChange={handlePagerChange}\r\n                  count={pager.totalPages}\r\n                  page={pager.page}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { changePager, changeSearch } = useContainerRepos();\r\n  const [isFormOpened, toggleForm] = useState(false);\r\n\r\n  const handleChangeSearch = useCallback(\r\n    (val: string) => {\r\n      return changeSearch(val);\r\n    },\r\n    [changeSearch],\r\n  );\r\n\r\n  const handleChangePerPage = useCallback(\r\n    (val: number) => {\r\n      return changePager({ perPage: val });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handlePagerChange = useCallback(\r\n    (_: unknown, page: number) => {\r\n      return changePager({ page });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handleModalToggle = useCallback(() => {\r\n    toggleForm(!isFormOpened);\r\n  }, [isFormOpened, toggleForm]);\r\n\r\n  return {\r\n    isFormOpened,\r\n    handleChangeSearch,\r\n    handleModalToggle,\r\n    handleChangePerPage,\r\n    handlePagerChange,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pagerHolder: {\r\n    marginLeft: 'auto',\r\n  },\r\n  searchHolder: {\r\n    marginLeft: 'auto',\r\n  },\r\n  noItems: {\r\n    marginTop: 20,\r\n  },\r\n}));\r\n\r\nexport default ReposList;\r\n","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport ReposList from 'src/components/ReposList';\r\nimport { useContainerRepos } from 'src/containers/Repos/hooks';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    paddingTop: 16,\r\n    paddingBottom: 24,\r\n  }\r\n}));\r\n\r\nexport const ReposPage: React.FC = () => {\r\n  const styles = useStyles();\r\n  useHooks();\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <ReposList />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchListRepoWatch } = useContainerRepos();\r\n\r\n  useEffect(() => {\r\n    const req = fetchListRepoWatch();\r\n    return () => {\r\n      req.abort();\r\n    }\r\n  }, [fetchListRepoWatch]);\r\n}\r\nexport default ReposPage;\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreStorage } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreStorage => state.storage;\r\nexport const storageItems = createSelector(containerState, (state) => state.items);\r\nexport const storagePager = createSelector(containerState, (state) => state.pager);\r\nexport const storageFilter = createSelector(containerState, (state) => state.filter);\r\nexport const storagePagerOptions = createSelector(containerState, (state) => state.pagerOptions);\r\n\r\nexport const isEmptySelector = createSelector(storageFilter, storageItems, (filter, items) => {\r\n  const { entryName } = filter;\r\n  return (!entryName || entryName.length === 0) && items.length === 0;\r\n});\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { IApiStorageItem } from 'src/lib/api/types';\r\nimport moment from 'moment';\r\nimport { useContainerPreviewKey } from 'src/containers/KeyPreview/hooks';\r\n\r\nexport interface IStorageTableItem {\r\n  expUnix: number;\r\n  activateUnix: number;\r\n  entry: {\r\n    name: string;\r\n    archivedAt: number | null;\r\n  };\r\n}\r\n\r\nexport interface IPropsStorageTable {\r\n  items: IApiStorageItem[];\r\n}\r\n\r\nconst StorageTable: React.FC<IPropsStorageTable> = (props) => {\r\n  const { items } = props;\r\n  const { handleOpenKeyPreview } = useHooks();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Id</TableCell>\r\n            <TableCell>Type</TableCell>\r\n            <TableCell>Algorithm</TableCell>\r\n            <TableCell>Entry name</TableCell>\r\n            <TableCell>Entry code</TableCell>\r\n            <TableCell>Status</TableCell>\r\n            <TableCell>Period</TableCell>\r\n            <TableCell align=\"center\">\r\n              Actions\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {items.map((item) => {\r\n            const now = moment();\r\n            const expMoment = moment.unix(item.expUnix);\r\n            const activateMoment = moment.unix(item.activateUnix);\r\n            const dateFormat = 'LL';\r\n\r\n            let currentStatus = '';\r\n\r\n            if (item.entry.archivedAt !== null) {\r\n              currentStatus = 'Archived';\r\n            } else if (Boolean(item.expUnix) && expMoment.isBefore(now)) {\r\n              currentStatus = 'Expired';\r\n            } else if (activateMoment.isAfter(now)) {\r\n              currentStatus = 'Awaiting';\r\n            } else {\r\n              currentStatus = 'Active';\r\n            }\r\n\r\n            return (\r\n              <TableRow key={item.key.kid}>\r\n                <TableCell>{item.key.kid}</TableCell>\r\n                <TableCell>{item.key.kty}</TableCell>\r\n                <TableCell>{item.key.alg}</TableCell>\r\n                <TableCell>{item.entry.name}</TableCell>\r\n                <TableCell>{item.entry.code}</TableCell>\r\n                <TableCell>{currentStatus}</TableCell>\r\n                <TableCell>\r\n                  {item.expUnix\r\n                    ? `${activateMoment.format(dateFormat)} - ${expMoment.format(dateFormat)}`\r\n                    : `Non-rotatable`}\r\n                </TableCell>\r\n                <TableCell align=\"center\" >\r\n                  <Grid container spacing={2} justify=\"center\">\r\n                    <Grid item>\r\n                      <IconButton size=\"small\" onClick={() => handleOpenKeyPreview(item.key.kid)}>\r\n                        <VisibilityIcon />\r\n                      </IconButton>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { openKeyPreview } = useContainerPreviewKey();\r\n\r\n  const handleOpenKeyPreview = useCallback(async (id: string) => {\r\n    await openKeyPreview({ id: parseInt(id) }, { format: 'jwk', privacy: 'public' });\r\n  }, [openKeyPreview]);\r\n\r\n  return {\r\n    handleOpenKeyPreview,\r\n  }\r\n}\r\n\r\nexport default StorageTable;\r\n","import { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { IApiParamsKeysStorage } from 'src/lib/api/keys/storage';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { useAppDispatch } from 'src/store';\r\nimport { actions as storageActions } from './reducer';\r\nimport * as storageSelectors from './selectors';\r\nimport { IStoreStorage } from './types';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerStorage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const storagePager = useSelector(storageSelectors.storagePager);\r\n  const storageFilter = useSelector(storageSelectors.storageFilter);\r\n\r\n  const changePager = useCallback((pager: Partial<IApiPager>) => {\r\n    return dispatch(storageActions.changePager(pager));\r\n  }, [dispatch]);\r\n\r\n  const changeFilter = useCallback((filter: Partial<IStoreStorage['filter']>) => {\r\n    return dispatch(storageActions.changeFilter(filter));\r\n  }, [dispatch]);\r\n\r\n  const fetchStorageItems = useCallback(\r\n    (params: IApiParamsKeysStorage) => {\r\n      return dispatch(storageActions.fetchStorageItems(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchStorageItemsWatcher = useCallback(() => {\r\n    const params = {\r\n      page: storagePager.page,\r\n      perPage: storagePager.perPage,\r\n      filter: storageFilter,\r\n    };\r\n    return fetchStorageItems(params);\r\n  }, [fetchStorageItems, storagePager.page, storagePager.perPage, storageFilter]);\r\n\r\n  return {\r\n    changePager,\r\n    changeFilter,\r\n    fetchStorageItems,\r\n    fetchStorageItemsWatcher,\r\n  };\r\n};\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TablePagination, Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport * as storageSelectors from 'src/containers/Storage/selectors';\r\nimport StorageTable from 'src/components/StorageTable';\r\nimport { useContainerStorage } from 'src/containers/Storage/hooks';\r\nimport SearchInput from 'src/components/SearchInput';\r\n\r\nconst StorageList: React.FC = () => {\r\n  const storageItems = useSelector(storageSelectors.storageItems);\r\n  const storageFilter = useSelector(storageSelectors.storageFilter);\r\n  const pagerOptions = useSelector(storageSelectors.storagePagerOptions);\r\n  const isEmpty = useSelector(storageSelectors.isEmptySelector);\r\n\r\n  const {\r\n    targetPage,\r\n    storagePager,\r\n    totalItems,\r\n    handlePagerChange,\r\n    handleChangePerPage,\r\n    handleChangeFilterEntryName,\r\n  } = useHooks();\r\n\r\n  if (totalItems === undefined) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      { !isEmpty &&\r\n        <Grid container item xs={12}>\r\n          <Grid item>\r\n            <SearchInput\r\n              placeholder={'Search by entry name'}\r\n              defaultValue={storageFilter.entryName}\r\n              onThrottledChange={handleChangeFilterEntryName}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      }\r\n      { isEmpty &&\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\">Storage is empty.</Typography>\r\n        </Grid>\r\n      }\r\n      {totalItems > 0 && (\r\n        <Grid item xs={12}>\r\n          <StorageTable items={storageItems} />\r\n        </Grid>\r\n      )}\r\n      {targetPage !== undefined && totalItems > 0 && (\r\n        <Grid item xs={12}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={totalItems}\r\n            page={targetPage - 1}\r\n            rowsPerPageOptions={pagerOptions}\r\n            onChangePage={handlePagerChange}\r\n            rowsPerPage={storagePager.perPage}\r\n            onChangeRowsPerPage={handleChangePerPage}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { changePager, changeFilter } = useContainerStorage();\r\n  const storagePager = useSelector(storageSelectors.storagePager);\r\n  const { totalItems, perPage, page } = storagePager;\r\n\r\n  const targetPage = useMemo(() => {\r\n    if (totalItems === undefined) {\r\n      return undefined;\r\n    }\r\n    const maxPage = Math.ceil(totalItems / perPage);\r\n    return Math.min(maxPage, page);\r\n  }, [totalItems, perPage, page]);\r\n\r\n  const handleChangeFilterEntryName = useCallback(\r\n    (val: string) => {\r\n      return changeFilter({ entryName: val });\r\n    },\r\n    [changeFilter],\r\n  );\r\n\r\n  const handlePagerChange = useCallback(\r\n    (_event: React.MouseEvent<HTMLButtonElement> | null, value: number) => {\r\n      return changePager({ page: value + 1 });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handleChangePerPage = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n      const val = parseInt(event.target.value, 10);\r\n      return changePager({ perPage: val });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  return {\r\n    targetPage,\r\n    storagePager,\r\n    totalItems,\r\n    handlePagerChange,\r\n    handleChangeFilterEntryName,\r\n    handleChangePerPage,\r\n  };\r\n};\r\n\r\nexport default StorageList;\r\n","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport StorageList from 'src/components/StorageList';\r\nimport { KeyPreviewModal } from 'src/components/KeyPreview';\r\nimport { useContainerStorage } from 'src/containers/Storage/hooks';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    paddingTop: 24,\r\n    paddingBottom: 24,\r\n  }\r\n}));\r\n\r\nexport const StoragePage: React.FC = () => {\r\n  const styles = useStyles();\r\n  useHooks();\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <StorageList />\r\n      <KeyPreviewModal />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchStorageItemsWatcher } = useContainerStorage();\r\n\r\n  useEffect(() => {\r\n    const req = fetchStorageItemsWatcher();\r\n\r\n    return () => {\r\n      req.abort();\r\n    };\r\n  }, [fetchStorageItemsWatcher]);\r\n}\r\n\r\nexport default StoragePage;\r\n","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport KeysList from 'src/components/KeysList';\r\nimport { KeyPreviewModal } from 'src/components/KeyPreview';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\n\r\nexport const ArchivePage: React.FC = () => {\r\n  const styles = useStyles();\r\n  useHooks();\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <KeysList archive />\r\n      <KeyPreviewModal />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    flexGrow: 1,\r\n    paddingTop: 16,\r\n  }\r\n}));\r\n\r\nconst useHooks = () => {\r\n  const { fetchArchiveListWatch, resetList } = useContainerKeys();\r\n\r\n  useEffect(() => {\r\n    const req = fetchArchiveListWatch();\r\n    return () => {\r\n      req.abort();\r\n    };\r\n  }, [fetchArchiveListWatch]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      resetList();\r\n    };\r\n  }, [resetList]);\r\n}\r\n\r\nexport default ArchivePage;\r\n","/* eslint-disable react/display-name */\r\nimport React from 'react';\r\nimport { RouteConfig } from 'react-router-config';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { ROUTES } from 'src/constants/routes';\r\nimport AuthLayout from 'src/layouts/AuthLayout';\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport LoginForm from 'src/components/LoginForm';\r\nimport KeysPage from 'src/pages/KeysPage';\r\nimport AccountsPage from 'src/pages/AccountsPage';\r\nimport { ReposPage } from 'src/pages/ReposPage';\r\nimport { StoragePage } from 'src/pages/StoragePage';\r\nimport { ArchivePage } from './pages/ArchivePage';\r\n\r\nconst routes: RouteConfig[] = [\r\n  {\r\n    path: '/',\r\n    exact: true,\r\n    component: (): React.ReactElement => <Redirect to={ROUTES.KEYS} />,\r\n  },\r\n  {\r\n    path: ROUTES.AUTH,\r\n    component: AuthLayout,\r\n    routes: [\r\n      {\r\n        path: ROUTES.AUTH_LOGIN,\r\n        exact: true,\r\n        component: LoginForm,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: ROUTES.DASHBOARD,\r\n    component: DashboardLayout,\r\n    routes: [\r\n      {\r\n        path: ROUTES.KEYS,\r\n        component: KeysPage,\r\n      },\r\n      {\r\n        path: ROUTES.ACCOUNTS,\r\n        component: AccountsPage,\r\n      },\r\n      {\r\n        path: ROUTES.REPOS,\r\n        component: ReposPage,\r\n      },\r\n      {\r\n        path: ROUTES.STORAGE,\r\n        component: StoragePage,\r\n      },\r\n      {\r\n        path: ROUTES.ARCHIVE,\r\n        component: ArchivePage,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrap = styled.div`\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { isAlreadyFetched } from 'src/containers/Session/selectors';\r\nimport { useContainerSession } from 'src/containers/Session/hooks';\r\nimport * as S from './styles';\r\n\r\nconst StartScreen: React.FC = (props) => {\r\n  const isComplete = useSelector(isAlreadyFetched);\r\n  useHooks();\r\n\r\n  if (isComplete) {\r\n    return <>{props.children}</>;\r\n  }\r\n\r\n  return (\r\n    <S.Wrap>\r\n      <CircularProgress size={60} />\r\n    </S.Wrap>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchMe } = useContainerSession();\r\n\r\n  useEffect(() => {\r\n    const req = fetchMe();\r\n    return () => {\r\n      req.abort();\r\n    }\r\n  }, [fetchMe]);\r\n};\r\n\r\nexport default StartScreen;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useLocation, Redirect } from 'react-router-dom';\r\n\r\nimport { IStore } from 'src/reducer';\r\nimport * as userStateSelectors from 'src/containers/Session/selectors';\r\n\r\nexport interface IPropsAuthGuard {}\r\n\r\nexport interface IConnectAuthGuard {\r\n  isUserAuthorized: boolean;\r\n}\r\n\r\nconst AuthGuard: React.FC<IPropsAuthGuard> = (props) => {\r\n  const location = useLocation();\r\n\r\n  const storeData = useSelector<IStore, IConnectAuthGuard>(\r\n    createStructuredSelector({\r\n      isUserAuthorized: userStateSelectors.isUserAuthorized,\r\n    }),\r\n  );\r\n\r\n  if (storeData.isUserAuthorized && location.pathname === '/auth/login') {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (!storeData.isUserAuthorized && location.pathname !== '/auth/login') {\r\n    return <Redirect to=\"/auth/login\" />;\r\n  }\r\n\r\n  return <>{props.children}</>;\r\n};\r\n\r\nexport default AuthGuard;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider as StoreProvider } from 'react-redux';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport { renderRoutes } from 'react-router-config';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport 'src/theme/global.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\n\r\nimport { store } from 'src/store';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\nimport StartScreen from './components/StartScreen';\r\nimport AuthGuard from './components/AuthGuard';\r\n\r\nconst targetNode = document.getElementById('root');\r\n\r\nif (targetNode) {\r\n  const history = createBrowserHistory();\r\n  ReactDOM.render(\r\n    <StoreProvider store={store}>\r\n      <CssBaseline />\r\n      <ThemeProvider theme={theme}>\r\n        <Router history={history}>\r\n          <StartScreen>\r\n            <AuthGuard>{renderRoutes(routes)}</AuthGuard>\r\n          </StartScreen>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </StoreProvider>,\r\n    targetNode,\r\n  );\r\n}\r\n"],"sourceRoot":""}