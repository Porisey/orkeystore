{"version":3,"sources":["lib/errors/HttpResponseError.ts","lib/utils/fetch.ts","constants/settings.ts","lib/api/auth/login.ts","lib/api/auth/logout.ts","lib/api/auth/me.ts","lib/api/auth/account.ts","lib/api/auth/accounts.ts","lib/api/auth/index.ts","lib/api/auth/remove.ts","lib/api/index.ts","lib/api/keys/index.ts","lib/api/keys/list.ts","lib/api/keys/create.ts","lib/api/keys/remove.ts","lib/api/keys/storage.ts","lib/api/keys/archive.ts","lib/api/keys/restore.ts","lib/api/keys/preview.ts","lib/api/keys/byIds.ts","lib/api/repos/index.ts","lib/api/repos/create.ts","lib/api/repos/list.ts","lib/api/repos/remove.ts","constants/routes.ts","constants/mainMenu.ts","containers/Session/reducer.ts","containers/Accounts/reducer.ts","constants/pager.ts","containers/Repos/reducer.ts","containers/Storage/reducer.ts","containers/Keys/reducer.ts","containers/KeyPreview/reducer.ts","containers/KeyPreview/constants.ts","reducer.ts","containers/Session/saga.ts","containers/Keys/selectors.ts","containers/Keys/saga.ts","containers/Repos/selectors.ts","containers/Repos/saga.ts","saga.ts","store.ts","theme/palette.ts","theme/typography.ts","theme/overrides/index.ts","theme/overrides/MuiTableHead.ts","theme/overrides/MuiTableCell.ts","theme/overrides/MuiCardHeader.ts","theme/index.ts","containers/Session/selectors.ts","components/TopBar/styled.ts","containers/Session/hooks.ts","components/TopBar/index.tsx","layouts/AuthLayout/styled.ts","components/Message/styles.ts","components/Message/index.tsx","components/LoginForm/styled.ts","components/LoginForm/index.tsx","layouts/AuthLayout/index.tsx","components/ExpiredSession/index.tsx","components/MainMenu/index.tsx","layouts/DashboardLayout/styled.ts","layouts/DashboardLayout/index.tsx","lib/utils/generatePassword.ts","containers/Keys/hooks.ts","components/CopyBtn/index.tsx","components/UrlsList/index.tsx","components/ApproveModal/index.tsx","components/MessageTooltip/index.tsx","components/CodeFormat/index.tsx","components/PopMenu/index.tsx","components/TextFieldWithOptions/index.tsx","containers/KeyPreview/hooks.ts","components/PrivateUrls/index.tsx","components/KeyItem/index.tsx","components/PerPageSelect/index.tsx","components/SearchInput/index.tsx","components/Portal/index.tsx","components/EmptyKeysList/index.tsx","components/EmptyArchive/index.tsx","components/KeysList/index.tsx","containers/KeyPreview/selectors.ts","components/KeyPreview/index.tsx","components/KeyEntryForm/index.tsx","components/Page/index.tsx","pages/KeysPage/index.tsx","containers/Accounts/hooks.ts","components/AccountForm/index.tsx","containers/Accounts/selectors.ts","components/AccountItem/index.tsx","components/AccountsList/index.tsx","pages/AccountsPage/index.tsx","containers/Repos/hooks.ts","components/RepoItem/index.tsx","components/EmptyReposList/index.tsx","components/ReposList/index.tsx","components/EntriesPicker/index.tsx","lib/utils/useAPIEffect.ts","components/RepositoryForm/index.tsx","pages/ReposPage/index.tsx","containers/Storage/selectors.ts","components/StorageTable/index.tsx","containers/Storage/hooks.ts","components/EmptyStorage/index.tsx","components/StorageList/index.tsx","pages/StoragePage/index.tsx","pages/ArchivePage/index.tsx","routes.tsx","components/StartScreen/styles.ts","components/StartScreen/index.tsx","components/AuthGuard/index.tsx","index.tsx"],"names":["HttpRequestError","status","message","Object","setPrototypeOf","prototype","statusCode","this","Error","headers","prop","val","input","init","url","replace","processedInput","window","fetch","credentials","res","json","data","store","dispatch","sessionActions","setSessionExpired","isExpired","params","a","fetcher","removeHeader","localStorage","removeItem","fetchJson","method","body","JSON","stringify","result","setItem","setHeader","token","isLogout","rawAuth","getItem","parse","sesssionData","_params","remove","deleted","account","accounts","login","logout","me","auth","keys","list","page","perPage","search","isArchived","query","qs","archived","addQueryPrefix","create","key","id","toString","storage","archive","entry","restore","preview","isByEntry","targetUrl","byIds","ids","repos","created","ROUTES","MAIN_MENU_LINKS","path","name","title","icon","isAdminOnly","pureState","isUserAuthorized","isAlreadyFetched","isSessionExpired","mainMenuLinks","errors","loginForm","reducers","setUserData","state","action","payload","Boolean","defineMenuLinks","isAdmin","filter","item","undefined","fetchLoginUser","createAsyncThunk","api","fetchMe","fetchLogout","set","createSlice","initialState","extraReducers","builder","forEach","trigger","addCase","pending","fulfilled","hosts","privateHost","private","publicHost","public","rejected","error","parsedError","includes","code","actions","reducer","fetchCreateAccount","thunkApi","fetchAccountsList","fetchRemoveAccounts","loading","test","_action","DEFAULT_PAGE_OPTIONS","initial","items","pager","pagerOptions","resetState","toggleEditModal","isOpened","isEditModalOpened","changePager","changeSearch","fetchListRepo","fetchCreateRepo","fetchRemoveRepos","changeFilter","entryName","fetchStorageItems","edit","isModalOpened","setInitialRouteParsing","isRouteParsed","isParsed","reset","fetchCreateKey","fetchKeysList","fetchRemoveKeyItem","fetchArchiveKeyItem","fetchRestoreKeyItem","targetInitial","meta","arg","totalItems","toggleModal","isOpen","modal","setParams","fetchKeyPreview","_thunkApi","availFormats","label","availPrivacy","details","session","sessionReducer","keysReducer","accountsReducer","reposReducer","storageReducer","keyPreview","rootReducer","combineReducers","sagaSession","menuUpdate","fork","takeEvery","put","containerState","keysListSelector","createSelector","keysPagerSelector","keysSearchSelector","initialSelector","isRouteParsedSelector","keysPagerOptionsSelector","isKeyListEmpty","length","keysRequestSelector","sagaKeys","reloadKeysList","keysActions","select","type","fetchParams","targetPage","Math","max","ceil","reposListSelector","pagerSelector","searchSelector","isEmptySelector","sagaRepos","reloadReposListAfterCreationOrDeletion","reposActions","reposSelectors","isCreation","newPage","mainSaga","sagaMiddleware","createSagaMiddleware","middleware","thunk","enhancer","applyMiddleware","createStore","composeWithDevTools","run","rootSaga","initializeStore","useAppDispatch","useDispatch","white","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","red","text","blueGrey","link","background","default","paper","divider","grey","typography","palette","h1","color","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiTableHead","root","backgroundColor","MuiTableCell","borderBottom","head","paddingTop","paddingBottom","MuiCardHeader","marginRight","marginTop","theme","createMuiTheme","overrides","host","tokenSelector","privateHostSelector","publicHostSelector","Grow","styled","div","useContainerSession","useCallback","useHooks","TopBar","user","useSelector","sessionSelectors","isLogoutAvail","AppBar","position","Toolbar","Typography","variant","Button","onClick","Wrap","BarHolder","FormHolder","Root","Paper","Message","TextWrap","Box","props","elevation","children","defaultProps","severnity","Container","Body","BodyLine","LineItem","SubmitButton","initialValues","username","password","handleSubmit","values","validate","LoginForm","serverErrors","userServerErrors","Card","CardHeader","CardContent","onSubmit","_props","field","TextField","touched","autoComplete","size","AuthLayout","ExpiredSession","Dialog","open","useStyles","makeStyles","iconWrap","maxWidth","minWidth","MainMenu","history","useHistory","mainMenu","styles","location","useLocation","List","component","map","isActive","pathname","ListItem","push","ListItemIcon","className","Icon","ListItemText","primaryTypographyProps","Header","Menu","Main","MainContent","MainFooter","DashboardLayout","route","routes","renderRoutes","generatePassword","charset","retVal","i","n","charAt","floor","random","useContainerKeys","keysSelectors","accessToken","histroy","fetchKeysListWatch","fetchArchiveListWatch","requestKeysList","requestKeysByIds","resetList","routeParser","ignoreQueryPrefix","parseInt","isNaN","newEntry","routeWatcher","defaultPage","defaultPerPage","useState","isCopied","setCopied","handleCopy","inputRef","current","document","execCommand","handleCloseSnack","CopyBtn","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","onClose","Alert","severity","IconButton","handleFocus","event","target","inputRefs","useMemo","React","createRef","padding","width","UrlsList","value","fullWidth","onFocus","InputProps","endAdornment","InputAdornment","isPrivate","ApproveModal","toggleDialog","DialogTitle","content","DialogContent","DialogActions","autoFocus","HtmlTooltip","withStyles","tooltip","pxToRem","border","Tooltip","MessageTooltip","pre","display","overflowX","height","whiteSpace","CodeFormat","menuStaticProps","transformOrigin","menu","PopMenu","keepMounted","anchorEl","handleClose","MenuItem","onSelectMenuItem","TextFieldWithOptions","currentMenuLabel","fieldProps","inputProps","disabled","setAnchorEl","beforeOptions","currentTarget","afterOptions","useContainerPreviewKey","keyPreviewActions","setPreviewParams","openKeyPreview","apiParams","previewParams","KEY_FORMATS","formatId","setFormat","format","find","keysHost","urlRef","useRef","accessRef","handleSetFormat","handleOpenPreviewModal","privacy","exampleMessage","justifyContent","PrivateUrls","Grid","container","spacing","xs","accessCode","Link","rotateInterval","publicUrls","deleteItem","archiveItem","restoreItem","rotation","moment","duration","humanize","privateWrap","marginBottom","marginLeft","opacity","codeHolder","textAlign","KeyItem","justify","Divider","Accordion","AccordionSummary","expandIcon","placement","gutterBottom","AccordionDetails","style","flexGrow","CardActions","archivedAt","onSelect","handleChange","e","PerPageSelect","options","alignItems","Select","onChange","onThrottledChange","restProps","InputPropsMemo","startAdornment","throttledChange","debounce","SearchInput","Portal","el","setEl","useLayoutEffect","getElementById","ReactDOM","createPortal","buttonBox","EmptyKeysList","startIcon","onAddNewOne","EmptyArchive","isFormOpened","handleModalToggle","handlePagerChange","_event","handleChangePerPage","handleChangeSearch","notFound","footerWrap","loaderWrap","minHeight","pagerHolder","searchHolder","wrap","noItems","KeysList","isEmpty","defaultValue","placeholder","CircularProgress","totalPages","Pagination","count","KeyPreview","keyData","keyInputRef","formatsBtnRef","privacyBtnRef","targetKey","isFormatsMenuOpen","isPrivacyMenuOpen","handleFormatsMenuClose","handleFormatsMenuOpen","handlePrivacyMenuClose","handlePrivacyMenuOpen","handleFormatsMenuItemSelect","handlePrivacyMenuItemSelect","handleDialogClose","formatString","toUpperCase","privacyString","activatesAt","unix","expiresAt","ref","copyHolder","readOnly","keyInput","KeyPreviewModal","modalState","keyPreviewSelectors","toggleFormatsMenu","togglePrivacyMenu","publicKey","privateKey","targetKeys","pem","jwk","togglePreviewModal","overflow","left","top","unitOptions","h","d","w","m","defaultInitialValues","unit","rotatable","KeyEntryForm","menuItems","formikProps","isSubmitting","textfield","codeMask","mask","isEnabled","setFieldValue","digitMask","FormControlLabel","control","Checkbox","checked","_","server","disableElevation","progress","KeyEntryFormModal","closeModal","formikHelpers","errorResult","setErrors","Inputmask","regex","String","raw","Page","isLoading","useEffect","req","abort","KeysPage","useContainerAccounts","accountsActions","admin","AccountForm","accountsListSelector","deleteAccount","AccountItem","toggleForm","AccountsList","accountsData","AccountsPage","useContainerRepos","createNewRepo","opts","fetchListRepoWatch","deleteRepos","contentItems","contentItem","RepoItem","entries","Chip","EmptyReposList","isEditFormOpened","ReposList","repo","pickedSet","onUpdate","picked","pickItems","setOptions","pickedDetails","changePickedDetails","searchParams","useUpdatePickedSetFromProps","useGetPickedDetails","useFetchOptions","handleChangeItem","newItems","concat","handleSearchChange","s","scrollBar","topDivider","noItemsMessage","newDetails","requestTargets","func","onSuccess","onError","fetchList","onComplete","isUnmounted","then","catch","err","EntriesPicker","edge","disableRipple","RepositoryForm","keyError","RepositoryFormModal","isRepoEditModalOpened","description","keyTitle","marginBotton","paddingLeft","ReposPage","isInitialLoading","storageItems","storagePager","storageFilter","loadingSelector","storagePagerOptions","storageRequestSelector","initiated","handleOpenKeyPreview","StorageTable","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","now","expMoment","expUnix","activateMoment","activateUnix","currentStatus","isBefore","isAfter","kid","kty","alg","useContainerStorage","storageSelectors","storageActions","fetchStorageItemsWatcher","EmptyStorage","maxPage","min","handleChangeFilterEntryName","StorageList","Fade","in","TablePagination","rowsPerPageOptions","onChangePage","rowsPerPage","onChangeRowsPerPage","StoragePage","ArchivePage","exact","to","StartScreen","isComplete","AuthGuard","storeData","createStructuredSelector","userStateSelectors","targetNode","createBrowserHistory","render","CssBaseline","ThemeProvider"],"mappings":"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","file":"static/js/main.a96f15a9.chunk.js","sourcesContent":["export interface IHttpRequestErrorInfo {\r\n  statusCode: number;\r\n  message: string;\r\n}\r\n\r\nexport class HttpRequestError extends Error {\r\n  constructor (public status: number, public message: string) {\r\n    super(message);\r\n    Object.setPrototypeOf(this, HttpRequestError.prototype);\r\n  }\r\n\r\n  getInfo(): IHttpRequestErrorInfo {\r\n    return {\r\n      statusCode: this.status,\r\n      message: this.message,\r\n    };\r\n  }\r\n}\r\n","import 'whatwg-fetch';\r\nimport { HttpRequestError } from '../errors/HttpResponseError';\r\nimport { API_URL } from 'src/constants/settings';\r\nimport { store } from 'src/store';\r\nimport { actions as sessionActions } from 'src/containers/Session/reducer';\r\n\r\nconst targetApi = API_URL;\r\n\r\nclass AppFetcher {\r\n  headers: Record<string, string>;\r\n\r\n  constructor(headers?: Record<string, string>) {\r\n    this.headers = headers || {};\r\n  }\r\n\r\n  setHeader(prop: string, val: string) {\r\n    this.headers = {\r\n      ...this.headers,\r\n      [prop]: val\r\n    }\r\n  }\r\n\r\n  removeHeader(prop: string) {\r\n    if (this.headers) {\r\n      delete this.headers[prop];\r\n    }\r\n  }\r\n\r\n  async fetch(input: RequestInfo, init?: RequestInit): Promise<Response> {\r\n    let processedInput;\r\n\r\n    if (typeof input !== 'string') {\r\n      input.url.replace('{api}', targetApi);\r\n\r\n      processedInput = {\r\n        ...input,\r\n        url: input.url,\r\n      };\r\n    } else {\r\n      processedInput = input.replace('{api}', targetApi);\r\n    }\r\n\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      ...this.headers,\r\n      ...init?.headers,\r\n    };\r\n\r\n    return window.fetch(processedInput, {\r\n      credentials: 'include',\r\n      ...init,\r\n      headers,\r\n    });\r\n  }\r\n\r\n  async fetchJson<T>(\r\n    input: RequestInfo,\r\n    init?: RequestInit,\r\n  ): Promise<T> {\r\n    try {\r\n      const res = await this.fetch(input, init);\r\n\r\n      if (res.status < 300) {\r\n        return (await res.json()) as T;\r\n      } else {\r\n        const data = (await res.json()) as { statusCode: number; message: string };\r\n        throw new HttpRequestError(data.statusCode, data.message);\r\n      }\r\n    } catch (err) {\r\n      if (err instanceof HttpRequestError) {\r\n        switch (err.status) {\r\n          case 401:\r\n            store.dispatch(sessionActions.setSessionExpired({ isExpired: true }));\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AppFetcher();\r\n","export const IS_DEV = process.env.NODE_ENV === 'development';\r\nexport const API_URL = IS_DEV ? 'http://localhost:3000' : '';\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsAuthLogin, IApiResultAuthLogin } from './types';\r\n\r\nexport default async (params: IApiParamsAuthLogin): Promise<IApiResultAuthLogin> => {\r\n  fetcher.removeHeader(`Authorization`);\r\n  localStorage.removeItem('auth');\r\n\r\n  const result = await fetcher.fetchJson<IApiResultAuthLogin>(\r\n    '{api}/auth/token',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(params)\r\n    }\r\n  );\r\n\r\n\r\n  if (result) {\r\n    localStorage.setItem('auth', JSON.stringify(result));\r\n    fetcher.setHeader(`Authorization`, `Bearer ${result.token}`);\r\n  }\r\n\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultAuthLogout } from './types';\r\n\r\n// eslint-disable-next-line @typescript-eslint/require-await\r\nexport default async (): Promise<IApiResultAuthLogout> => {\r\n  fetcher.removeHeader(`Authorization`);\r\n  localStorage.removeItem('auth');\r\n  return { isLogout: true }\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultAuthLogin } from './types';\r\nimport { HttpRequestError } from 'src/lib/errors/HttpResponseError';\r\n\r\n// eslint-disable-next-line @typescript-eslint/require-await\r\nexport default async (): Promise<IApiResultAuthLogin> => {\r\n  const rawAuth = localStorage.getItem('auth');\r\n\r\n  if (rawAuth === null) {\r\n    throw new HttpRequestError(401, 'No jwt presents');\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n  const result: IApiResultAuthLogin = JSON.parse(rawAuth);\r\n  fetcher.setHeader(`Authorization`, `Bearer ${result.token}`);\r\n\r\n  const sesssionData = await fetcher.fetchJson<IApiResultAuthLogin>('{api}/auth/me', {\r\n    method: 'GET',\r\n  });\r\n\r\n  return sesssionData;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsAuthAccount, IApiResultAuthAccount } from './types';\r\n\r\nexport default async (params: IApiParamsAuthAccount): Promise<IApiResultAuthAccount | null> => {\r\n  const result = await fetcher.fetchJson<IApiResultAuthAccount>(\r\n    '{api}/auth/account',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(params)\r\n    }\r\n  );\r\n\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsAuthAccounts, IApiResultAuthAccounts } from './types';\r\n\r\nexport default async (_params?: IApiParamsAuthAccounts): Promise<IApiResultAuthAccounts> => {\r\n  const result = await fetcher.fetchJson<IApiResultAuthAccounts>(\r\n    '{api}/auth/accounts',\r\n    {\r\n      method: 'GET',\r\n    }\r\n  );\r\n\r\n  return result;\r\n};\r\n","import login from './login';\r\nimport logout from './logout';\r\nimport me from './me';\r\nimport account from './account';\r\nimport accounts from './accounts';\r\nimport remove from './remove';\r\n\r\nexport default {\r\n  remove,\r\n  account,\r\n  accounts,\r\n  login,\r\n  logout,\r\n  me,\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultAuthRemove, IApiParamsAuthRemove } from './types';\r\n\r\nexport default async (params: IApiParamsAuthRemove): Promise<IApiResultAuthRemove | null> => {\r\n  const result = await fetcher.fetchJson<IApiResultAuthRemove['deleted']>(\r\n    '{api}/auth/accounts',\r\n    {\r\n      method: 'DELETE',\r\n      body: JSON.stringify(params),\r\n    }\r\n  );\r\n\r\n  return result ? { deleted: result } : null;\r\n};\r\n","import auth from './auth';\r\nimport keys from './keys';\r\nimport repos from './repos';\r\n\r\nexport default {\r\n  auth,\r\n  keys,\r\n  repos,\r\n};\r\n","import list from './list';\r\nimport create from './create';\r\nimport remove from './remove';\r\nimport storage from './storage';\r\nimport archive from './archive';\r\nimport restore from './restore';\r\nimport preview from './preview';\r\nimport byIds from './byIds';\r\n\r\nexport default {\r\n  list,\r\n  create,\r\n  remove,\r\n  storage,\r\n  archive,\r\n  restore,\r\n  preview,\r\n  byIds,\r\n}\r\n","import qs from 'qs';\r\nimport fetcher from 'src/lib/utils/fetch';\r\nimport { IApiKeyEntry, IApiPager } from '../types';\r\n\r\nexport interface IApiParamsKeysList {\r\n  page?: number;\r\n  perPage?: number;\r\n  search?: string;\r\n  isArchived?: boolean;\r\n}\r\n\r\nexport interface IApiResultKeysList {\r\n  items: IApiKeyEntry[];\r\n  pager: IApiPager;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysList = {}): Promise<IApiResultKeysList> => {\r\n  const { page, perPage, search, isArchived } = params;\r\n  const query = qs.stringify({ page, perPage, search, archived: isArchived ? 1 : 0 }, { addQueryPrefix: true });\r\n\r\n  const result = await fetcher.fetchJson<IApiResultKeysList>(\r\n    `{api}/entry/list${query}`,\r\n    {\r\n      method: 'GET',\r\n    }\r\n  );\r\n\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultKeysCreate, IApiParamsKeysCreate } from './types';\r\n\r\nexport default async (params: IApiParamsKeysCreate): Promise<IApiResultKeysCreate> => {\r\n  const result = await fetcher.fetchJson<IApiResultKeysCreate['key']>(\r\n    '{api}/entry/create',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(params),\r\n    }\r\n  );\r\n\r\n  return { key: result };\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsKeysRemove, IApiResultKeysRemove } from './types';\r\n\r\nexport default async (params: IApiParamsKeysRemove): Promise<IApiResultKeysRemove> => {\r\n  const result = await fetcher.fetchJson<IApiResultKeysRemove['deleted']>(\r\n    `{api}/entry/${params.id.toString()}`,\r\n    {\r\n      method: 'DELETE',\r\n    }\r\n  );\r\n\r\n  return { deleted: result };\r\n};\r\n","import qs from 'qs';\r\nimport fetcher from 'src/lib/utils/fetch';\r\nimport { IApiPager, IApiStorageItem } from 'src/lib/api/types';\r\n\r\nexport interface IApiParamsKeysStorage {\r\n  page?: number;\r\n  perPage?: number;\r\n  search?: string;\r\n}\r\n\r\nexport interface IApiResultKeysStorage {\r\n  items: IApiStorageItem[];\r\n  pager: IApiPager;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysStorage): Promise<IApiResultKeysStorage> => {\r\n  const query = qs.stringify(params, { addQueryPrefix: true });\r\n  return await fetcher.fetchJson<IApiResultKeysStorage>(`{api}/key/storage${query}`, {\r\n    method: 'GET',\r\n  });\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiKeyEntry } from 'src/lib/api/types';\r\n\r\nexport interface IApiParamsKeysArchive {\r\n  id: number;\r\n}\r\n\r\nexport interface IApiResultKeysArchive {\r\n  entry: IApiKeyEntry;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysArchive): Promise<IApiResultKeysArchive> => {\r\n  const result = await fetcher.fetchJson<IApiResultKeysArchive['entry']>(\r\n    `{api}/entry/archive/${params.id.toString()}`,\r\n    {\r\n      method: 'POST',\r\n    }\r\n  );\r\n\r\n  return { entry: result };\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiKeyEntry } from 'src/lib/api/types';\r\n\r\nexport interface IApiParamsKeysRestore {\r\n  id: number;\r\n}\r\n\r\nexport interface IApiResultKeysRestore {\r\n  entry: IApiKeyEntry;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysRestore): Promise<IApiResultKeysRestore> => {\r\n  const result = await fetcher.fetchJson<IApiResultKeysRestore['entry']>(\r\n    `{api}/entry/restore/${params.id.toString()}`,\r\n    {\r\n      method: 'POST',\r\n    }\r\n  );\r\n\r\n  return { entry: result };\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiPrivateJWK, IApiPublicJWK } from '../types';\r\n\r\nexport interface IApiParamsKeysPreview {\r\n  id: number;\r\n  isByEntry?: boolean;\r\n}\r\nexport interface IApiResultKeysPreview {\r\n  publicKey: { jwk: IApiPublicJWK; pem: string };\r\n  privateKey?: { jwk: IApiPrivateJWK; pem: string };\r\n  activatesAt: number;\r\n  expiresAt: number;\r\n  entryId: number;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysPreview): Promise<IApiResultKeysPreview> => {\r\n  const { id, isByEntry } = params;\r\n  const targetUrl = isByEntry ? `{api}/key/byEntry/${id.toString()}` : `{api}/key/${id.toString()}`;\r\n  return await fetcher.fetchJson<IApiResultKeysPreview>(targetUrl);\r\n};\r\n","import qs from 'qs';\r\nimport fetcher from 'src/lib/utils/fetch';\r\nimport { IApiKeyEntry } from '../types';\r\n\r\nexport interface IApiParamsKeysByIds {\r\n  ids: number[];\r\n}\r\n\r\nexport interface IApiResultKeysByIds {\r\n  items: IApiKeyEntry[];\r\n}\r\n\r\nexport default async (params: IApiParamsKeysByIds): Promise<IApiResultKeysByIds> => {\r\n  const { ids } = params;\r\n  const query = qs.stringify({ ids }, { addQueryPrefix: true });\r\n\r\n  const result = await fetcher.fetchJson<IApiResultKeysByIds>(`{api}/entry/byIds${query}`, {\r\n    method: 'GET',\r\n  });\r\n\r\n  return result;\r\n};\r\n","import { create } from './create';\r\nimport { list } from './list';\r\nimport { remove } from './remove';\r\n\r\nexport default {\r\n  create,\r\n  list,\r\n  remove,\r\n}\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsReposCreate, IApiResultReposCreate } from './types';\r\n\r\nexport const create = async (\r\n  params: IApiParamsReposCreate,\r\n): Promise<IApiResultReposCreate | null> => {\r\n  const result = await fetcher.fetchJson<IApiResultReposCreate['created']>('{api}/repo/create', {\r\n    method: 'POST',\r\n    body: JSON.stringify(params),\r\n  });\r\n\r\n  return result ? { created: result } : null;\r\n};\r\n","import qs from 'qs';\r\nimport fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultReposList } from './types';\r\n\r\nexport interface IApiParamsReposList {\r\n  page?: number;\r\n  perPage?: number;\r\n}\r\nexport const list = async (params: IApiParamsReposList = {}): Promise<IApiResultReposList> => {\r\n  const query = qs.stringify(params, { addQueryPrefix: true });\r\n  const result = await fetcher.fetchJson<IApiResultReposList>(`{api}/repo/list${query}`);\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsReposRemove, IApiResultReposRemove } from './types';\r\n\r\nexport const remove = async (params: IApiParamsReposRemove): Promise<IApiResultReposRemove> => {\r\n  const result = await fetcher.fetchJson<IApiResultReposRemove['deleted']>('{api}/repo/remove', {\r\n    method: 'DELETE',\r\n    body: JSON.stringify(params),\r\n  });\r\n\r\n  return { deleted: result ? result : [] };\r\n};\r\n","export const ROUTES = {\r\n  AUTH: '/auth',\r\n  AUTH_LOGIN: '/auth/login',\r\n  DASHBOARD: '/dashboard',\r\n  DASHBOARD_SPECIES: '/dashboard/species',\r\n  ACCOUNTS: '/dashboard/accounts',\r\n  KEYS: '/dashboard/keys',\r\n  REPOS: '/dashboard/repos',\r\n  STORAGE: '/dashboard/journal',\r\n  ARCHIVE: '/dashboard/archive',\r\n}\r\n","import { ROUTES } from \"./routes\";\r\n\r\nexport const MAIN_MENU_LINKS = [\r\n  { id: 1, path: ROUTES.KEYS , name: 'keys', title: 'Active keys', icon: 'vpn_key', isAdminOnly: false },\r\n  { id: 3, path: ROUTES.ARCHIVE , name: 'archive', title: 'Archived keys', icon: 'unarchive', isAdminOnly: false },\r\n  { id: 2, path: ROUTES.REPOS, name: 'repos', title: 'Repositories', icon: 'apps', isAdminOnly: false },\r\n  { id: 4, path: ROUTES.STORAGE , name: 'storage', title: 'Storage', icon: 'inbox', isAdminOnly: false },\r\n];\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IStoreSession } from './types';\r\nimport {\r\n  IApiResultAuthLogin,\r\n  IApiParamsAuthLogin,\r\n  IApiResultAuthLogout,\r\n} from 'src/lib/api/auth/types';\r\nimport { MAIN_MENU_LINKS } from 'src/constants/mainMenu';\r\n\r\ntype S = IStoreSession;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'SESSION';\r\n\r\nconst pureState: IStoreSession = {\r\n  isUserAuthorized: false,\r\n  isAlreadyFetched: false,\r\n  isSessionExpired: false,\r\n  mainMenuLinks: [],\r\n  errors: {\r\n    loginForm: null,\r\n  },\r\n};\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  setUserData: (state: S, action: PA<IApiResultAuthLogin>): S => {\r\n    const { token, account } = action.payload;\r\n\r\n    return {\r\n      ...state,\r\n      token,\r\n      account,\r\n      isUserAuthorized: Boolean(token),\r\n    };\r\n  },\r\n  defineMenuLinks: (state: S): S => {\r\n    const isAdmin = Boolean(state.account?.isAdmin);\r\n    const mainMenuLinks = MAIN_MENU_LINKS.filter((item) => {\r\n      return isAdmin || !item.isAdminOnly;\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      mainMenuLinks,\r\n    };\r\n  },\r\n  setSessionExpired: (state: S, action: PA<{ isExpired: boolean }>): S => {\r\n    if (state.isUserAuthorized) {\r\n      return {\r\n        ...state,\r\n        isSessionExpired: action.payload.isExpired,\r\n      };\r\n    } else {\r\n      return {\r\n        ...state,\r\n        token: undefined,\r\n        isUserAuthorized: false,\r\n      };\r\n    }\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchLoginUser = createAsyncThunk(\r\n  `${prefix}/REQ_LOGIN`,\r\n  async (params: IApiParamsAuthLogin): Promise<IApiResultAuthLogin> => {\r\n    return await api.auth.login(params);\r\n  },\r\n);\r\n\r\nconst fetchMe = createAsyncThunk(\r\n  `${prefix}/REQ_ME`,\r\n  async (): Promise<IApiResultAuthLogin> => {\r\n    return await api.auth.me();\r\n  },\r\n);\r\n\r\nconst fetchLogout = createAsyncThunk(\r\n  `${prefix}/REQ_LOGOUT`,\r\n  async (): Promise<IApiResultAuthLogout> => {\r\n    return await api.auth.logout();\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: pureState,\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    [fetchLoginUser, fetchMe].forEach((trigger) => {\r\n      builder.addCase(trigger.pending, (state) => {\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            loginForm: null,\r\n          },\r\n        };\r\n      });\r\n\r\n      builder.addCase(trigger.fulfilled, (state, action) => {\r\n        const { token, account, hosts } = action.payload;\r\n        return {\r\n          ...state,\r\n          token,\r\n          account,\r\n          isUserAuthorized: Boolean(token),\r\n          isSessionExpired: false,\r\n          isAlreadyFetched: true,\r\n          privateHost: hosts.private,\r\n          publicHost: hosts.public,\r\n        };\r\n      });\r\n\r\n      builder.addCase(trigger.rejected, (state, action) => {\r\n        const { error } = action;\r\n        if (error === undefined) {\r\n          return state;\r\n        }\r\n\r\n        const parsedError = error.message?.includes('No jwt presents')\r\n          ? {}\r\n          : {\r\n              loginForm:\r\n                error.code === '500'\r\n                  ? 'Server error. Please, try again.'\r\n                  : 'Wrong login/password pair.',\r\n            };\r\n\r\n        return {\r\n          ...pureState,\r\n          isAlreadyFetched: true,\r\n          errors: {\r\n            ...state.errors,\r\n            ...parsedError,\r\n          },\r\n        };\r\n      });\r\n    });\r\n\r\n    builder.addCase(fetchLogout.fulfilled, (state) => {\r\n      return {\r\n        ...state,\r\n        token: undefined,\r\n        isUserAuthorized: false,\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchLoginUser,\r\n  fetchLogout,\r\n  fetchMe,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IStoreAccounts } from './types';\r\nimport {\r\n  IApiParamsAuthAccount,\r\n  IApiResultAuthAccount,\r\n  IApiResultAuthAccounts,\r\n  IApiResultAuthRemove,\r\n  IApiParamsAuthRemove,\r\n} from 'src/lib/api/auth/types';\r\n\r\ntype S = IStoreAccounts;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'ACCOUNTS';\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  test: (state: S, _action: PA<number>): S => {\r\n    return state;\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchCreateAccount = createAsyncThunk(\r\n  `${prefix}/SUBMIT_ACCOUNT`,\r\n  async (params: IApiParamsAuthAccount, thunkApi): Promise<IApiResultAuthAccount | null> => {\r\n    const result = await api.auth.account(params);\r\n    await thunkApi.dispatch(fetchAccountsList());\r\n    return result;\r\n  },\r\n);\r\n\r\nconst fetchRemoveAccounts = createAsyncThunk(\r\n  `${prefix}/REMOVE_ACCOUNTS`,\r\n  async (params: IApiParamsAuthRemove, thunkApi): Promise<IApiResultAuthRemove | null> => {\r\n    const result = await api.auth.remove(params);\r\n    await thunkApi.dispatch(fetchAccountsList());\r\n    return result;\r\n  },\r\n);\r\n\r\nconst fetchAccountsList = createAsyncThunk(\r\n  `${prefix}/FETCH_LIST`,\r\n  async (): Promise<IApiResultAuthAccounts> => {\r\n    const result = await api.auth.accounts();\r\n    return result;\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: {\r\n    create: {\r\n      error: null,\r\n      loading: false,\r\n    },\r\n    list: {\r\n      error: null,\r\n      loading: false,\r\n      accounts: [],\r\n    },\r\n  },\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCreateAccount.fulfilled, (state, action) => {\r\n      if (action.payload === null) {\r\n        return { ...state, create: { ...state.create, error: true, loading: false } };\r\n      }\r\n      return { ...state, error: null, loading: false };\r\n    });\r\n    builder.addCase(fetchAccountsList.fulfilled, (state, action) => {\r\n      if (action.payload === null) {\r\n        return { ...state, list: { ...state.list, error: true, loading: false, accounts: [] } };\r\n      }\r\n\r\n      const { accounts } = action.payload;\r\n\r\n      return { ...state, list: { ...state.list, error: null, loading: false, accounts } };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchCreateAccount,\r\n  fetchAccountsList,\r\n  fetchRemoveAccounts,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","export const DEFAULT_PAGE_OPTIONS = [4, 8, 16];\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IStoreRepos } from './types';\r\nimport {\r\n  IApiParamsReposCreate,\r\n  IApiResultReposCreate,\r\n  IApiResultReposList,\r\n  IApiParamsReposRemove,\r\n  IApiResultReposRemove,\r\n  IApiParamsReposList,\r\n} from 'src/lib/api/repos/types';\r\nimport { DEFAULT_PAGE_OPTIONS } from 'src/constants/pager';\r\nimport { IApiPager } from 'src/lib/api/types';\r\n\r\ntype S = IStoreRepos;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'REPOS';\r\n\r\nconst pureState: S = {\r\n  create: {\r\n    error: null,\r\n    loading: false,\r\n  },\r\n  list: {\r\n    initial: true,\r\n    error: null,\r\n    loading: false,\r\n    items: [],\r\n    pager: {\r\n      page: 1,\r\n      perPage: DEFAULT_PAGE_OPTIONS[0],\r\n    },\r\n    pagerOptions: DEFAULT_PAGE_OPTIONS,\r\n  },\r\n};\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  resetState: (): S => {\r\n    return pureState;\r\n  },\r\n  toggleEditModal: (state: S, action: PA<{ isOpened: boolean }>): S => {\r\n    const { isOpened } = action.payload;\r\n    return {\r\n      ...state,\r\n      isEditModalOpened: isOpened,\r\n    };\r\n  },\r\n  changePager: (state: S, action: PA<Partial<IApiPager>>): S => {\r\n    return {\r\n      ...state,\r\n      list: {\r\n        ...state.list,\r\n        pager: {\r\n          ...state.list.pager,\r\n          ...action.payload,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  changeSearch: (state: S, action: PA<Partial<{ search?: string }>>): S => {\r\n    return {\r\n      ...state,\r\n      list: {\r\n        ...state.list,\r\n        loading: action.payload.search !== state.list.search,\r\n        search: action.payload.search,\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchListRepo = createAsyncThunk(\r\n  `${prefix}/FETCH_LIST`,\r\n  async (params?: IApiParamsReposList): Promise<IApiResultReposList> => {\r\n    return await api.repos.list(params);\r\n  },\r\n);\r\n\r\nconst fetchCreateRepo = createAsyncThunk(\r\n  `${prefix}/SUBMIT_REPO`,\r\n  async (params: IApiParamsReposCreate): Promise<IApiResultReposCreate | null> => {\r\n    const result = await api.repos.create(params);\r\n    return result;\r\n  },\r\n);\r\n\r\nconst fetchRemoveRepos = createAsyncThunk(\r\n  `${prefix}/REMOVE_REPOS`,\r\n  async (params: IApiParamsReposRemove): Promise<IApiResultReposRemove> => {\r\n    const result = await api.repos.remove(params);\r\n    return result;\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: pureState,\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCreateRepo.fulfilled, (state, action) => {\r\n      if (action.payload === null) {\r\n        return { ...state, create: { ...state.create, error: true, loading: false } };\r\n      }\r\n      return { ...state, error: null, loading: false };\r\n    });\r\n\r\n    builder.addCase(fetchListRepo.pending, (state) => {\r\n      return {\r\n        ...state,\r\n        list: {\r\n          ...state.list,\r\n          error: null,\r\n          loading: true,\r\n        },\r\n      };\r\n    });\r\n\r\n    builder.addCase(fetchListRepo.fulfilled, (state, action) => {\r\n      return {\r\n        ...state,\r\n        list: {\r\n          ...state.list,\r\n          initial: false,\r\n          error: null,\r\n          loading: false,\r\n          items: action.payload.items,\r\n          pager: action.payload.pager,\r\n        },\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchCreateRepo,\r\n  fetchListRepo,\r\n  fetchRemoveRepos,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { IStoreStorage } from './types';\r\nimport api from 'src/lib/api';\r\nimport { IApiParamsKeysStorage, IApiResultKeysStorage } from 'src/lib/api/keys/storage';\r\nimport { IApiPager } from 'src/lib/api/types';\r\n\r\ntype S = IStoreStorage;\r\ntype PA<T> = PayloadAction<T>;\r\n\r\nconst prefix = 'STORAGE';\r\n\r\nconst pureState: S = {\r\n  loading: true,\r\n  initial: true,\r\n  error: null,\r\n  items: [],\r\n  pager: {\r\n    page: 1,\r\n    perPage: 10,\r\n  },\r\n  pagerOptions: [10, 25, 50],\r\n  filter: {},\r\n};\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  resetState: () => pureState,\r\n  changePager: (state: S, action: PA<Partial<IApiPager>>): S => {\r\n    return {\r\n      ...state,\r\n      pager: {\r\n        ...state.pager,\r\n        ...action.payload,\r\n      },\r\n    };\r\n  },\r\n  changeFilter: (state: S, action: PA<Partial<Partial<S['filter']>>>): S => {\r\n    return {\r\n      ...state,\r\n      loading: action.payload.entryName !== state.filter.entryName,\r\n      pager: {\r\n        ...state.pager,\r\n        page: 1,\r\n      },\r\n      filter: {\r\n        ...state.filter,\r\n        ...action.payload,\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchStorageItems = createAsyncThunk(\r\n  `${prefix}/FETCH_STORAGE`,\r\n  async (params: IApiParamsKeysStorage): Promise<IApiResultKeysStorage> => {\r\n    return await api.keys.storage(params);\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: pureState,\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchStorageItems.pending, (state) => {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    });\r\n\r\n    builder.addCase(fetchStorageItems.fulfilled, (state, action) => {\r\n      const { items, pager } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        initial: false,\r\n        loading: false,\r\n        items,\r\n        pager,\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchStorageItems,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IStoreKeys } from './types';\r\nimport {\r\n  IApiResultKeysRemove,\r\n  IApiParamsKeysRemove,\r\n  IApiParamsKeysCreate,\r\n  IApiResultKeysCreate,\r\n} from 'src/lib/api/keys/types';\r\nimport { IApiParamsKeysArchive, IApiResultKeysArchive } from 'src/lib/api/keys/archive';\r\nimport { IApiParamsKeysRestore, IApiResultKeysRestore } from 'src/lib/api/keys/restore';\r\nimport { IApiParamsKeysList, IApiResultKeysList } from 'src/lib/api/keys/list';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { DEFAULT_PAGE_OPTIONS } from 'src/constants/pager';\r\n\r\ntype S = IStoreKeys;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'KEYS';\r\n\r\nexport const pureState: S = {\r\n  initial: {\r\n    keys: true,\r\n    archive: true,\r\n  },\r\n  list: {\r\n    loading: {\r\n      keys: true,\r\n      archive: true,\r\n    },\r\n    errors: {\r\n      keys: null,\r\n    },\r\n    items: [],\r\n    pager: {\r\n      page: 1,\r\n      perPage: 4,\r\n    },\r\n    pagerOptions: DEFAULT_PAGE_OPTIONS,\r\n  },\r\n  edit: {\r\n    isModalOpened: false,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n};\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  changePager: (state: S, action: PA<Partial<IApiPager>>): S => {\r\n    return {\r\n      ...state,\r\n      list: {\r\n        ...state.list,\r\n        pager: {\r\n          ...state.list.pager,\r\n          ...action.payload,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  toggleEditModal: (state: S, action: PA<{ isOpened: boolean }>): S => {\r\n    return {\r\n      ...state,\r\n      edit: {\r\n        ...state.edit,\r\n        isModalOpened: action.payload.isOpened,\r\n      },\r\n    };\r\n  },\r\n  changeSearch: (state: S, action: PA<Partial<{ search?: string }>>): S => {\r\n    return {\r\n      ...state,\r\n      list: {\r\n        ...state.list,\r\n        loading: {\r\n          ...state.list.loading,\r\n          keys: action.payload.search !== state.list.query,\r\n        },\r\n        query: action.payload.search,\r\n        pager: {\r\n          ...state.list.pager,\r\n          page: 1,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  setInitialRouteParsing: (state: S, action: PA<{ isParsed: boolean }>): S => {\r\n    return {\r\n      ...state,\r\n      isRouteParsed: action.payload.isParsed,\r\n    };\r\n  },\r\n  reset: () => pureState,\r\n};\r\n\r\n/** Async logic */\r\nconst fetchCreateKey = createAsyncThunk(\r\n  `${prefix}/SUBMIT_KEY`,\r\n  async (params: IApiParamsKeysCreate): Promise<IApiResultKeysCreate> => {\r\n    const result = await api.keys.create(params);\r\n    // await thunkApi.dispatch(listActions.fetchKeysList());\r\n    return result;\r\n  },\r\n);\r\n\r\nconst fetchKeysList = createAsyncThunk(\r\n  `${prefix}/FETCH_KEYS`,\r\n  async (params: IApiParamsKeysList): Promise<IApiResultKeysList> => {\r\n    return await api.keys.list(params);\r\n  },\r\n);\r\n\r\nconst fetchRemoveKeyItem = createAsyncThunk(\r\n  `${prefix}/REMOVE_KEY`,\r\n  async (params: IApiParamsKeysRemove): Promise<IApiResultKeysRemove> => {\r\n    const result = await api.keys.remove(params);\r\n    return result ? result : { deleted: [] };\r\n  },\r\n);\r\n\r\nconst fetchArchiveKeyItem = createAsyncThunk(\r\n  `${prefix}/ARCHIVE_KEY`,\r\n  async (params: IApiParamsKeysArchive): Promise<IApiResultKeysArchive> => {\r\n    return await api.keys.archive(params);\r\n  },\r\n);\r\n\r\nconst fetchRestoreKeyItem = createAsyncThunk(\r\n  `${prefix}/RESTORE_KEY`,\r\n  async (params: IApiParamsKeysRestore): Promise<IApiResultKeysRestore> => {\r\n    return await api.keys.restore(params);\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: pureState,\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(\r\n      fetchKeysList.pending,\r\n      (state): S => {\r\n        return {\r\n          ...state,\r\n          list: { ...state.list, loading: { ...state.list.loading, keys: true } },\r\n        };\r\n      },\r\n    );\r\n    builder.addCase(\r\n      fetchKeysList.fulfilled,\r\n      (state, action): S => {\r\n        const { items, pager } = action.payload;\r\n        const { arg } = action.meta;\r\n        const targetInitial = arg.isArchived ? 'archive' : 'keys';\r\n\r\n        return {\r\n          ...state,\r\n          initial: {\r\n            ...state.initial,\r\n            [targetInitial]: false,\r\n          },\r\n          list: { ...state.list, items, pager, loading: { ...state.list.loading, keys: false } },\r\n        };\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      fetchRemoveKeyItem.fulfilled,\r\n      (state, action): S => {\r\n        const { id } = action.meta.arg;\r\n        const { totalItems } = state.list.pager;\r\n\r\n        return {\r\n          ...state,\r\n          list: {\r\n            ...state.list,\r\n            items: state.list.items.filter((item) => id !== item.id),\r\n            pager: { ...state.list.pager, totalItems: totalItems ? totalItems - 1 : undefined },\r\n          },\r\n        };\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      fetchArchiveKeyItem.fulfilled,\r\n      (state): S => {\r\n        const { totalItems } = state.list.pager;\r\n\r\n        return {\r\n          ...state,\r\n          list: {\r\n            ...state.list,\r\n            pager: { ...state.list.pager, totalItems: totalItems ? totalItems - 1 : undefined },\r\n          },\r\n        };\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      fetchRestoreKeyItem.fulfilled,\r\n      (state): S => {\r\n        const { totalItems } = state.list.pager;\r\n\r\n        return {\r\n          ...state,\r\n          list: {\r\n            ...state.list,\r\n            pager: { ...state.list.pager, totalItems: totalItems ? totalItems - 1 : undefined },\r\n          },\r\n        };\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      fetchCreateKey.fulfilled,\r\n      (state, action): S => {\r\n        const { totalItems } = state.list.pager;\r\n        return {\r\n          ...state,\r\n          list: {\r\n            ...state.list,\r\n            pager: {\r\n              ...state.list.pager,\r\n              totalItems: totalItems ? totalItems + 1 : undefined,\r\n            },\r\n          },\r\n          edit: { ...state.edit, error: null, loading: false, item: action.payload.key },\r\n        };\r\n      },\r\n    );\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchKeysList,\r\n  fetchRemoveKeyItem,\r\n  fetchArchiveKeyItem,\r\n  fetchRestoreKeyItem,\r\n  fetchCreateKey,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IApiParamsKeysPreview, IApiResultKeysPreview } from 'src/lib/api/keys/preview';\r\nimport { AVAIL_PREVIEW_FORMATS, AVAIL_PRIVACY } from './constants';\r\nimport { IStoreKeyPreview } from './types';\r\n\r\ntype S = IStoreKeyPreview;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'KEY_PREVIEW';\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  toggleModal: (state: S, action: PA<{ isOpen?: boolean }>): S => {\r\n    const { isOpen } = action.payload;\r\n\r\n    return {\r\n      ...state,\r\n      modal: {\r\n        ...state.modal,\r\n        isOpen: isOpen === undefined ? !state.modal.isOpen : isOpen,\r\n      },\r\n    };\r\n  },\r\n  setParams: (state: S, action: PA<Partial<S['params']>>): S => {\r\n    return {\r\n      ...state,\r\n      params: {\r\n        ...state.params,\r\n        ...action.payload,\r\n      }\r\n    };\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchKeyPreview = createAsyncThunk(\r\n  `${prefix}/FETCH_KEY`,\r\n  async (params: IApiParamsKeysPreview, _thunkApi): Promise<IApiResultKeysPreview> => {\r\n    const result = await api.keys.preview(params);\r\n    return result;\r\n  },\r\n);\r\n\r\n/** Combine slice reducer and actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: {\r\n    availFormats: AVAIL_PREVIEW_FORMATS,\r\n    availPrivacy: AVAIL_PRIVACY,\r\n    params: {},\r\n    modal: {},\r\n    details: {\r\n      error: null,\r\n      loading: false,\r\n    },\r\n  },\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchKeyPreview.fulfilled, (state, action) => {\r\n      return {\r\n        ...state,\r\n        details: {\r\n          ...state.details,\r\n          error: null,\r\n          loading: false,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchKeyPreview,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","export const AVAIL_PREVIEW_FORMATS = [\r\n  { id: 'jwk', label: 'JWK' },\r\n  { id: 'pem', label: 'PEM' },\r\n];\r\n\r\nexport const AVAIL_PRIVACY = [\r\n  { id: 'private', label: 'PRIVATE' },\r\n  { id: 'public', label: 'PUBLIC' },\r\n];\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as sessionReducer } from 'src/containers/Session/reducer';\r\nimport { reducer as accountsReducer } from 'src/containers/Accounts/reducer';\r\nimport { reducer as reposReducer } from 'src/containers/Repos/reducer';\r\nimport { reducer as storageReducer } from 'src/containers/Storage/reducer';\r\nimport { reducer as keysReducer } from 'src/containers/Keys/reducer';\r\nimport { reducer as keyPreviewReducer } from 'src/containers/KeyPreview/reducer';\r\n\r\nconst reducers = {\r\n  session: sessionReducer,\r\n  keys: keysReducer,\r\n  accounts: accountsReducer,\r\n  repos: reposReducer,\r\n  storage: storageReducer,\r\n  keyPreview: keyPreviewReducer,\r\n}\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport type IStore = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import { fork, takeEvery, put, ForkEffect } from 'redux-saga/effects';\r\nimport { actions } from './reducer';\r\n\r\nexport function* sagaSession(): IterableIterator<ForkEffect<void>> {\r\n  yield fork(menuUpdate);\r\n}\r\n\r\nfunction* menuUpdate() {\r\n  yield takeEvery([\r\n    actions.fetchLoginUser.fulfilled,\r\n    actions.fetchMe.fulfilled,\r\n  ], function* () {\r\n    yield put(actions.defineMenuLinks());\r\n  });\r\n}\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreKeys } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreKeys => state.keys;\r\nexport const keysItemsSelector = createSelector(containerState, (state) => state.list.items);\r\nexport const keysListSelector = createSelector(containerState, (state) => state.list);\r\nexport const keysPagerSelector = createSelector(containerState, (state) => state.list.pager);\r\nexport const keysSearchSelector = createSelector(containerState, (state) => state.list.query);\r\nexport const initialSelector = createSelector(containerState, (state) => state.initial);\r\nexport const isRouteParsedSelector = createSelector(containerState, (state) => state.isRouteParsed);\r\n\r\nexport const isEditModalOpened = createSelector(\r\n  containerState,\r\n  (state) => state.edit.isModalOpened,\r\n);\r\n\r\nexport const keysPagerOptionsSelector = createSelector(\r\n  containerState,\r\n  (state) => state.list.pagerOptions,\r\n);\r\n\r\nexport const isKeyListEmpty = createSelector(\r\n  keysSearchSelector,\r\n  keysListSelector,\r\n  (search, list) => {\r\n    return (!search || search.length === 0) && !list.loading.keys && list.items.length === 0;\r\n  },\r\n);\r\n\r\nexport const keysRequestSelector = createSelector(keysListSelector, (list) => {\r\n  return {\r\n    loading: list.loading.keys,\r\n    error: list.errors.keys,\r\n    data: {\r\n      items: list.items,\r\n    },\r\n    pager: list.pager,\r\n  };\r\n});\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { fork, put, select, takeEvery } from 'redux-saga/effects';\r\nimport { IApiParamsKeysList } from 'src/lib/api/keys/list';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { actions as keysActions } from './reducer';\r\nimport { keysPagerSelector } from './selectors';\r\n\r\nexport function* sagaKeys() {\r\n  yield fork(reloadKeysList);\r\n}\r\n\r\nfunction* reloadKeysList() {\r\n  yield takeEvery(\r\n    [\r\n      keysActions.fetchCreateKey.fulfilled,\r\n      keysActions.fetchRemoveKeyItem.fulfilled,\r\n      keysActions.fetchArchiveKeyItem.fulfilled,\r\n      keysActions.fetchRestoreKeyItem.fulfilled,\r\n    ],\r\n    function* (action) {\r\n      const pager: IApiPager = yield select(keysPagerSelector);\r\n      const isArchived = [\r\n        keysActions.fetchRestoreKeyItem.fulfilled.toString(),\r\n        keysActions.fetchRemoveKeyItem.fulfilled.toString(),\r\n      ].includes(action.type);\r\n\r\n      const fetchParams: IApiParamsKeysList = {\r\n        page: pager.page,\r\n        perPage: pager.perPage,\r\n        isArchived,\r\n      };\r\n\r\n      if (pager.totalItems) {\r\n        const targetPage = Math.max(Math.ceil(pager.totalItems / pager.perPage), 1);\r\n\r\n        if (targetPage < pager.page) {\r\n          yield put(keysActions.changePager({ page: targetPage }));\r\n        } else {\r\n          yield put<any>(keysActions.fetchKeysList(fetchParams));\r\n        }\r\n      } else {\r\n        yield put<any>(keysActions.fetchKeysList(fetchParams));\r\n      }\r\n    },\r\n  );\r\n}\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreRepos } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreRepos => state.repos;\r\nexport const createFetchSelector = createSelector(containerState, (state) => state.create);\r\nexport const reposListSelector = createSelector(containerState, (state) => state.list);\r\nexport const pagerSelector = createSelector(reposListSelector, (list) => list.pager);\r\nexport const searchSelector = createSelector(reposListSelector, (list) => list.search);\r\nexport const pagerOptionsSelector = createSelector(reposListSelector, (list) => list.pagerOptions);\r\nexport const initialSelector = createSelector(reposListSelector, (list) => list.initial);\r\n\r\nexport const isEditModalOpened = createSelector(containerState, (state) =>\r\n  Boolean(state.isEditModalOpened),\r\n);\r\n\r\nexport const isEmptySelector = createSelector(reposListSelector, (list) => {\r\n  const { search, loading, items } = list;\r\n  return (!search || search.length === 0) && !loading && items.length === 0;\r\n});\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { fork, put, select, takeEvery } from 'redux-saga/effects';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { actions as reposActions } from './reducer';\r\nimport * as reposSelectors from './selectors';\r\n\r\nexport function* sagaRepos() {\r\n  yield fork(reloadReposListAfterCreationOrDeletion);\r\n}\r\n\r\nfunction* reloadReposListAfterCreationOrDeletion() {\r\n  yield takeEvery(\r\n    [reposActions.fetchCreateRepo.fulfilled, reposActions.fetchRemoveRepos.fulfilled],\r\n    function* (action) {\r\n      const pager: IApiPager = yield select(reposSelectors.pagerSelector);\r\n      const search: string = yield select(reposSelectors.searchSelector);\r\n      const isCreation = action.type === reposActions.fetchCreateRepo.fulfilled.toString();\r\n      const fetchParams = { page: pager.page, perPage: pager.perPage, search };\r\n\r\n      if (isCreation && pager.totalItems) {\r\n        const newPage = Math.ceil(pager.totalItems + 1 / pager.perPage);\r\n        yield put(reposActions.changePager({ page: newPage }))\r\n      } else {\r\n        yield put<any>(reposActions.fetchListRepo(fetchParams));\r\n      }\r\n    },\r\n  );\r\n}\r\n","import { fork, ForkEffect } from 'redux-saga/effects';\r\n\r\nimport { sagaSession } from 'src/containers/Session/saga';\r\nimport { sagaKeys } from 'src/containers/Keys/saga';\r\nimport { sagaRepos } from 'src/containers/Repos/saga';\r\n\r\nexport default function* mainSaga(): IterableIterator<ForkEffect<void>> {\r\n  yield fork(sagaSession);\r\n  yield fork(sagaKeys);\r\n  yield fork(sagaRepos);\r\n}\r\n","import { createStore, applyMiddleware, Middleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nimport rootReducer, { IStore } from './reducer';\r\nimport rootSaga from './saga';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch, AnyAction, PayloadAction, SerializedError } from '@reduxjs/toolkit';\r\nimport { IS_DEV } from './constants/settings';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport function initializeStore(initialState = {}) {\r\n  // ======================================================\r\n  // Middleware Configuration\r\n  // ======================================================\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middleware: Middleware[] = [thunk, sagaMiddleware];\r\n\r\n  if (IS_DEV) {\r\n    middleware.push(createLogger({ collapsed: true }));\r\n  }\r\n\r\n  // ======================================================\r\n  // Enhancer Configuration\r\n  // ======================================================\r\n  const enhancer = applyMiddleware(...middleware);\r\n\r\n  // ======================================================\r\n  // Store Instantiation\r\n  // ======================================================\r\n  const result = createStore(rootReducer, initialState, composeWithDevTools(enhancer));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return result;\r\n}\r\n\r\nexport const store = initializeStore();\r\nexport type AppDispatch = ThunkDispatch<IStore, void, AnyAction>;\r\nexport const useAppDispatch = (): AppDispatch => useDispatch();\r\n\r\nexport type IDispatchReturn<R, P> =\r\n  | { error: SerializedError }\r\n  | PayloadAction<\r\n      R,\r\n      string,\r\n      {\r\n        arg: P;\r\n        requestId: string;\r\n      },\r\n      never\r\n    >;\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.indigo[500],\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  link: colors.blue[800],\r\n  icon: colors.blueGrey[600],\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  divider: colors.grey[200]\r\n};\r\n","import { Palette } from '@material-ui/core/styles/createPalette';\r\nimport { TypographyOptions } from '@material-ui/core/styles/createTypography';\r\n\r\nconst typography: ((palette: Palette) => TypographyOptions) = (palette) => ({\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px',\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px',\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px',\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px',\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px',\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px',\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px',\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px',\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px',\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    lineHeight: '18px',\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px',\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase',\r\n  },\r\n});\r\n\r\nexport default typography;\r\n","import MuiTableHead from './MuiTableHead';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiCardHeader from './MuiCardHeader';\r\n\r\nexport default {\r\n  MuiTableHead,\r\n  MuiTableCell,\r\n  MuiCardHeader,\r\n}\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50],\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    fontSize: 14,\r\n  },\r\n  body: {\r\n    borderBottom: `1px solid ${colors.grey[200]}`,\r\n  },\r\n  head: {\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderBottom: `1px solid ${colors.grey[200]}`,\r\n    color: colors.blueGrey[500],\r\n  }\r\n};\r\n","// import { colors } from '@material-ui/core';\r\n\r\nimport { colors } from \"@material-ui/core\";\r\n\r\nexport default {\r\n  root: {\r\n    borderBottom: `1px solid ${colors.grey[200]}`,\r\n  },\r\n  action: {\r\n    marginRight: 0,\r\n    marginTop: 0,\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n});\r\n\r\nexport default theme;\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreSession } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreSession => state.session;\r\nexport const isUserAuthorized = createSelector(containerState, (state) => state.isUserAuthorized);\r\nexport const isAlreadyFetched = createSelector(containerState, (state) => state.isAlreadyFetched);\r\nexport const isSessionExpired = createSelector(containerState, (state) => state.isSessionExpired);\r\nexport const account = createSelector(containerState, (state) => state.account);\r\nexport const host = createSelector(containerState, (state) => state.host);\r\nexport const mainMenuLinks = createSelector(containerState, (state) => state.mainMenuLinks);\r\nexport const errors = createSelector(containerState, (state) => state.errors);\r\nexport const jwt = createSelector(containerState, (state) => state.token || null);\r\nexport const tokenSelector = createSelector(containerState, (state) => state.token || null);\r\nexport const privateHostSelector = createSelector(containerState, (state) => state.privateHost);\r\nexport const publicHostSelector = createSelector(containerState, (state) =>\r\n  state.publicHost ? state.publicHost : state.privateHost,\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const Grow = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n","import { useCallback } from 'react';\r\nimport { IApiParamsAuthLogin } from 'src/lib/api/auth/types';\r\nimport { useAppDispatch } from 'src/store';\r\nimport { actions as sessionActions } from './reducer';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerSession = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const logout = useCallback(() => {\r\n    return dispatch(sessionActions.fetchLogout());\r\n  }, [dispatch]);\r\n\r\n  const fetchMe = useCallback(() => dispatch(sessionActions.fetchMe()), [dispatch]);\r\n\r\n  const fetchLoginUser = useCallback((params: IApiParamsAuthLogin) => {\r\n    return dispatch(sessionActions.fetchLoginUser(params));\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    logout,\r\n    fetchMe,\r\n    fetchLoginUser,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { Toolbar, Button, Typography } from '@material-ui/core';\r\n\r\nimport * as sessionSelectors from 'src/containers/Session/selectors';\r\n\r\nimport * as S from './styled';\r\nimport { useContainerSession } from 'src/containers/Session/hooks';\r\n\r\nconst TopBar: React.FC = () => {\r\n  const user = useSelector(sessionSelectors.account);\r\n  const { logout } = useHooks();\r\n\r\n  const isLogoutAvail = user !== undefined;\r\n\r\n  return (\r\n    <AppBar position={'static'}>\r\n      <Toolbar>\r\n        <Typography variant={'h4'} color=\"inherit\">\r\n          Orkeystore\r\n        </Typography>\r\n        <S.Grow />\r\n        {isLogoutAvail && (\r\n          <Button color=\"inherit\" onClick={logout}>\r\n            Logout\r\n          </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { logout } = useContainerSession();\r\n\r\n  return {\r\n    logout,\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const BarHolder = styled.div`\r\n`\r\nexport const FormHolder = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n","import styled from 'styled-components';\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\nimport theme from 'src/theme';\r\n\r\nexport const Root = styled(Paper)<{ test?: string }>`\r\n  padding: 10px;\r\n  flex-grow: 1;\r\n  background-color: ${theme.palette.error.light};\r\n  color: ${theme.palette.error.contrastText};\r\n`;\r\n\r\nexport const Message = styled(Typography)`\r\n  padding-left: 15px;\r\n  padding-top: 2px;\r\n`;\r\n\r\nexport const TextWrap = styled(Box)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n`;\r\n","import React from 'react';\r\nimport ErrorOutlineRoundedIcon from '@material-ui/icons/ErrorOutlineRounded';\r\nimport { PaperProps } from '@material-ui/core/Paper';\r\nimport * as S from './styles';\r\n\r\nexport interface IPropsMessage {\r\n  elevation?: number;\r\n  severnity?: string;\r\n  root?: PaperProps;\r\n}\r\n\r\nconst Message: React.FC<IPropsMessage> = (props) => {\r\n  return (\r\n    <S.Root elevation={props.elevation} {...props.root}>\r\n      <S.TextWrap>\r\n        <ErrorOutlineRoundedIcon color=\"inherit\" />\r\n        <S.Message color=\"inherit\">\r\n          { props.children }\r\n        </S.Message>\r\n      </S.TextWrap>\r\n    </S.Root>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  elevation: 0,\r\n  severnity: 'error'\r\n}\r\n\r\nexport default Message;\r\n","import styled from 'styled-components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport const Container = styled.div`\r\n  width: 300px;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Body = styled.div``;\r\n\r\nexport const BodyLine = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const LineItem = styled.div`\r\n  flex-grow: 1;\r\n  margin-bottom: 10px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled(Button)`\r\n  width: 100%;\r\n`;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Formik, Form, Field, FieldProps, FormikErrors, FormikProps } from 'formik';\r\n\r\nimport Message from 'src/components/Message';\r\nimport { errors as userServerErrors } from 'src/containers/Session/selectors';\r\n\r\nimport * as S from './styled';\r\nimport { TextField, CardContent, Card, Typography, CardHeader } from '@material-ui/core';\r\nimport { useContainerSession } from 'src/containers/Session/hooks';\r\n\r\nexport interface IUserLoginData {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst initialValues = { username: '', password: '' };\r\n\r\nconst LoginForm: React.FC = () => {\r\n  const serverErrors = useSelector(userServerErrors);\r\n  const { handleSubmit, validate } = useHooks();\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title={<Typography variant=\"h3\">Sign in</Typography>} />\r\n      <CardContent>\r\n        <S.Container>\r\n          <S.Body>\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validate={validate}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {(_props: FormikProps<IUserLoginData>) => {\r\n                return (\r\n                  <Form>\r\n                    <S.BodyLine>\r\n                      <Field name=\"username\">\r\n                        {(params: FieldProps<string>) => {\r\n                          const { field, meta } = params;\r\n                          return (\r\n                            <TextField\r\n                              error={Boolean(meta.touched && meta.error)}\r\n                              label=\"Login\"\r\n                              variant=\"outlined\"\r\n                              autoComplete=\"current-login\"\r\n                              {...field}\r\n                            />\r\n                          );\r\n                        }}\r\n                      </Field>\r\n                    </S.BodyLine>\r\n                    <S.BodyLine>\r\n                      <Field name=\"password\">\r\n                        {(params: FieldProps<string>) => {\r\n                          const { field, meta } = params;\r\n                          return (\r\n                            <TextField\r\n                              label=\"Password\"\r\n                              variant=\"outlined\"\r\n                              type=\"password\"\r\n                              autoComplete=\"current-password\"\r\n                              error={Boolean(meta.touched && meta.error)}\r\n                              {...field}\r\n                            />\r\n                          );\r\n                        }}\r\n                      </Field>\r\n                    </S.BodyLine>\r\n                    {serverErrors.loginForm && (\r\n                      <S.BodyLine>\r\n                        <Message>{serverErrors.loginForm}</Message>\r\n                      </S.BodyLine>\r\n                    )}\r\n                    <S.BodyLine>\r\n                      <S.LineItem>\r\n                        <S.SubmitButton\r\n                          color=\"secondary\"\r\n                          size=\"large\"\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                        >\r\n                          Войти\r\n                        </S.SubmitButton>\r\n                      </S.LineItem>\r\n                    </S.BodyLine>\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          </S.Body>\r\n        </S.Container>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchLoginUser } = useContainerSession();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (values: IUserLoginData) => {\r\n      await fetchLoginUser(values);\r\n    },\r\n    [fetchLoginUser],\r\n  );\r\n\r\n  const validate = useCallback((values: IUserLoginData) => {\r\n    const { username, password } = values;\r\n    const errors: FormikErrors<typeof values> = {};\r\n\r\n    if (!username || username.length === 0) {\r\n      errors.username = 'Username required';\r\n    }\r\n\r\n    if (!password || password.length === 0) {\r\n      errors.password = 'Password required';\r\n    }\r\n\r\n    return errors;\r\n  }, []);\r\n\r\n\r\n  return {\r\n    validate,\r\n    handleSubmit,\r\n  };\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport TopBar from 'src/components/TopBar';\r\n\r\nimport * as S from './styled';\r\nimport LoginForm from 'src/components/LoginForm';\r\n\r\nexport interface IPropsAuthLayout {}\r\n\r\nconst AuthLayout: React.FC = () => {\r\n  return (\r\n    <S.Wrap>\r\n      <S.BarHolder>\r\n        <TopBar />\r\n      </S.BarHolder>\r\n      <S.FormHolder>\r\n        <LoginForm />\r\n      </S.FormHolder>\r\n    </S.Wrap>\r\n  );\r\n};\r\n\r\nexport default AuthLayout;\r\n","import React from 'react';\r\nimport { Dialog } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { isSessionExpired } from 'src/containers/Session/selectors';\r\nimport LoginForm from 'src/components/LoginForm';\r\n\r\nconst ExpiredSession: React.FC = () => {\r\n  const isExpired = useSelector(isSessionExpired)\r\n\r\n  return (\r\n    <Dialog open={isExpired}>\r\n      <LoginForm />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExpiredSession;\r\n","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { List, ListItem, ListItemText, ListItemIcon, makeStyles } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nimport { mainMenuLinks } from 'src/containers/Session/selectors';\r\n\r\nconst MainMenu: React.FC = () => {\r\n  const history = useHistory();\r\n  const mainMenu = useSelector(mainMenuLinks);\r\n  const styles = useStyles();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <List component=\"nav\">\r\n      {mainMenu.map((item) => {\r\n        const isActive = item.path === location.pathname;\r\n        const color = isActive ? 'primary' : 'action';\r\n        return (\r\n          <ListItem\r\n            key={item.id}\r\n            button\r\n            onClick={isActive ? undefined : () => history.push(item.path)}\r\n          >\r\n            <ListItemIcon className={styles.iconWrap}>\r\n              <Icon color={color}>{item.icon}</Icon>\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primaryTypographyProps={{\r\n                color: isActive ? 'primary' : 'initial',\r\n              }}\r\n            >\r\n              {item.title}\r\n            </ListItemText>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  iconWrap: {\r\n    maxWidth: 40,\r\n    minWidth: 40,\r\n  },\r\n}));\r\n\r\nexport default MainMenu;\r\n","import styled from 'styled-components';\r\nimport theme from 'src/theme';\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1 1 auto;\r\n`;\r\nexport const Header = styled.div``;\r\nexport const Body = styled.div`\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  min-width: 0;\r\n`;\r\nexport const Menu = styled.div`\r\n  flex: 0 0 250px;\r\n  background-color: ${theme.palette.background.paper};\r\n`;\r\n\r\nexport const Main = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${theme.palette.background.default};\r\n  flex: 1 1 auto;\r\n  min-width: 0;\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  position: relative;\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const MainFooter = styled.div``;\r\n","import React from 'react';\r\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\r\n\r\nimport TopBar from 'src/components/TopBar';\r\nimport ExpiredSession from 'src/components/ExpiredSession';\r\nimport MainMenu from 'src/components/MainMenu';\r\n\r\nimport * as S from './styled';\r\n\r\nexport interface IPropsDashboardLayout extends RouteConfigComponentProps {}\r\n\r\nconst DashboardLayout: React.FC<IPropsDashboardLayout> = (props) => {\r\n  const { route } = props;\r\n  return (\r\n    <S.Wrap>\r\n      <ExpiredSession />\r\n      <S.Header>\r\n        <TopBar />\r\n      </S.Header>\r\n      <S.Body>\r\n        <S.Menu>\r\n          <MainMenu />\r\n        </S.Menu>\r\n        <S.Main>\r\n          <S.MainContent>{route && route.routes && renderRoutes(route.routes)}</S.MainContent>\r\n          <S.MainFooter>\r\n            <div id=\"layout_dashboard_footer\" />\r\n          </S.MainFooter>\r\n        </S.Main>\r\n      </S.Body>\r\n    </S.Wrap>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","export const generatePassword = (\r\n  length: number,\r\n  charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789',\r\n): string => {\r\n  let retVal = '';\r\n  for (let i = 0, n = charset.length; i < length; ++i) {\r\n    retVal += charset.charAt(Math.floor(Math.random() * n));\r\n  }\r\n  return retVal;\r\n};\r\n","import { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { useAppDispatch } from 'src/store';\r\nimport { actions as keysActions, pureState } from './reducer';\r\nimport * as keysSelectors from './selectors';\r\nimport * as sessionSelectors from 'src/containers/Session/selectors';\r\nimport { IApiParamsKeysCreate, IApiParamsKeysRemove } from 'src/lib/api/keys/types';\r\nimport { SerializedError } from '@reduxjs/toolkit';\r\nimport { generatePassword } from 'src/lib/utils/generatePassword';\r\nimport { IApiParamsKeysArchive } from 'src/lib/api/keys/archive';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { IApiParamsKeysList } from 'src/lib/api/keys/list';\r\nimport api from 'src/lib/api';\r\nimport { IApiParamsKeysByIds } from 'src/lib/api/keys/byIds';\r\nimport qs from 'qs';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerKeys = () => {\r\n  const dispatch = useAppDispatch();\r\n  const pager = useSelector(keysSelectors.keysPagerSelector);\r\n  const search = useSelector(keysSelectors.keysSearchSelector);\r\n  const accessToken = useSelector(sessionSelectors.tokenSelector);\r\n  const isRouteParsed = useSelector(keysSelectors.isRouteParsedSelector);\r\n  const isEditModalOpened = useSelector(keysSelectors.isEditModalOpened);\r\n  const histroy = useHistory();\r\n  const location = useLocation();\r\n\r\n  const fetchKeysList = useCallback(\r\n    (params: IApiParamsKeysList) => {\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      const refreshWhenTokenChanges = accessToken;\r\n      return dispatch(keysActions.fetchKeysList(params));\r\n    },\r\n    [dispatch, accessToken],\r\n  );\r\n\r\n  const toggleEditModal = useCallback(\r\n    (params: { isOpened: boolean }) => {\r\n      return dispatch(keysActions.toggleEditModal(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const setInitialRouteParsing = useCallback(\r\n    (params: { isParsed: boolean }) => {\r\n      return dispatch(keysActions.setInitialRouteParsing(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchKeysListWatch = useCallback(() => {\r\n    const params = {\r\n      page: pager.page,\r\n      perPage: pager.perPage,\r\n      search,\r\n    };\r\n\r\n    return fetchKeysList(params);\r\n  }, [fetchKeysList, pager.page, pager.perPage, search]);\r\n\r\n  const fetchArchiveListWatch = useCallback(() => {\r\n    const params = {\r\n      page: pager.page,\r\n      perPage: pager.perPage,\r\n      search,\r\n      isArchived: true,\r\n    };\r\n\r\n    return fetchKeysList(params);\r\n  }, [fetchKeysList, pager.page, pager.perPage, search]);\r\n\r\n  const fetchCreateKey = useCallback(\r\n    async (params: Omit<IApiParamsKeysCreate, 'accessToken'>) => {\r\n      const accessToken = generatePassword(64);\r\n      const result = await dispatch(\r\n        keysActions.fetchCreateKey({\r\n          ...params,\r\n          accessToken,\r\n        }),\r\n      );\r\n\r\n      const { error } = result as { error: SerializedError };\r\n\r\n      if (error) {\r\n        return { error } as { error: SerializedError };\r\n      }\r\n\r\n      return result;\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchRemoveKeyItem = useCallback(\r\n    async (params: IApiParamsKeysRemove) => {\r\n      return await dispatch(keysActions.fetchRemoveKeyItem(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchArchiveKeyItem = useCallback(\r\n    (params: IApiParamsKeysArchive) => {\r\n      return dispatch(keysActions.fetchArchiveKeyItem(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchRestoreKeyItem = useCallback(\r\n    (params: IApiParamsKeysArchive) => {\r\n      return dispatch(keysActions.fetchRestoreKeyItem(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const changePager = useCallback(\r\n    (params: Partial<IApiPager>) => {\r\n      return dispatch(keysActions.changePager(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const changeSearch = useCallback(\r\n    (params: Partial<{ search?: string }>) => {\r\n      return dispatch(keysActions.changeSearch(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const requestKeysList = useCallback(async (params?: IApiParamsKeysList) => {\r\n    return api.keys.list(params);\r\n  }, []);\r\n\r\n  const requestKeysByIds = useCallback(async (params: IApiParamsKeysByIds) => {\r\n    return await api.keys.byIds(params);\r\n  }, []);\r\n\r\n  const resetList = useCallback(() => {\r\n    return dispatch(keysActions.reset());\r\n  }, [dispatch]);\r\n\r\n  const routeParser = useCallback(() => {\r\n    const params = qs.parse(location.search, { ignoreQueryPrefix: true });\r\n\r\n    ['page', 'perPage'].forEach((prop) => {\r\n      const val = params[prop];\r\n      if (val !== undefined) {\r\n        const result = parseInt(val.toString());\r\n        if (!isNaN(result)) {\r\n          changePager({ [prop]: result });\r\n        }\r\n      }\r\n    });\r\n    if (params.search && typeof params.search === 'string') {\r\n      changeSearch({ search: params.search });\r\n    }\r\n    if (params.newEntry) {\r\n      toggleEditModal({ isOpened: true });\r\n    }\r\n\r\n    setInitialRouteParsing({ isParsed: true });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const routeWatcher = useCallback(() => {\r\n    const defaultPage = pureState.list.pager.page;\r\n    const defaultPerPage = pureState.list.pager.perPage;\r\n\r\n    const query = qs.stringify(\r\n      {\r\n        page: pager.page === defaultPage ? undefined : pager.page,\r\n        perPage: pager.perPage === defaultPerPage ? undefined : pager.perPage,\r\n        search: search === undefined || search.length === 0 ? undefined : search,\r\n        newEntry: isEditModalOpened ? '1' : undefined,\r\n      },\r\n      { addQueryPrefix: true },\r\n    );\r\n\r\n    if (isRouteParsed) {\r\n      histroy.push({\r\n        search: query,\r\n      });\r\n    }\r\n  }, [histroy, pager.page, pager.perPage, search, isRouteParsed, isEditModalOpened]);\r\n\r\n  return {\r\n    routeParser,\r\n    routeWatcher,\r\n    resetList,\r\n    changePager,\r\n    changeSearch,\r\n    fetchKeysList,\r\n    fetchKeysListWatch,\r\n    fetchArchiveListWatch,\r\n    fetchCreateKey,\r\n    fetchRemoveKeyItem,\r\n    fetchRestoreKeyItem,\r\n    fetchArchiveKeyItem,\r\n    requestKeysList,\r\n    requestKeysByIds,\r\n    toggleEditModal,\r\n  };\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { IconButton, Snackbar, Typography } from '@material-ui/core';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nexport interface IPropsCopyBtn {\r\n  inputRef: React.RefObject<HTMLInputElement | HTMLTextAreaElement>;\r\n  message: string;\r\n}\r\n\r\nconst CopyBtn: React.FC<IPropsCopyBtn> = (props) => {\r\n  const { isCopied, handleCopy, handleCloseSnack } = useHooks(props);\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\r\n        open={isCopied}\r\n        autoHideDuration={1000}\r\n        onClose={handleCloseSnack}\r\n      >\r\n        <Alert onClose={handleCloseSnack} severity=\"success\">\r\n          <Typography variant=\"h6\" component={'div'}>\r\n            {props.message}\r\n          </Typography>\r\n        </Alert>\r\n      </Snackbar>\r\n      <IconButton onClick={handleCopy}>\r\n        <FileCopyIcon fontSize={'small'} />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsCopyBtn) => {\r\n  const [isCopied, setCopied] = useState(false);\r\n\r\n  const handleCopy = useCallback(() => {\r\n    const input = props.inputRef.current;\r\n\r\n    if (input) {\r\n      input.select();\r\n      document.execCommand('copy');\r\n      setCopied(true);\r\n    }\r\n  }, [props.inputRef]);\r\n\r\n  const handleCloseSnack = useCallback(() => {\r\n    setCopied(false);\r\n  }, []);\r\n\r\n  return {\r\n    isCopied,\r\n    setCopied,\r\n    handleCopy,\r\n    handleCloseSnack,\r\n  };\r\n};\r\n\r\nexport default CopyBtn;\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport CopyBtn from 'src/components/CopyBtn';\r\n\r\nexport interface ILinkItem {\r\n  code: string;\r\n  url: string;\r\n  label: string;\r\n  isPrivate?: boolean;\r\n}\r\n\r\nexport interface IPropsUrlsList {\r\n  items: ILinkItem[];\r\n}\r\n\r\n\r\nconst UrlsList: React.FC<IPropsUrlsList> = (props) => {\r\n  const styles = useStyles();\r\n  const { inputRefs, handleFocus } = useHooks(props);\r\n\r\n  return (\r\n    <List className={styles.list}>\r\n      {props.items.map((item, i) => {\r\n        return (\r\n          <ListItem className={styles.item} key={item.code}>\r\n            <TextField\r\n              value={item.url}\r\n              label={item.label}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              onFocus={handleFocus}\r\n              InputProps={{\r\n                inputRef: inputRefs[i],\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <CopyBtn inputRef={inputRefs[i]} message={`URL has been copied!`}/>\r\n                    {!item.isPrivate && (\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          window.open(item.url, '_blank');\r\n                        }}\r\n                      >\r\n                        <OpenInNewIcon fontSize={'small'} />\r\n                      </IconButton>\r\n                    )}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsUrlsList) => {\r\n  const handleFocus: React.FocusEventHandler<HTMLInputElement> = useCallback(\r\n    (event) => {\r\n      event.target.select();\r\n    },\r\n    [],\r\n  );\r\n\r\n  const inputRefs = useMemo(() => props.items.map(() => React.createRef<HTMLInputElement>()), [props.items]);\r\n\r\n  return {\r\n    inputRefs,\r\n    handleFocus,\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  list: {\r\n    padding: 0,\r\n    paddingBottom: 10,\r\n    width: '100%',\r\n  },\r\n  item: {\r\n    padding: 0,\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n  },\r\n}));\r\n\r\n\r\nexport default UrlsList;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogActions, Button, DialogTitle, Typography } from '@material-ui/core';\r\n\r\nexport interface IPropsApproveModal {\r\n  title?: React.ReactNode;\r\n  content?: React.ReactNode;\r\n  onSubmit?: () => void;\r\n}\r\n\r\nexport const ApproveModal: React.FC<IPropsApproveModal> = (props) => {\r\n  const [isOpen, toggleDialog] = useState(false);\r\n  const { onSubmit } = props;\r\n  const handleSubmit = () => {\r\n    if (onSubmit) {\r\n      onSubmit();\r\n    }\r\n    toggleDialog(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={isOpen} onClose={() => toggleDialog(false)}>\r\n        { props.title &&\r\n          <DialogTitle>\r\n            <Typography variant={'h4'} component={'div'}>{ props.title }</Typography>\r\n          </DialogTitle>\r\n        }\r\n        { props.content &&\r\n          <DialogContent>{ props.content }</DialogContent>\r\n        }\r\n        <DialogActions>\r\n          <Button onClick={() => toggleDialog(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\" autoFocus>\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div onClick={() => toggleDialog(true)}>{props.children}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApproveModal;\r\n","import React from 'react';\r\nimport { Theme, Tooltip, TooltipProps } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst HtmlTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n    backgroundColor: 'white',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 280,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n    padding: 20,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst MessageTooltip: React.FC<TooltipProps> = (props) => {\r\n  return (\r\n    <HtmlTooltip\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MessageTooltip;\r\n","import React from 'react';\r\nimport { colors, makeStyles } from '@material-ui/core';\r\n\r\nexport interface IPropsCodeFormat {\r\n  height?: number;\r\n}\r\n\r\nconst CodeFormat: React.FC<IPropsCodeFormat> = (props) => {\r\n  const styles = useStyles(props)();\r\n  return (\r\n      <pre className={styles.pre}><code className={styles.code}>{props.children}</code></pre>\r\n  );\r\n};\r\n\r\nconst useStyles = (props: IPropsCodeFormat) => makeStyles(() => {\r\n  return {\r\n    root: {\r\n      padding: '5px 0',\r\n    },\r\n    pre: {\r\n      display: 'block',\r\n      overflowX: 'auto',\r\n      height: () => props.height !== undefined ? props.height : 'auto',\r\n      whiteSpace: 'pre',\r\n      padding: '15px 20px',\r\n      background: colors.grey[100],\r\n    },\r\n    code: {\r\n      background: 'none',\r\n    }\r\n  }\r\n})\r\n\r\nexport default CodeFormat;\r\n","import React, { useMemo } from 'react';\r\nimport { makeStyles, Menu, MenuItem, MenuProps, Typography } from '@material-ui/core';\r\n\r\nexport interface IMenuItem {\r\n  id: string;\r\n  label: string;\r\n}\r\n\r\nexport interface IPropsPopMenu {\r\n  anchorEl: MenuProps['anchorEl'];\r\n  handleClose: () => void;\r\n  menu: IMenuItem[];\r\n  onSelectMenuItem?: <T extends IMenuItem>(x: T) => void;\r\n}\r\n\r\nconst PopMenu: React.FC<IPropsPopMenu> = (props) => {\r\n  const { menuStaticProps, styles } = useHooks();\r\n\r\n  return (\r\n    <Menu\r\n      {...menuStaticProps}\r\n      keepMounted\r\n      anchorEl={props.anchorEl}\r\n      className={styles.menu}\r\n      open={Boolean(props.anchorEl)}\r\n      onClose={props.handleClose}\r\n    >\r\n      {props.menu.map((item) => {\r\n        return (\r\n          <MenuItem\r\n            key={item.id}\r\n            onClick={() => {\r\n              if (props.onSelectMenuItem) {\r\n                props.onSelectMenuItem(item);\r\n              }\r\n              props.handleClose();\r\n            }}\r\n          >\r\n            <Typography variant={'button'}>{item.label}</Typography>\r\n          </MenuItem>\r\n        );\r\n      })}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const styles = useStyles();\r\n\r\n  const menuStaticProps = useMemo((): Partial<MenuProps> => {\r\n    return {\r\n      anchorOrigin: { horizontal: 'right', vertical: 'top' },\r\n      transformOrigin: { horizontal: 'right', vertical: 'top' },\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    styles,\r\n    menuStaticProps,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  menu: {\r\n    width: 150,\r\n  },\r\n}));\r\n\r\nexport default PopMenu;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  InputAdornment,\r\n  InputProps,\r\n  TextField,\r\n  TextFieldProps,\r\n} from '@material-ui/core';\r\nimport PopMenu from '../PopMenu';\r\n\r\nexport interface IMenuItem {\r\n  id: string;\r\n  label: string;\r\n}\r\n\r\nexport interface IPropsTextFieldWithOptions {\r\n  menu?: IMenuItem[];\r\n  currentMenuLabel?: React.ReactNode;\r\n  fieldProps?: TextFieldProps;\r\n  inputProps?: InputProps;\r\n  onSelectMenuItem?: <T extends IMenuItem>(i: T) => void;\r\n  disabled?: boolean;\r\n  beforeOptions?: React.ReactNode;\r\n  afterOptions?: React.ReactNode;\r\n}\r\n\r\nconst TextFieldWithOptions: React.FC<IPropsTextFieldWithOptions> = (props) => {\r\n  const { menu, currentMenuLabel, fieldProps, inputProps, disabled } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleOpenUnitMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUnitMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        fullWidth\r\n        {...fieldProps}\r\n        variant=\"outlined\"\r\n        disabled={disabled}\r\n        InputProps={{\r\n          endAdornment: currentMenuLabel ? (\r\n            <InputAdornment position=\"end\">\r\n              {props.beforeOptions}\r\n              <Button size={'small'} disabled={disabled} onClick={handleOpenUnitMenu}>\r\n                {currentMenuLabel}\r\n              </Button>\r\n              {props.afterOptions}\r\n            </InputAdornment>\r\n          ) : null,\r\n          ...inputProps,\r\n        }}\r\n      />\r\n      {menu && (\r\n        <PopMenu\r\n          anchorEl={anchorEl}\r\n          menu={menu}\r\n          onSelectMenuItem={props.onSelectMenuItem}\r\n          handleClose={handleCloseUnitMenu}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextFieldWithOptions;\r\n","import { useCallback } from 'react';\r\nimport { IApiParamsKeysPreview } from 'src/lib/api/keys/preview';\r\nimport { useAppDispatch } from 'src/store';\r\n\r\nimport { actions as keyPreviewActions } from './reducer';\r\nimport { IStoreKeyPreview } from './types';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerPreviewKey = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const toggleModal = useCallback(\r\n    (isOpen?: boolean) => {\r\n      dispatch(keyPreviewActions.toggleModal({ isOpen }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchKeyPreview = useCallback(\r\n    (params: IApiParamsKeysPreview) => {\r\n      return dispatch(keyPreviewActions.fetchKeyPreview(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const setPreviewParams = useCallback((params: IStoreKeyPreview['params']) => {\r\n    dispatch(keyPreviewActions.setParams(params));\r\n  }, [dispatch])\r\n\r\n  const openKeyPreview = useCallback(\r\n    async (apiParams: IApiParamsKeysPreview, previewParams?: IStoreKeyPreview['params']) => {\r\n      toggleModal(true);\r\n      previewParams && setPreviewParams(previewParams);\r\n      await fetchKeyPreview(apiParams);\r\n    },\r\n    [fetchKeyPreview, toggleModal, setPreviewParams],\r\n  );\r\n\r\n  return { toggleModal, fetchKeyPreview, openKeyPreview, setPreviewParams };\r\n};\r\n","import {\r\n  Grid,\r\n  InputAdornment,\r\n  InputProps,\r\n  Link,\r\n  TextField,\r\n  TextFieldProps,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useMemo, useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport CodeFormat from 'src/components/CodeFormat';\r\nimport TextFieldWithOptions from 'src/components/TextFieldWithOptions';\r\nimport { privateHostSelector } from 'src/containers/Session/selectors';\r\nimport CopyBtn from 'src/components/CopyBtn';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useContainerPreviewKey } from 'src/containers/KeyPreview/hooks';\r\n\r\nexport interface IPrivateKeyItem {\r\n  accessCode: string;\r\n  code: string;\r\n  id: number;\r\n}\r\n\r\nexport interface IPropsPrivateUrls {\r\n  item: IPrivateKeyItem;\r\n}\r\n\r\nexport interface IKeyFormat {\r\n  id: 'jwk' | 'pem' | 'jwks';\r\n  label: string;\r\n}\r\n\r\nexport const KEY_FORMATS: IKeyFormat[] = [\r\n  { id: 'jwk', label: 'JWK' },\r\n  { id: 'jwks', label: 'JWKs' },\r\n  { id: 'pem', label: 'PEM' },\r\n];\r\n\r\nconst PrivateUrls: React.FC<IPropsPrivateUrls> = (props) => {\r\n  const {\r\n    fieldProps,\r\n    inputProps,\r\n    format,\r\n    targetUrl,\r\n    urlRef,\r\n    accessRef,\r\n    handleSetFormat,\r\n    handleOpenPreviewModal,\r\n    handleFocus,\r\n  } = useHooks(props);\r\n  const styles = useStyles();\r\n\r\n  const { item } = props;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Access key\"\r\n          variant=\"outlined\"\r\n          value={item.accessCode}\r\n          onFocus={handleFocus}\r\n          InputProps={{\r\n            inputRef: accessRef,\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <CopyBtn inputRef={accessRef} message={`URL has been copied!`} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextFieldWithOptions\r\n          menu={KEY_FORMATS}\r\n          currentMenuLabel={format.label}\r\n          onSelectMenuItem={handleSetFormat}\r\n          fieldProps={fieldProps}\r\n          inputProps={inputProps}\r\n          afterOptions={<CopyBtn inputRef={urlRef} message={`URL has been copied!`} />}\r\n        />\r\n      </Grid>\r\n      {item.accessCode && (\r\n        <Grid item xs={12}>\r\n          <div className={styles.exampleMessage}>\r\n            <Typography>Key can be fetched via POST with access code.</Typography>\r\n            <Link onClick={handleOpenPreviewModal}>Preview</Link>\r\n          </div>\r\n          <CodeFormat>\r\n            {`curl -d '{ \"accessToken\":\"${item.accessCode}\" }' -H \"Content-Type: application/json\" -X POST ${targetUrl}`}\r\n          </CodeFormat>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsPrivateUrls) => {\r\n  const [formatId, setFormat] = useState<'jwk' | 'jwks' | 'pem'>(KEY_FORMATS[0].id);\r\n  const { openKeyPreview } = useContainerPreviewKey();\r\n\r\n  const format = useMemo(() => {\r\n    return KEY_FORMATS.find((i) => i.id === formatId) || KEY_FORMATS[0];\r\n  }, [formatId]);\r\n\r\n  const keysHost = useSelector(privateHostSelector) || '';\r\n\r\n  const urlRef = useRef<HTMLInputElement>(null);\r\n  const accessRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleFocus: React.FocusEventHandler<HTMLInputElement> = useCallback((event) => {\r\n    event.target.select();\r\n  }, []);\r\n\r\n  const fieldProps: TextFieldProps = useMemo(() => {\r\n    return {\r\n      label: 'Target URL',\r\n      onFocus: handleFocus,\r\n    };\r\n  }, [handleFocus]);\r\n\r\n  const targetUrl = useMemo(() => {\r\n    return `${keysHost}/entry/private/${format.id}/${props.item.code}`;\r\n  }, [keysHost, format.id, props.item.code]);\r\n\r\n  const inputProps: InputProps = useMemo(() => {\r\n    return {\r\n      value: targetUrl,\r\n      inputRef: urlRef,\r\n    };\r\n  }, [targetUrl]);\r\n\r\n  const handleSetFormat = useCallback(\r\n    (i: { id: string | number }) => {\r\n      if (typeof i.id === 'string' && ['jwk', 'jwks', 'pem'].includes(i.id)) {\r\n        setFormat(i.id as 'jwk' | 'jwks' | 'pem');\r\n      }\r\n    },\r\n    [setFormat],\r\n  );\r\n\r\n  const handleOpenPreviewModal = useCallback(() => {\r\n    return openKeyPreview(\r\n      { id: props.item.id, isByEntry: true },\r\n      { privacy: 'private', format: formatId },\r\n    );\r\n  }, [openKeyPreview, props.item.id, formatId]);\r\n\r\n  return {\r\n    keysHost,\r\n    inputProps,\r\n    formatId,\r\n    fieldProps,\r\n    format,\r\n    targetUrl,\r\n    urlRef,\r\n    accessRef,\r\n    setFormat,\r\n    handleFocus,\r\n    handleSetFormat,\r\n    handleOpenPreviewModal,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    exampleMessage: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n    },\r\n  };\r\n});\r\n\r\nexport default PrivateUrls;\r\n","import React, { useCallback } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Divider,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  CardActions,\r\n  Button,\r\n  makeStyles,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\nimport UrlsList from 'src/components/UrlsList';\r\nimport ApproveModal from 'src/components/ApproveModal';\r\nimport { publicHostSelector } from 'src/containers/Session/selectors';\r\nimport MessageTooltip from 'src/components/MessageTooltip';\r\nimport PrivateUrls from '../PrivateUrls';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\nimport { useMemo } from 'react';\r\n\r\nexport interface IKeyItemData {\r\n  id: number;\r\n  name: string;\r\n  code: string;\r\n  accessCode: string;\r\n  rotateInterval: number | null;\r\n  archivedAt: number | null;\r\n}\r\n\r\nexport interface IKeyItemProps {\r\n  data?: IKeyItemData;\r\n}\r\n\r\nconst KeyItem: React.FC<IKeyItemProps> = (props) => {\r\n  const styles = useStyles();\r\n  const { deleteItem, archiveItem, restoreItem, rotation, publicUrls } = useHooks(props);\r\n  const { data } = props;\r\n\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={2} justify={'space-between'}>\r\n          <Grid item>\r\n            <Typography variant={'caption'}>Name</Typography>\r\n            <Typography variant={'h5'}>{data.name}</Typography>\r\n          </Grid>\r\n          <Grid item className={styles.codeHolder}>\r\n            <Typography variant={'caption'}>Unique code</Typography>\r\n            <Typography variant={'h5'}>{data.code}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider className={styles.divider} />\r\n        <Typography variant={'caption'}>\r\n          {!data.rotateInterval ? 'Non rotatable key' : rotation}\r\n        </Typography>\r\n        <Divider className={styles.divider} />\r\n        <Accordion>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant={'h6'}>Public key</Typography>\r\n            <MessageTooltip\r\n              placement=\"top-start\"\r\n              title={\r\n                <Typography gutterBottom variant={'body1'} color={'textPrimary'}>\r\n                  {`Anyone can get public key by GET request in formats listed below. Rotatable response contain \"expires\" header.`}\r\n                </Typography>\r\n              }\r\n            >\r\n              <HelpIcon className={styles.tooltip} color={'primary'} fontSize={'small'} />\r\n            </MessageTooltip>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div style={{ flexGrow: 1 }}>\r\n              <UrlsList items={publicUrls} />\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        <Accordion>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant={'h6'}>Private key</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div className={styles.privateWrap}>\r\n              <PrivateUrls item={data} />\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </CardContent>\r\n      <CardActions className={styles.actions}>\r\n        {data.archivedAt !== null && (\r\n          <>\r\n            <ApproveModal\r\n              title={'Are you sure want to delete key?'}\r\n              content={'Every associated keys will be unavailable'}\r\n              onSubmit={() => deleteItem(data.id)}\r\n            >\r\n              <Button size=\"small\">Delete</Button>\r\n            </ApproveModal>\r\n            <Button size=\"small\" onClick={() => restoreItem(data.id)}>\r\n              Restore\r\n            </Button>\r\n          </>\r\n        )}\r\n        {data.archivedAt === null && (\r\n          <ApproveModal\r\n            title={'Are you sure want to archive entry in storage?'}\r\n            content={\r\n              'Associated keys will be marked as archived and unavailable. You can restore entry from the archive at any time.'\r\n            }\r\n            onSubmit={() => archiveItem(data.id)}\r\n          >\r\n            <Button size=\"small\">Archive</Button>\r\n          </ApproveModal>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IKeyItemProps) => {\r\n  const publicHost = useSelector(publicHostSelector);\r\n  const { fetchRemoveKeyItem, fetchArchiveKeyItem, fetchRestoreKeyItem } = useContainerKeys();\r\n  const { data } = props;\r\n  const rotateInterval = data ? data.rotateInterval : null;\r\n  const code = data ? data.code : null;\r\n\r\n  const publicUrls = useMemo(() => {\r\n    if (publicHost === undefined || code === null) {\r\n      return [];\r\n    }\r\n    return [\r\n      { code: 'jwk', url: `${publicHost}/entry/public/jwk/${code}`, label: 'JWK' },\r\n      { code: 'jwks', url: `${publicHost}/entry/public/jwks/${code}`, label: 'JWKs' },\r\n      { code: 'pem', url: `${publicHost}/entry/public/pem/${code}`, label: 'PEM' },\r\n    ];\r\n  }, [code, publicHost]);\r\n\r\n  const deleteItem = useCallback(\r\n    (id: number) => {\r\n      return fetchRemoveKeyItem({ id });\r\n    },\r\n    [fetchRemoveKeyItem],\r\n  );\r\n\r\n  const archiveItem = useCallback(\r\n    (id: number) => {\r\n      return fetchArchiveKeyItem({ id });\r\n    },\r\n    [fetchArchiveKeyItem],\r\n  );\r\n\r\n  const restoreItem = useCallback(\r\n    (id: number) => {\r\n      return fetchRestoreKeyItem({ id });\r\n    },\r\n    [fetchRestoreKeyItem],\r\n  );\r\n\r\n  const rotation = useMemo(() => {\r\n    return rotateInterval && `Rotation period: ${moment.duration(rotateInterval, 's').humanize()}`;\r\n  }, [rotateInterval]);\r\n\r\n  return {\r\n    host: publicHost,\r\n    rotation,\r\n    publicUrls,\r\n    deleteItem,\r\n    archiveItem,\r\n    restoreItem,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actions: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  privateWrap: {\r\n    width: '100%',\r\n  },\r\n  divider: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  tooltip: {\r\n    marginLeft: 10,\r\n    opacity: 0.2,\r\n    '&:hover': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  codeHolder: {\r\n    textAlign: 'right',\r\n  },\r\n}));\r\n\r\nexport default KeyItem;\r\n","import { Box, MenuItem, Select } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid/Grid';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { useCallback } from 'react';\r\n\r\nexport interface IPropsPerPageSelect {\r\n  current: number;\r\n  options: number[];\r\n  onSelect?: (val: number) => void;\r\n}\r\n\r\nconst PerPageSelect: React.FC<IPropsPerPageSelect> = (props) => {\r\n  const styles = useStyles();\r\n  const { current, options } = props;\r\n  const { handleChange } = useHooks(props);\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item className={styles.label}>\r\n          Items per page:\r\n        </Grid>\r\n        <Grid item>\r\n          <Select value={current} onChange={handleChange}>\r\n            {options.map((val) => {\r\n              return (\r\n                <MenuItem key={val} value={val}>\r\n                  {val}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsPerPageSelect) => {\r\n  const { onSelect } = props;\r\n\r\n  const handleChange = useCallback(\r\n    (\r\n      e: React.ChangeEvent<{\r\n        name?: string | undefined;\r\n        value: unknown;\r\n      }>,\r\n    ) => {\r\n      onSelect && onSelect(e.target.value as number);\r\n    },\r\n    [onSelect],\r\n  );\r\n\r\n  return {\r\n    handleChange,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    label: {\r\n      marginRight: 10,\r\n      fontSize: 12,\r\n    },\r\n  };\r\n});\r\n\r\nexport default PerPageSelect;\r\n","import React, { ChangeEvent, useCallback, useMemo } from 'react';\r\nimport { InputAdornment, TextField, TextFieldProps } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport debounce from 'lodash.debounce';\r\n\r\nexport type IPropsSearchInput = TextFieldProps & {\r\n  onThrottledChange?: (val: string) => void;\r\n};\r\n\r\nconst SearchInput: React.FC<IPropsSearchInput> = (props) => {\r\n  const { InputPropsMemo, restProps, handleChange } = useHooks(props);\r\n  return (\r\n    <>\r\n      <TextField {...restProps} onChange={handleChange} size=\"small\" variant={'outlined'} InputProps={InputPropsMemo} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsSearchInput) => {\r\n  const { InputProps, onChange, onThrottledChange, ...restProps } = props;\r\n  const InputPropsMemo = useMemo(() => {\r\n    return {\r\n      startAdornment: (\r\n        <InputAdornment position=\"start\">\r\n          <SearchIcon />\r\n        </InputAdornment>\r\n      ),\r\n      ...InputProps,\r\n    };\r\n  }, [InputProps]);\r\n\r\n  const throttledChange = useCallback(debounce((val: string)=> {\r\n    if (onThrottledChange) {\r\n      onThrottledChange(val)\r\n    }\r\n  }, 500), [onThrottledChange]);\r\n\r\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\r\n    const val = event.target.value;\r\n    if (onChange) {\r\n      onChange(event);\r\n    }\r\n    throttledChange(val);\r\n  }, [throttledChange, onChange]);\r\n\r\n  return {\r\n    InputPropsMemo,\r\n    restProps,\r\n    handleChange,\r\n  };\r\n};\r\n\r\nexport default SearchInput;\r\n","import { useLayoutEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport interface IPropsPortal {\r\n  id: string;\r\n}\r\n\r\nconst Portal: React.FC<IPropsPortal> = (props) => {\r\n  const { id } = props;\r\n  const [el, setEl] = useState<HTMLElement | null>(null);\r\n  useLayoutEffect(() => {\r\n    const target = document.getElementById(id);\r\n    target && setEl(target);\r\n  }, [setEl, id]);\r\n\r\n  return el && ReactDOM.createPortal(props.children, el);\r\n};\r\n\r\nexport default Portal;\r\n","import { Box, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport React from 'react';\r\n\r\nexport interface IPropsEmptyKeysList {\r\n  onAddNewOne: () => void;\r\n}\r\n\r\nconst EmptyKeysList: React.FC<IPropsEmptyKeysList> = (props) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <Typography component=\"div\" variant=\"h4\">\r\n        There are no available key entries\r\n      </Typography>\r\n      <Box className={styles.text}>\r\n        <p>\r\n          Key entry simplifies work with rotatable keys. When you create a key entry, the server\r\n          generates keys with a defined lifetime. After the key expires, the server will replace it\r\n          with the new one and you can get a renewed key with the same request.\r\n        </p>\r\n      </Box>\r\n      <Box className={styles.buttonBox}>\r\n        <Button variant=\"outlined\" startIcon={<AddCircleOutlineIcon />} onClick={props.onAddNewOne}>\r\n          Add key entry\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    text: {\r\n      maxWidth: 600,\r\n    },\r\n    buttonBox: {\r\n      marginTop: 30,\r\n    },\r\n  };\r\n});\r\n\r\nexport default EmptyKeysList;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst EmptyArchive = () => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <Typography component=\"div\" variant=\"h4\">\r\n        There are no archived entries\r\n      </Typography>\r\n      <Box className={styles.text}>\r\n        <p>\r\n          You can mark key entry as archived. In that case, it will be no longer available, but\r\n          server will keep all associated keys in storage. Also, you could restore archived key\r\n          entry at any moment.\r\n        </p>\r\n        <p>All archived entries will be listed here.</p>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    text: {\r\n      maxWidth: 600,\r\n    },\r\n  };\r\n});\r\n\r\nexport default EmptyArchive;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  makeStyles,\r\n  Box,\r\n  Container,\r\n  CircularProgress,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nimport {\r\n  isKeyListEmpty,\r\n  keysPagerOptionsSelector,\r\n  keysRequestSelector,\r\n  keysSearchSelector,\r\n} from 'src/containers/Keys/selectors';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\nimport * as keysSelectors from 'src/containers/Keys/selectors';\r\nimport KeyItem from 'src/components/KeyItem';\r\nimport PerPageSelect from 'src/components/PerPageSelect';\r\nimport SearchInput from 'src/components/SearchInput';\r\nimport Portal from '../Portal';\r\nimport EmptyKeysList from '../EmptyKeysList';\r\nimport EmptyArchive from '../EmptyArchive';\r\n\r\nexport interface IPropsKeysList {\r\n  archive?: boolean;\r\n}\r\n\r\nconst KeysList: React.FC<IPropsKeysList> = (props) => {\r\n  const styles = useStyles();\r\n  const { loading, data, error, pager } = useSelector(keysRequestSelector);\r\n  const pagerOptions = useSelector(keysPagerOptionsSelector);\r\n  const search = useSelector(keysSearchSelector);\r\n  const isEmpty = useSelector(isKeyListEmpty);\r\n\r\n  const {\r\n    handleModalToggle,\r\n    handlePagerChange,\r\n    handleChangePerPage,\r\n    handleChangeSearch,\r\n  } = useHooks();\r\n\r\n  if (error) {\r\n    return <Alert severity=\"error\">{error}</Alert>;\r\n  }\r\n\r\n  return (\r\n    <Box className={styles.wrap}>\r\n      <Grid container spacing={2}>\r\n        <Grid item container spacing={2} xs={12} alignItems={'center'}>\r\n          {!isEmpty && !props.archive && (\r\n            <Grid item>\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<AddCircleOutlineIcon />}\r\n                onClick={handleModalToggle}\r\n              >\r\n                Add key entry\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n          {!isEmpty && (\r\n            <Grid item>\r\n              <SearchInput\r\n                defaultValue={search}\r\n                onThrottledChange={handleChangeSearch}\r\n                placeholder={'Search by name...'}\r\n              />\r\n            </Grid>\r\n          )}\r\n          {loading && (\r\n            <Grid item>\r\n              <CircularProgress size={24} />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        {isEmpty && !props.archive && (\r\n          <Grid item xs={12}>\r\n            <EmptyKeysList onAddNewOne={handleModalToggle} />\r\n          </Grid>\r\n        )}\r\n        {isEmpty && props.archive && (\r\n          <Grid item xs={12}>\r\n            <EmptyArchive />\r\n          </Grid>\r\n        )}\r\n        {!isEmpty && (\r\n          <Grid item xs={12}>\r\n            {data.items.length > 0 && (\r\n              <Grid container spacing={2}>\r\n                {data.items.map((item) => {\r\n                  return (\r\n                    <Grid item key={item.id} xs={6}>\r\n                      <KeyItem data={item} />\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n            )}\r\n            {data.items.length === 0 && (\r\n              <Typography className={styles.notFound}>No items found</Typography>\r\n            )}\r\n          </Grid>\r\n        )}\r\n        {Boolean(pager.totalPages) && (\r\n          <Portal id=\"layout_dashboard_footer\">\r\n            <Container className={styles.footerWrap}>\r\n              <Grid container item xs={12} alignItems=\"center\">\r\n                <Grid item>\r\n                  <PerPageSelect\r\n                    current={pager.perPage}\r\n                    options={pagerOptions}\r\n                    onSelect={handleChangePerPage}\r\n                  />\r\n                </Grid>\r\n                <Grid item className={styles.pagerHolder}>\r\n                  {pager.totalPages !== undefined && pager.totalPages > 1 && (\r\n                    <Pagination\r\n                      onChange={handlePagerChange}\r\n                      count={pager.totalPages}\r\n                      page={pager.page}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </Portal>\r\n        )}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const isFormOpened = useSelector(keysSelectors.isEditModalOpened);\r\n  const { changePager, changeSearch, toggleEditModal } = useContainerKeys();\r\n\r\n  const handleModalToggle = useCallback(() => {\r\n    toggleEditModal({ isOpened: !isFormOpened });\r\n  }, [isFormOpened, toggleEditModal]);\r\n\r\n  const handlePagerChange = useCallback(\r\n    (_event: React.ChangeEvent<unknown>, value: number) => {\r\n      return changePager({ page: value });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handleChangePerPage = useCallback(\r\n    (val: number) => {\r\n      return changePager({ perPage: val });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handleChangeSearch = useCallback(\r\n    (val: string) => {\r\n      return changeSearch({ search: val });\r\n    },\r\n    [changeSearch],\r\n  );\r\n\r\n  return {\r\n    handleChangePerPage,\r\n    handleChangeSearch,\r\n    handleModalToggle,\r\n    handlePagerChange,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    notFound: {\r\n      marginTop: 20,\r\n    },\r\n    footerWrap: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n    },\r\n    loaderWrap: {\r\n      textAlign: 'center',\r\n      minHeight: '100%',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      paddingBottom: 145,\r\n    },\r\n    pagerHolder: {\r\n      marginLeft: 'auto',\r\n    },\r\n    searchHolder: {\r\n      marginLeft: 'auto',\r\n      marginTop: 'auto',\r\n    },\r\n    wrap: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n    },\r\n    noItems: {\r\n      marginTop: 20,\r\n    },\r\n  };\r\n});\r\n\r\nexport default KeysList;\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreKeyPreview } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreKeyPreview => state.keyPreview;\r\nexport const modal = createSelector(containerState, (state) => state.modal);\r\nexport const details = createSelector(containerState, (state) => state.details);\r\nexport const params = createSelector(containerState, (state) => state.params);\r\nexport const availFormats = createSelector(containerState, (state) => state.availFormats);\r\nexport const availPrivacy = createSelector(containerState, (state) => state.availPrivacy);\r\n","import React, { useCallback, useMemo, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Button, Grid, makeStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport CodeFormat from 'src/components/CodeFormat';\r\nimport CopyBtn from 'src/components/CopyBtn';\r\nimport { useContainerPreviewKey } from 'src/containers/KeyPreview/hooks';\r\nimport * as keyPreviewSelectors from 'src/containers/KeyPreview/selectors';\r\nimport PopMenu, { IMenuItem } from '../PopMenu';\r\nimport moment from 'moment';\r\n\r\nexport interface IPropsKeyPreview {}\r\n\r\nconst KeyPreview: React.FC<IPropsKeyPreview> = () => {\r\n  const styles = useStyles();\r\n\r\n  const {\r\n    availFormats,\r\n    availPrivacy,\r\n    keyData,\r\n    previewParams,\r\n    keyInputRef,\r\n    formatsBtnRef,\r\n    privacyBtnRef,\r\n    targetKey,\r\n    isFormatsMenuOpen,\r\n    isPrivacyMenuOpen,\r\n    handleFormatsMenuClose,\r\n    handleFormatsMenuOpen,\r\n    handlePrivacyMenuClose,\r\n    handlePrivacyMenuOpen,\r\n    handleFormatsMenuItemSelect,\r\n    handlePrivacyMenuItemSelect,\r\n    handleDialogClose,\r\n  } = useHooks();\r\n\r\n  if (keyData.error || keyData.data === undefined) {\r\n    return <div>Data error in KeyPreview component</div>;\r\n  }\r\n\r\n  if (targetKey === undefined) {\r\n    return <div>Key data unavailable</div>;\r\n  }\r\n\r\n  const formatString = previewParams.format?.toUpperCase();\r\n  const privacyString = previewParams.privacy?.toUpperCase();\r\n  const activatesAt = moment.unix(keyData.data.activatesAt).format('LLL');\r\n  const expiresAt = keyData.data.expiresAt && moment.unix(keyData.data.expiresAt).format('LLL');\r\n\r\n  return (\r\n    <Paper className={styles.wrap}>\r\n      <PopMenu\r\n        anchorEl={isFormatsMenuOpen ? formatsBtnRef.current : null}\r\n        handleClose={handleFormatsMenuClose}\r\n        onSelectMenuItem={handleFormatsMenuItemSelect}\r\n        menu={availFormats}\r\n      />\r\n      <PopMenu\r\n        anchorEl={isPrivacyMenuOpen ? privacyBtnRef.current : null}\r\n        handleClose={handlePrivacyMenuClose}\r\n        onSelectMenuItem={handlePrivacyMenuItemSelect}\r\n        menu={availPrivacy}\r\n      />\r\n      <Grid container spacing={2}>\r\n        <Grid container item xs={12} alignItems={'center'}>\r\n          <Grid item xs={6}>\r\n            <Typography variant={'h3'}>Key preview</Typography>\r\n          </Grid>\r\n          <Grid container item xs={6} justify={'flex-end'}>\r\n            <Button size={'small'} ref={privacyBtnRef} onClick={handlePrivacyMenuOpen}>\r\n              {privacyString}\r\n            </Button>\r\n            <Button size={'small'} ref={formatsBtnRef} onClick={handleFormatsMenuOpen}>\r\n              {formatString}\r\n            </Button>\r\n            <div className={styles.copyHolder}>\r\n              <textarea readOnly ref={keyInputRef} value={targetKey} className={styles.keyInput} />\r\n              <CopyBtn inputRef={keyInputRef} message={'Key has been copied!'} />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container xs={12} justify=\"flex-start\" spacing={2}>\r\n          <Grid item>\r\n            <Typography variant=\"caption\">Activates at: {activatesAt}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"caption\">\r\n              {expiresAt ? `Expires at: ${expiresAt}` : `No expiration`}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CodeFormat>{targetKey}</CodeFormat>\r\n        </Grid>\r\n        <Grid item container xs={12} justify={'flex-end'}>\r\n          <Button onClick={handleDialogClose}>Close</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport const KeyPreviewModal: React.FC<IPropsKeyPreview> = (props) => {\r\n  const { modalState, handleDialogClose } = useHooks();\r\n\r\n  return (\r\n    <Dialog open={Boolean(modalState.isOpen)} onClose={handleDialogClose} {...props}>\r\n      <KeyPreview />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const keyData = useSelector(keyPreviewSelectors.details);\r\n  const modalState = useSelector(keyPreviewSelectors.modal);\r\n  const previewParams = useSelector(keyPreviewSelectors.params);\r\n  const availFormats = useSelector(keyPreviewSelectors.availFormats);\r\n  const availPrivacy = useSelector(keyPreviewSelectors.availPrivacy);\r\n\r\n  const [isFormatsMenuOpen, toggleFormatsMenu] = useState(false);\r\n  const [isPrivacyMenuOpen, togglePrivacyMenu] = useState(false);\r\n\r\n  const { setPreviewParams, toggleModal } = useContainerPreviewKey();\r\n\r\n  const handleDialogClose = useCallback(() => {\r\n    toggleModal(false);\r\n  }, [toggleModal]);\r\n\r\n  const handleFormatsMenuClose = useCallback(() => {\r\n    toggleFormatsMenu(false);\r\n  }, [toggleFormatsMenu]);\r\n\r\n  const handleFormatsMenuOpen = useCallback(() => {\r\n    toggleFormatsMenu(true);\r\n  }, [toggleFormatsMenu]);\r\n\r\n  const handlePrivacyMenuClose = useCallback(() => {\r\n    togglePrivacyMenu(false);\r\n  }, [togglePrivacyMenu]);\r\n\r\n  const handlePrivacyMenuOpen = useCallback(() => {\r\n    togglePrivacyMenu(true);\r\n  }, [togglePrivacyMenu]);\r\n\r\n  const handleFormatsMenuItemSelect = useCallback(\r\n    (item: IMenuItem) => {\r\n      setPreviewParams({ format: item.id as 'jwk' | 'pem' });\r\n    },\r\n    [setPreviewParams],\r\n  );\r\n\r\n  const handlePrivacyMenuItemSelect = useCallback(\r\n    (item: IMenuItem) => {\r\n      setPreviewParams({ privacy: item.id as 'private' | 'public' });\r\n    },\r\n    [setPreviewParams],\r\n  );\r\n\r\n  const keyInputRef = useRef<HTMLTextAreaElement>(null);\r\n  const formatsBtnRef = useRef<HTMLButtonElement>(null);\r\n  const privacyBtnRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const targetKey = useMemo(() => {\r\n    if (keyData.data === undefined) {\r\n      return undefined;\r\n    }\r\n\r\n    const { publicKey, privateKey } = keyData.data;\r\n    const isPrivate = previewParams.privacy === 'private';\r\n    const targetKeys = isPrivate ? privateKey : publicKey;\r\n\r\n    if (targetKeys === undefined) {\r\n      return undefined;\r\n    }\r\n\r\n    switch (previewParams.format) {\r\n      case 'pem':\r\n        return targetKeys.pem;\r\n      default:\r\n        return JSON.stringify(targetKeys.jwk, null, 2);\r\n    }\r\n  }, [keyData.data, previewParams.format, previewParams.privacy]);\r\n\r\n  return {\r\n    availFormats,\r\n    availPrivacy,\r\n    isPrivacyMenuOpen,\r\n    isFormatsMenuOpen,\r\n    targetKey,\r\n    modalState,\r\n    keyData,\r\n    previewParams,\r\n    keyInputRef,\r\n    privacyBtnRef,\r\n    formatsBtnRef,\r\n    handleFormatsMenuClose,\r\n    handleFormatsMenuOpen,\r\n    handlePrivacyMenuClose,\r\n    handlePrivacyMenuOpen,\r\n    handleFormatsMenuItemSelect,\r\n    handlePrivacyMenuItemSelect,\r\n    handleDialogClose,\r\n    toggleFormatsMenu,\r\n    togglePrivacyMenu,\r\n    togglePreviewModal: toggleModal,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    wrap: {\r\n      width: '600px',\r\n      padding: '20px',\r\n    },\r\n    copyHolder: {\r\n      position: 'relative',\r\n    },\r\n    keyInput: {\r\n      position: 'absolute',\r\n      overflow: 'hidden',\r\n      width: 10,\r\n      height: 20,\r\n      left: 15,\r\n      top: 15,\r\n      opacity: 0,\r\n    },\r\n  };\r\n});\r\n\r\nexport default KeyPreview;\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n  CircularProgress,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Dialog,\r\n} from '@material-ui/core';\r\nimport Inputmask from 'inputmask';\r\nimport { Formik, Form, Field, FieldProps, FormikProps, FormikErrors, FormikHelpers } from 'formik';\r\nimport { SerializedError } from '@reduxjs/toolkit';\r\n\r\nimport Message from 'src/components/Message';\r\nimport TextFieldWithOptions from 'src/components/TextFieldWithOptions';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\nimport * as keysSelectors from 'src/containers/Keys/selectors';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst unitOptions = {\r\n  h: 'hours',\r\n  d: 'days',\r\n  w: 'weeks',\r\n  m: 'months',\r\n};\r\n\r\nexport interface IKeyEntryFormValues {\r\n  name: string;\r\n  code: string;\r\n  rotation: string;\r\n  rotatable: string;\r\n  server?: string;\r\n  unit: keyof typeof unitOptions;\r\n}\r\n\r\nexport interface IPropsKeyEntryForm {\r\n  onSubmit?: () => void;\r\n}\r\n\r\nconst defaultInitialValues: IKeyEntryFormValues = {\r\n  name: '',\r\n  code: '',\r\n  rotation: '',\r\n  unit: 'd',\r\n  rotatable: '1',\r\n};\r\n\r\nconst KeyEntryForm: React.FC<IPropsKeyEntryForm> = (props) => {\r\n  const styles = useStyles();\r\n  const { menuItems, validate, handleSubmit } = useHooks(props);\r\n\r\n  return (\r\n    <Card style={{ width: 400 }}>\r\n      <CardHeader title={<Typography variant=\"h3\">Add new key entry</Typography>} />\r\n      <CardContent>\r\n        <Formik initialValues={defaultInitialValues} validate={validate} onSubmit={handleSubmit}>\r\n          {(formikProps: FormikProps<IKeyEntryFormValues>) => {\r\n            const loading = formikProps.isSubmitting;\r\n            return (\r\n              <Form>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"name\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        return (\r\n                          <TextField\r\n                            className={styles.textfield}\r\n                            error={Boolean(meta.touched && meta.error)}\r\n                            label=\"Choose name\"\r\n                            variant=\"outlined\"\r\n                            {...field}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"code\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        return (\r\n                          <TextField\r\n                            className={styles.textfield}\r\n                            error={Boolean(meta.touched && meta.error)}\r\n                            label=\"Unique code\"\r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                              inputRef: (el) => {\r\n                                if (el) {\r\n                                  codeMask.mask(el);\r\n                                }\r\n                              },\r\n                            }}\r\n                            {...field}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"rotation\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        const isEnabled = formikProps.values.rotatable === '1';\r\n                        return (\r\n                          <TextFieldWithOptions\r\n                            menu={menuItems}\r\n                            onSelectMenuItem={(item) => {\r\n                              if (typeof item.id === 'string') {\r\n                                formikProps.setFieldValue('unit', item.id);\r\n                              }\r\n                            }}\r\n                            disabled={!isEnabled}\r\n                            currentMenuLabel={unitOptions[formikProps.values.unit]}\r\n                            inputProps={{\r\n                              inputRef: (el) => {\r\n                                if (el) {\r\n                                  digitMask.mask(el);\r\n                                }\r\n                              },\r\n                            }}\r\n                            fieldProps={{\r\n                              error: Boolean(meta.touched && meta.error),\r\n                              label: `Rotation interval`,\r\n                              ...field,\r\n                            }}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"rotatable\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field } = params;\r\n                        return (\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                checked={field.value === '1'}\r\n                                onChange={(_, checked) => {\r\n                                  formikProps.setFieldValue('rotatable', checked ? '1' : '0');\r\n                                }}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label=\"Enable rotation\"\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n\r\n                  {formikProps.errors.server && (\r\n                    <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                      <Message root={{ style: { flexGrow: 1 } }}>\r\n                        {formikProps.errors.server}\r\n                      </Message>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                    <Button\r\n                      disabled={loading}\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      variant={'contained'}\r\n                      color=\"secondary\"\r\n                      disableElevation\r\n                      fullWidth\r\n                    >\r\n                      {!loading && 'Submit'}\r\n                      {loading && <CircularProgress className={styles.progress} size={26} />}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const KeyEntryFormModal: React.FC = () => {\r\n  const isEditModalOpened = useSelector(keysSelectors.isEditModalOpened);\r\n  const { toggleEditModal } = useContainerKeys();\r\n\r\n  const closeModal = useCallback(() => {\r\n    toggleEditModal({ isOpened: false });\r\n  }, [toggleEditModal]);\r\n\r\n  return (\r\n    <Dialog open={isEditModalOpened} onClose={closeModal}>\r\n      <KeyEntryForm onSubmit={closeModal} />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsKeyEntryForm) => {\r\n  const { fetchCreateKey } = useContainerKeys();\r\n\r\n  const menuItems = useMemo(() => {\r\n    const options = Object.keys(unitOptions) as Array<keyof typeof unitOptions>;\r\n    return options.map((unit) => {\r\n      return {\r\n        id: unit,\r\n        label: unitOptions[unit],\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const { onSubmit } = props;\r\n\r\n  const handleSubmit = useCallback(\r\n    async (values: IKeyEntryFormValues, formikHelpers: FormikHelpers<IKeyEntryFormValues>) => {\r\n      const result = await fetchCreateKey({\r\n        name: values.name,\r\n        code: values.code,\r\n        rotation: values.rotatable === '1' ? `${values.rotation} ${values.unit}` : undefined,\r\n      });\r\n\r\n      const errorResult = result as { error: SerializedError };\r\n      if (errorResult.error) {\r\n        formikHelpers.setErrors({ server: errorResult.error.message });\r\n      } else if (onSubmit) {\r\n        onSubmit();\r\n      }\r\n    },\r\n    [onSubmit, fetchCreateKey],\r\n  );\r\n\r\n  const validate = useCallback((values: IKeyEntryFormValues) => {\r\n    const errors: FormikErrors<typeof values> = {};\r\n\r\n    if (!values.name || values.name.length === 0) {\r\n      errors.name = 'Name required!';\r\n    }\r\n\r\n    if (!values.code || values.code.length === 0) {\r\n      errors.code = 'Code required!';\r\n    }\r\n\r\n    if (values.rotatable === '1') {\r\n      if (!values.rotation && values.rotation.length === 0) {\r\n        errors.rotation = 'Rotation interval required!';\r\n      } else if (isNaN(parseInt(values.rotation))) {\r\n        errors.rotation = 'Rotation interval should be number!';\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  }, []);\r\n\r\n  return {\r\n    menuItems,\r\n    handleSubmit,\r\n    fetchCreateKey,\r\n    validate,\r\n  };\r\n};\r\n\r\nconst digitMask = Inputmask({ regex: String.raw`[\\d,.]*` });\r\nconst codeMask = Inputmask({ regex: String.raw`[\\w]*` });\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textfield: {\r\n    width: '100%',\r\n  },\r\n  progress: {\r\n    marginLeft: 20,\r\n  },\r\n  menu: {\r\n    width: 150,\r\n    marginLeft: 10,\r\n  },\r\n}));\r\n\r\nexport default KeyEntryForm;\r\n","import { CircularProgress, Container, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport interface IPropsPage {\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst Page: React.FC<IPropsPage> = (props) => {\r\n  const { isLoading } = props;\r\n  const styles = useStyles();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={styles.loaderWrap}>\r\n        <CircularProgress size={64} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <>{props.children}</>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  loaderWrap: {\r\n    minHeight: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingBottom: 120,\r\n  },\r\n  container: {\r\n    minWidth: 0,\r\n    flexGrow: 1,\r\n    paddingTop: 24,\r\n  },\r\n}));\r\n\r\nexport default Page;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport KeysList from 'src/components/KeysList';\r\nimport { KeyPreviewModal } from 'src/components/KeyPreview';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\nimport * as keysSelectors from 'src/containers/Keys/selectors';\r\nimport { KeyEntryFormModal } from 'src/components/KeyEntryForm';\r\nimport Page from 'src/components/Page';\r\n\r\nexport const KeysPage: React.FC = () => {\r\n  const loading = useSelector(keysSelectors.initialSelector);\r\n  useHooks();\r\n\r\n  return (\r\n    <Page isLoading={loading.keys}>\r\n      <KeysList />\r\n      <KeyPreviewModal />\r\n      <KeyEntryFormModal />\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchKeysListWatch, resetList, routeWatcher, routeParser } = useContainerKeys();\r\n\r\n  useEffect(() => {\r\n    routeParser();\r\n  }, [routeParser]);\r\n\r\n  useEffect(() => {\r\n    routeWatcher();\r\n  }, [routeWatcher]);\r\n\r\n  useEffect(() => {\r\n    const req = fetchKeysListWatch();\r\n    return () => {\r\n      req.abort();\r\n    };\r\n  }, [fetchKeysListWatch]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      resetList();\r\n    };\r\n  }, [resetList]);\r\n};\r\n\r\nexport default KeysPage;\r\n","import { useCallback } from 'react';\r\nimport { IApiParamsAuthAccount, IApiParamsAuthRemove } from 'src/lib/api/auth/types';\r\nimport { useAppDispatch } from 'src/store';\r\nimport { actions as accountsActions } from './reducer';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerAccounts = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const fetchCreateAccount = useCallback(async (params: IApiParamsAuthAccount) => {\r\n    return await dispatch(\r\n      accountsActions.fetchCreateAccount(params),\r\n    );\r\n  }, [dispatch]);\r\n\r\n  const fetchRemoveAccounts = useCallback(async (params: IApiParamsAuthRemove) => {\r\n    return await dispatch(\r\n      accountsActions.fetchRemoveAccounts(params)\r\n    )\r\n  }, [dispatch]);\r\n\r\n  const fetchAccountsList = useCallback(async () => {\r\n    return await dispatch(\r\n      accountsActions.fetchAccountsList()\r\n    );\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    fetchAccountsList,\r\n    fetchCreateAccount,\r\n    fetchRemoveAccounts,\r\n  }\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  makeStyles,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport { Formik, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport { useContainerAccounts } from 'src/containers/Accounts/hooks';\r\n\r\nexport interface IAccountFormValues {\r\n  login: string;\r\n  password: string;\r\n  admin: string;\r\n}\r\n\r\nexport interface IPropsAccountForm {\r\n  onSubmit?:() => void;\r\n}\r\n\r\nconst initialValues: IAccountFormValues = {\r\n  login: '',\r\n  password: '',\r\n  admin: '0',\r\n};\r\n\r\nconst AccountForm: React.FC<IPropsAccountForm> = (props) => {\r\n  const styles = useStyles();\r\n  const { handleSubmit, validate } = useHooks(props);\r\n\r\n  return (\r\n    <Card style={{ width: 400 }}>\r\n      <CardHeader title={<Typography variant=\"h3\">Create new account</Typography>} />\r\n      <CardContent>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validate={validate}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {(formikProps: FormikProps<IAccountFormValues>) => {\r\n            const loading = formikProps.isSubmitting;\r\n            return (\r\n              <Form>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"login\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        return (\r\n                          <TextField\r\n                            fullWidth\r\n                            error={Boolean(meta.touched && meta.error)}\r\n                            label=\"Enter login\"\r\n                            variant=\"outlined\"\r\n                            {...field}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"password\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        return (\r\n                          <TextField\r\n                            fullWidth\r\n                            error={Boolean(meta.touched && meta.error)}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            autoComplete={'off'}\r\n                            variant=\"outlined\"\r\n                            {...field}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"admin\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field } = params;\r\n                        return (\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                checked={field.value === '1'}\r\n                                onChange={(_, checked) => {\r\n                                  formikProps.setFieldValue('admin', checked ? '1' : '0');\r\n                                }}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label=\"Administrator\"\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                    <Button\r\n                      disabled={loading}\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      variant={'contained'}\r\n                      color=\"secondary\"\r\n                      disableElevation\r\n                      fullWidth\r\n                    >\r\n                      {!loading && 'Submit'}\r\n                      {loading && <CircularProgress className={styles.progress} size={26} />}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsAccountForm) => {\r\n  const { onSubmit } = props;\r\n  const { fetchCreateAccount } = useContainerAccounts();\r\n\r\nconst validate = useCallback(() => {}, []);\r\n\r\n  const handleSubmit = useCallback(async (values: IAccountFormValues) => {\r\n    await fetchCreateAccount({\r\n      isAdmin: values.admin === '1',\r\n      login: values.login,\r\n      password: values.password,\r\n    })\r\n    if (onSubmit) {\r\n      onSubmit();\r\n    }\r\n  }, [onSubmit, fetchCreateAccount]);\r\n\r\n  return {\r\n    validate,\r\n    handleSubmit,\r\n    fetchCreateAccount,\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  progress: {\r\n    marginLeft: 20,\r\n  },\r\n}));\r\n\r\nexport default AccountForm;\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreAccounts } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreAccounts => state.accounts;\r\nexport const createFetchSelector = createSelector(containerState, (state) => state.create);\r\nexport const accountsListSelector = createSelector(containerState, (state) => state.list);\r\n","import React, { useCallback } from 'react';\r\nimport { Card, CardContent, Typography, CardActions, Button, makeStyles } from '@material-ui/core';\r\nimport ApproveModal from '../ApproveModal';\r\nimport { useContainerAccounts } from 'src/containers/Accounts/hooks';\r\n\r\nexport interface IAccountData {\r\n  id: number;\r\n  login: string;\r\n}\r\n\r\nexport interface IPropsAccountItem {\r\n  data: IAccountData;\r\n}\r\n\r\nconst AccountItem: React.FC<IPropsAccountItem> = (props) => {\r\n  const styles = useStyles();\r\n  const { deleteAccount } = useHooks();\r\n\r\n  const { data } = props;\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant={'caption'} component={'div'}>\r\n          Account\r\n        </Typography>\r\n        <Typography variant={'h4'} component={'div'}>\r\n          {data.login}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={styles.actions}>\r\n        <ApproveModal\r\n          title={'Are you sure want to delete account?'}\r\n          content={'Every associated keys will be unavailable'}\r\n          onSubmit={() => deleteAccount(data.id)}\r\n        >\r\n          <Button size=\"small\">Remove account</Button>\r\n        </ApproveModal>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchRemoveAccounts } = useContainerAccounts();\r\n  const deleteAccount = useCallback(\r\n    async (id: number) => {\r\n      await fetchRemoveAccounts({ ids: [id] });\r\n    },\r\n    [fetchRemoveAccounts],\r\n  );\r\n\r\n  return {\r\n    deleteAccount,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actions: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n}));\r\n\r\nexport default AccountItem;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Grid, Button, Dialog } from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport AccountForm from 'src/components/AccountForm';\r\nimport { accountsListSelector } from 'src/containers/Accounts/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport AccountItem from '../AccountItem';\r\nimport { useContainerAccounts } from 'src/containers/Accounts/hooks';\r\n\r\nconst AccountsList: React.FC = () => {\r\n  const accountsData = useSelector(accountsListSelector);\r\n  const { isFormOpened, handleModalToggle } = useHooks();\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={isFormOpened} onClose={handleModalToggle}>\r\n        <AccountForm onSubmit={handleModalToggle} />\r\n      </Dialog>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<AddCircleOutlineIcon />}\r\n            onClick={handleModalToggle}\r\n          >\r\n            Add account\r\n          </Button>\r\n        </Grid>\r\n        <Grid container item spacing={2} xs={12}>\r\n          {accountsData.accounts.map((account) => {\r\n            return (\r\n              <Grid item key={account.id} xs={6}>\r\n                <AccountItem data={account} />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const [isFormOpened, toggleForm] = useState(false);\r\n  const { fetchAccountsList } = useContainerAccounts();\r\n\r\n  const handleModalToggle = useCallback(() => {\r\n    toggleForm(!isFormOpened);\r\n  }, [isFormOpened, toggleForm]);\r\n\r\n  useEffect(() => {\r\n    void fetchAccountsList();\r\n  }, [fetchAccountsList]);\r\n\r\n  return {\r\n    isFormOpened,\r\n    toggleForm,\r\n    handleModalToggle,\r\n  }\r\n};\r\n\r\nexport default AccountsList;\r\n","import React from 'react';\r\nimport AccountsList from 'src/components/AccountsList';\r\nimport Page from 'src/components/Page';\r\n\r\nconst AccountsPage: React.FC = () => {\r\n  return (\r\n    <Page>\r\n      <AccountsList />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default AccountsPage;\r\n","import { useCallback } from 'react';\r\nimport { useAppDispatch } from 'src/store';\r\nimport {\r\n  IApiParamsReposCreate,\r\n  IApiParamsReposList,\r\n  IApiParamsReposRemove,\r\n} from 'src/lib/api/repos/types';\r\nimport * as sessionSelectors from 'src/containers/Session/selectors';\r\nimport { actions as reposActions } from './reducer';\r\nimport * as reposSelectors from './selectors';\r\nimport { generatePassword } from 'src/lib/utils/generatePassword';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerRepos = () => {\r\n  const dispatch = useAppDispatch();\r\n  const pager = useSelector(reposSelectors.pagerSelector);\r\n  const search = useSelector(reposSelectors.searchSelector);\r\n  const accessToken = useSelector(sessionSelectors.tokenSelector);\r\n\r\n  const createNewRepo = useCallback(\r\n    (params: Omit<IApiParamsReposCreate, 'accessToken'>) => {\r\n      const token = generatePassword(64);\r\n      return dispatch(reposActions.fetchCreateRepo({ ...params, accessToken: token }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const changePager = useCallback(\r\n    (params: Partial<IApiPager>) => {\r\n      return dispatch(reposActions.changePager(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const resetState = useCallback(() => {\r\n    return dispatch(reposActions.resetState());\r\n  }, [dispatch]);\r\n\r\n  const changeSearch = useCallback(\r\n    (search?: string) => {\r\n      return dispatch(reposActions.changeSearch({ search }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const toggleEditModal = useCallback(\r\n    (opts: { isOpened: boolean }) => {\r\n      return dispatch(reposActions.toggleEditModal(opts));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchListRepo = useCallback(\r\n    (params?: IApiParamsReposList) => {\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      const refreshWhenTokenChanges = accessToken;\r\n      return dispatch(reposActions.fetchListRepo(params));\r\n    },\r\n    [dispatch, accessToken],\r\n  );\r\n\r\n  const fetchListRepoWatch = useCallback(() => {\r\n    const params = {\r\n      page: pager.page,\r\n      perPage: pager.perPage,\r\n      search,\r\n    };\r\n    return fetchListRepo(params);\r\n  }, [fetchListRepo, pager.page, pager.perPage, search]);\r\n\r\n  const deleteRepos = useCallback(\r\n    async (params: IApiParamsReposRemove) => {\r\n      await dispatch(reposActions.fetchRemoveRepos(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return {\r\n    resetState,\r\n    toggleEditModal,\r\n    createNewRepo,\r\n    deleteRepos,\r\n    fetchListRepo,\r\n    changePager,\r\n    fetchListRepoWatch,\r\n    changeSearch,\r\n  };\r\n};\r\n","import React, { useCallback, useRef } from 'react';\r\nimport {\r\n  CardContent,\r\n  Card,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  makeStyles,\r\n  Grid,\r\n  Chip,\r\n  Divider,\r\n  InputAdornment,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport ApproveModal from 'src/components/ApproveModal';\r\nimport { useContainerRepos } from 'src/containers/Repos/hooks';\r\nimport * as sessionSelectors from 'src/containers/Session/selectors';\r\nimport CopyBtn from '../CopyBtn';\r\nimport CodeFormat from '../CodeFormat';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport interface IRepoItemData {\r\n  id: number;\r\n  name: string;\r\n  code: string;\r\n  accessToken: string;\r\n  entries: { name: string }[];\r\n}\r\n\r\nexport interface IPropsRepoItem {\r\n  data: IRepoItemData;\r\n}\r\n\r\nconst RepoItem: React.FC<IPropsRepoItem> = (props) => {\r\n  const { data } = props;\r\n  const styles = useStyles();\r\n  const host = useSelector(sessionSelectors.privateHostSelector);\r\n  const { deleteRepos, accessRef, handleFocus } = useHooks();\r\n  const targetUrl = `${host || ''}/repo/bunch/${data.code}`;\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography variant={'caption'} component={'div'}>\r\n              Repository\r\n            </Typography>\r\n            <Typography variant={'h5'} component={'div'}>\r\n              {data.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid container item xs={12} spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography variant={'caption'} component={'div'}>\r\n                Contained keys\r\n              </Typography>\r\n            </Grid>\r\n            {data.entries.map(({ name }, i) => {\r\n              return (\r\n                <Grid item key={i}>\r\n                  <Chip label={name} variant={'outlined'} />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Access token\"\r\n              variant=\"outlined\"\r\n              value={data.accessToken}\r\n              onFocus={handleFocus}\r\n              InputProps={{\r\n                inputRef: accessRef,\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <CopyBtn inputRef={accessRef} message={`URL has been copied!`} />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography>Key can be fetched via POST with access token.</Typography>\r\n            <CodeFormat>\r\n              {`curl -d '{ \"accessToken\":\"${data.accessToken}\" }' -H \"Content-Type: application/json\" -X POST ${targetUrl}`}\r\n            </CodeFormat>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions className={styles.actions}>\r\n        <ApproveModal\r\n          title={'Are you sure want to delete repo?'}\r\n          onSubmit={() => deleteRepos({ ids: [data.id] })}\r\n        >\r\n          <Button size=\"small\">Remove</Button>\r\n        </ApproveModal>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { deleteRepos } = useContainerRepos();\r\n\r\n  const handleFocus: React.FocusEventHandler<HTMLInputElement> = useCallback((event) => {\r\n    event.target.select();\r\n  }, []);\r\n\r\n  const accessRef = useRef<HTMLInputElement>(null);\r\n\r\n  return {\r\n    accessRef,\r\n    deleteRepos,\r\n    handleFocus,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actions: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  contentItems: {\r\n    display: 'flex',\r\n  },\r\n  contentItem: {\r\n    marginRight: 20,\r\n  },\r\n}));\r\n\r\nexport default RepoItem;\r\n","import React from 'react';\r\nimport { Box, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nexport interface IPropsEmptyReposList {\r\n  onAddNewOne: () => void;\r\n}\r\n\r\nconst EmptyReposList: React.FC<IPropsEmptyReposList> = (props) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <Typography component=\"div\" variant=\"h4\">\r\n        There are no repositories\r\n      </Typography>\r\n      <Box className={styles.text}>\r\n        <p>\r\n          Repository is useful when you need to get several keys in one request. For example, you\r\n          can get all keys while an auth server initialization.\r\n        </p>\r\n      </Box>\r\n      <Box className={styles.buttonBox}>\r\n        <Button variant=\"outlined\" startIcon={<AddCircleOutlineIcon />} onClick={props.onAddNewOne}>\r\n          Add repo\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    text: {\r\n      maxWidth: 600,\r\n    },\r\n    buttonBox: {\r\n      marginTop: 30,\r\n    },\r\n  };\r\n});\r\n\r\nexport default EmptyReposList;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, Button, Box, Container, CircularProgress, Typography } from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nimport RepoItem from 'src/components/RepoItem';\r\nimport * as reposSelectors from 'src/containers/Repos/selectors';\r\nimport { useContainerRepos } from 'src/containers/Repos/hooks';\r\nimport PerPageSelect from '../PerPageSelect';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchInput from '../SearchInput';\r\nimport Portal from '../Portal';\r\nimport EmptyReposList from '../EmptyReposList';\r\n\r\nconst ReposList: React.FC = () => {\r\n  const styles = useStyles();\r\n  const { loading, items, pager, pagerOptions } = useSelector(reposSelectors.reposListSelector);\r\n  const search = useSelector(reposSelectors.searchSelector);\r\n  const isEmpty = useSelector(reposSelectors.isEmptySelector);\r\n\r\n  const {\r\n    handleModalToggle,\r\n    handleChangePerPage,\r\n    handlePagerChange,\r\n    handleChangeSearch,\r\n  } = useHooks();\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={2}>\r\n        <Grid item spacing={2} container xs={12} alignItems=\"center\">\r\n          {!isEmpty && (\r\n            <Grid item>\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<AddCircleOutlineIcon />}\r\n                onClick={handleModalToggle}\r\n              >\r\n                Add repository\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n          {!isEmpty && (\r\n            <Grid item>\r\n              <SearchInput\r\n                defaultValue={search}\r\n                onThrottledChange={handleChangeSearch}\r\n                placeholder={'Search by name...'}\r\n              />\r\n            </Grid>\r\n          )}\r\n          {loading && (\r\n            <Grid item>\r\n              <CircularProgress size={24} />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        {items.length > 0 && (\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              {items.map((repo) => {\r\n                return (\r\n                  <Grid item xs={6} key={repo.id}>\r\n                    <RepoItem data={repo} />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {!isEmpty && items.length === 0 && (\r\n          <Typography className={styles.notFound}>No items found</Typography>\r\n        )}\r\n        {isEmpty && (\r\n          <Grid item xs={12}>\r\n            <EmptyReposList onAddNewOne={handleModalToggle} />\r\n          </Grid>\r\n        )}\r\n        {pager.totalItems !== undefined && pager.totalItems > 0 && (\r\n          <Portal id=\"layout_dashboard_footer\">\r\n            <Container className={styles.footerWrap}>\r\n              <Grid container item xs={12} spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                  <PerPageSelect\r\n                    current={pager.perPage}\r\n                    options={pagerOptions}\r\n                    onSelect={handleChangePerPage}\r\n                  />\r\n                </Grid>\r\n                <Grid item className={styles.pagerHolder}>\r\n                  {pager.totalPages !== undefined && pager.totalPages > 1 && (\r\n                    <Pagination\r\n                      onChange={handlePagerChange}\r\n                      count={pager.totalPages}\r\n                      page={pager.page}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </Portal>\r\n        )}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { changePager, changeSearch, toggleEditModal } = useContainerRepos();\r\n  const isEditFormOpened = useSelector(reposSelectors.isEditModalOpened);\r\n  const handleChangeSearch = useCallback(\r\n    (val: string) => {\r\n      return changeSearch(val);\r\n    },\r\n    [changeSearch],\r\n  );\r\n\r\n  const handleChangePerPage = useCallback(\r\n    (val: number) => {\r\n      return changePager({ perPage: val });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handlePagerChange = useCallback(\r\n    (_: unknown, page: number) => {\r\n      return changePager({ page });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handleModalToggle = useCallback(() => {\r\n    toggleEditModal({ isOpened: !isEditFormOpened });\r\n  }, [toggleEditModal, isEditFormOpened]);\r\n\r\n  return {\r\n    handleChangeSearch,\r\n    handleModalToggle,\r\n    handleChangePerPage,\r\n    handlePagerChange,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  notFound: {\r\n    marginTop: 20,\r\n  },\r\n  footerWrap: {\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  pagerHolder: {\r\n    marginLeft: 'auto',\r\n  },\r\n  searchHolder: {\r\n    marginLeft: 'auto',\r\n  },\r\n  noItems: {\r\n    marginTop: 20,\r\n  },\r\n}));\r\n\r\nexport default ReposList;\r\n","import React, { useEffect, useState, ChangeEvent, useCallback } from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Checkbox,\r\n  makeStyles,\r\n  Box,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { IApiKeyEntry } from 'src/lib/api/types';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\nimport { IApiParamsKeysList, IApiResultKeysList } from 'src/lib/api/keys/list';\r\nimport { useAsyncEffect } from 'src/lib/utils/useAPIEffect';\r\nimport SearchInput from '../SearchInput';\r\n\r\nexport interface IPropsEntriesPicker {\r\n  pickedSet?: string[];\r\n  noItemsMessage?: string;\r\n  onUpdate?: (selected: IApiKeyEntry[]) => void;\r\n}\r\n\r\nconst EntriesPicker: React.FC<IPropsEntriesPicker> = (props) => {\r\n  const { noItemsMessage } = props;\r\n  const { picked, options, handleChangeItem, handleSearchChange } = useHooks(props);\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} className={styles.topDivider}>\r\n        <Divider />\r\n      </Grid>\r\n      {options.length === 0 && noItemsMessage && (\r\n        <Typography className={styles.noItemsMessage} variant=\"caption\">\r\n          {noItemsMessage}\r\n        </Typography>\r\n      )}\r\n      {options.length > 0 && (\r\n        <Grid item xs={12}>\r\n          <SearchInput\r\n            placeholder={'Select required keys...'}\r\n            onThrottledChange={handleSearchChange}\r\n            fullWidth\r\n          />\r\n          <Box className={styles.scrollBar}>\r\n            <PerfectScrollbar>\r\n              <List>\r\n                {options.map((item) => {\r\n                  return (\r\n                    <div key={item.id}>\r\n                      <ListItem key={item.id}>\r\n                        <ListItemIcon>\r\n                          <Checkbox\r\n                            edge=\"start\"\r\n                            size=\"small\"\r\n                            disableRipple\r\n                            checked={picked.includes(item.code)}\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                              handleChangeItem(item.code, e.target.checked)\r\n                            }\r\n                          />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={item.name} />\r\n                      </ListItem>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </List>\r\n            </PerfectScrollbar>\r\n            {options.length === 0 && <Typography>No items available</Typography>}\r\n          </Box>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsEntriesPicker) => {\r\n  const { pickedSet, onUpdate } = props;\r\n  const [picked, pickItems] = useState<string[]>([]);\r\n  const [options, setOptions] = useState<IApiKeyEntry[]>([]);\r\n  const [pickedDetails, changePickedDetails] = useState<{ [id: number]: IApiKeyEntry }>({});\r\n  const [searchParams, setParams] = useState<{\r\n    page?: number;\r\n    perPage?: number;\r\n    search?: string;\r\n  }>({});\r\n\r\n  useUpdatePickedSetFromProps(pickedSet, pickItems);\r\n  useGetPickedDetails(picked, pickedDetails, changePickedDetails);\r\n  useFetchOptions(searchParams, setOptions);\r\n\r\n  const handleChangeItem = useCallback(\r\n    (code: string, checked: boolean) => {\r\n      const newItems = checked ? picked.concat([code]) : picked.filter((item) => item !== code);\r\n\r\n      if (onUpdate) {\r\n        onUpdate(options.filter((item) => newItems.includes(item.code)));\r\n      }\r\n\r\n      pickItems(newItems);\r\n    },\r\n    [onUpdate, pickItems, options, picked],\r\n  );\r\n\r\n  const handleSearchChange = useCallback(\r\n    (val: string) => {\r\n      setParams((s) => ({ ...s, search: val }));\r\n    },\r\n    [setParams],\r\n  );\r\n\r\n  return {\r\n    options,\r\n    picked,\r\n    handleChangeItem,\r\n    handleSearchChange,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  scrollBar: {\r\n    height: 220,\r\n  },\r\n  topDivider: {\r\n    marginBottom: 5,\r\n  },\r\n  noItemsMessage: {\r\n    padding: '10px 15px',\r\n  },\r\n}));\r\n\r\nconst useUpdatePickedSetFromProps = (\r\n  pickedSet: string[] | undefined,\r\n  pickItems: (p: string[]) => void,\r\n) => {\r\n  useEffect(() => {\r\n    if (pickedSet) {\r\n      pickItems(pickedSet);\r\n    }\r\n  }, [pickedSet, pickItems]);\r\n};\r\n\r\nconst useGetPickedDetails = (\r\n  picked: string[],\r\n  pickedDetails: Record<string, IApiKeyEntry>,\r\n  changePickedDetails: (p: Record<number, IApiKeyEntry>) => void,\r\n) => {\r\n  const { requestKeysByIds } = useContainerKeys();\r\n  useEffect(() => {\r\n    const newDetails = pickedDetails;\r\n    const requestTargets: string[] = [];\r\n\r\n    picked.forEach((id) => {\r\n      if (!newDetails[id]) {\r\n        requestTargets.push(id);\r\n      }\r\n    });\r\n    /*\r\n    if (requestTargets.length > 0) {\r\n      requestKeysByIds({ ids: requestTargets })\r\n        .then(({ items }) => {\r\n          items.forEach((item) => {\r\n            newDetails[item.id] = item;\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n      changePickedDetails(newDetails);\r\n    }\r\n    */\r\n  }, [picked, pickedDetails, changePickedDetails, requestKeysByIds]);\r\n};\r\n\r\nconst useFetchOptions = (\r\n  params: IApiParamsKeysList,\r\n  setOptions: (opts: IApiKeyEntry[]) => void,\r\n) => {\r\n  const { requestKeysList } = useContainerKeys();\r\n\r\n  const fetchList = useCallback(() => {\r\n    return requestKeysList(params);\r\n  }, [params, requestKeysList]);\r\n\r\n  const onComplete = useCallback(\r\n    (res: IApiResultKeysList) => {\r\n      setOptions(res.items);\r\n    },\r\n    [setOptions],\r\n  );\r\n\r\n  useAsyncEffect(fetchList, onComplete);\r\n};\r\n\r\nexport default EntriesPicker;\r\n","import { useEffect } from 'react';\r\n\r\nexport const useAsyncEffect = <R, E extends Error>(\r\n  func: () => Promise<R>,\r\n  onSuccess: (result: R) => void,\r\n  onError?: (error: E) => void,\r\n): void => {\r\n  useEffect(() => {\r\n    let isUnmounted = false;\r\n\r\n    func().then((result: R) => {\r\n      !isUnmounted && onSuccess(result);\r\n    }).catch((err: E) => {\r\n      if (!isUnmounted && onError) {\r\n        onError(err);\r\n      } else if (!isUnmounted) {\r\n        throw err;\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      isUnmounted = true;\r\n    }\r\n  }, [func, onSuccess, onError]);\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  makeStyles,\r\n  Dialog,\r\n} from '@material-ui/core';\r\nimport { Formik, FormikProps, Form, Field, FieldProps, FormikErrors, FormikHelpers } from 'formik';\r\n\r\nimport EntriesPicker from 'src/components/EntriesPicker';\r\nimport { useContainerRepos } from 'src/containers/Repos/hooks';\r\nimport * as reposSelectors from 'src/containers/Repos/selectors';\r\nimport { SerializedError } from '@reduxjs/toolkit';\r\nimport Message from '../Message';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport interface IRepositoryFormValues {\r\n  code: string;\r\n  entries: string[];\r\n  server?: string;\r\n}\r\n\r\nexport interface IPropsRepositoryForm {\r\n  onSubmit?: () => void;\r\n}\r\n\r\nconst validate = (values: IRepositoryFormValues) => {\r\n  const { code, entries } = values;\r\n  const errors: FormikErrors<typeof values> = {};\r\n\r\n  if (!code || code.length === 0) {\r\n    errors.code = 'Code required!';\r\n  }\r\n\r\n  if (entries.length === 0) {\r\n    errors.entries = 'Choose at least one entry';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst RepositoryForm: React.FC<IPropsRepositoryForm> = (props) => {\r\n  const styles = useStyles();\r\n  const { handleSubmit } = useHooks(props);\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ width: 400 }}>\r\n        <CardHeader title={<Typography variant=\"h3\">Create new repository</Typography>} />\r\n        <CardContent>\r\n          <Formik\r\n            initialValues={{\r\n              code: '',\r\n              entries: [],\r\n            }}\r\n            validate={validate}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            {(formikProps: FormikProps<IRepositoryFormValues>) => {\r\n              const loading = formikProps.isSubmitting;\r\n              return (\r\n                <Form>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <Field name=\"code\">\r\n                        {(params: FieldProps<string>) => {\r\n                          const { field, meta } = params;\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              error={Boolean(meta.touched && meta.error)}\r\n                              label=\"Choose unique code\"\r\n                              variant=\"outlined\"\r\n                              {...field}\r\n                            />\r\n                          );\r\n                        }}\r\n                      </Field>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Field name=\"entries\">\r\n                        {(params: FieldProps<string[]>) => {\r\n                          const { field, meta } = params;\r\n                          return (\r\n                            <>\r\n                              <EntriesPicker\r\n                                onUpdate={(items) => {\r\n                                  formikProps.setFieldValue(\r\n                                    'entries',\r\n                                    items.map(({ code }) => code),\r\n                                  );\r\n                                }}\r\n                                noItemsMessage={'There are no available entries. Create one first.'}\r\n                                pickedSet={field.value}\r\n                              />\r\n                              {meta.touched && meta.error && (\r\n                                <Typography\r\n                                  variant={'caption'}\r\n                                  color={'error'}\r\n                                  className={styles.keyError}\r\n                                >\r\n                                  {meta.error}\r\n                                </Typography>\r\n                              )}\r\n                            </>\r\n                          );\r\n                        }}\r\n                      </Field>\r\n                    </Grid>\r\n                    {formikProps.errors.server && (\r\n                      <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                        <Message>{formikProps.errors.server}</Message>\r\n                      </Grid>\r\n                    )}\r\n                    <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                      <Button\r\n                        disabled={loading}\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        variant={'contained'}\r\n                        color=\"secondary\"\r\n                        disableElevation\r\n                        fullWidth\r\n                      >\r\n                        {!loading && 'Submit'}\r\n                        {loading && <CircularProgress className={styles.progress} size={26} />}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const RepositoryFormModal: React.FC = () => {\r\n  const { toggleEditModal } = useContainerRepos();\r\n  const isRepoEditModalOpened = useSelector(reposSelectors.isEditModalOpened);\r\n  const closeModal = useCallback(() => {\r\n    toggleEditModal({ isOpened: false });\r\n  }, [toggleEditModal]);\r\n\r\n  return (\r\n    <Dialog open={isRepoEditModalOpened} onClose={closeModal}>\r\n      <RepositoryForm onSubmit={closeModal} />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsRepositoryForm) => {\r\n  const { onSubmit } = props;\r\n  const { createNewRepo } = useContainerRepos();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (values: IRepositoryFormValues, formikHelpers: FormikHelpers<IRepositoryFormValues>) => {\r\n      const result = await createNewRepo({\r\n        code: values.code,\r\n        name: values.code,\r\n        description: values.code,\r\n        keys: values.entries,\r\n      });\r\n      const error = (result as { error: SerializedError }).error;\r\n\r\n      if (!error && onSubmit) {\r\n        onSubmit();\r\n      } else {\r\n        formikHelpers.setErrors({ server: error.message });\r\n      }\r\n    },\r\n    [createNewRepo, onSubmit],\r\n  );\r\n\r\n  return { handleSubmit };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  progress: {\r\n    marginLeft: 20,\r\n  },\r\n  keyTitle: {\r\n    marginTop: 10,\r\n    marginBotton: 10,\r\n    paddingLeft: 10,\r\n  },\r\n  keyError: {\r\n    paddingLeft: 10,\r\n  },\r\n}));\r\n\r\nexport default RepositoryForm;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ReposList from 'src/components/ReposList';\r\nimport { useContainerRepos } from 'src/containers/Repos/hooks';\r\nimport { RepositoryFormModal } from 'src/components/RepositoryForm';\r\nimport Page from 'src/components/Page';\r\nimport { initialSelector } from 'src/containers/Repos/selectors';\r\n\r\nexport const ReposPage: React.FC = () => {\r\n  useHooks();\r\n  const isInitialLoading = useSelector(initialSelector);\r\n\r\n  return (\r\n    <Page isLoading={isInitialLoading}>\r\n      <ReposList />\r\n      <RepositoryFormModal />\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchListRepoWatch, resetState } = useContainerRepos();\r\n  useEffect(() => {\r\n    return () => {\r\n      resetState();\r\n    };\r\n  }, [resetState]);\r\n\r\n  useEffect(() => {\r\n    const req = fetchListRepoWatch();\r\n    return () => {\r\n      req.abort();\r\n    };\r\n  }, [fetchListRepoWatch]);\r\n};\r\nexport default ReposPage;\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreStorage } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreStorage => state.storage;\r\nexport const storageItems = createSelector(containerState, (state) => state.items);\r\nexport const storagePager = createSelector(containerState, (state) => state.pager);\r\nexport const storageFilter = createSelector(containerState, (state) => state.filter);\r\nexport const loadingSelector = createSelector(containerState, (state) => state.loading);\r\nexport const storagePagerOptions = createSelector(containerState, (state) => state.pagerOptions);\r\nexport const initialSelector = createSelector(containerState, (state) => state.initial);\r\n\r\nexport const isEmptySelector = createSelector(\r\n  storageFilter,\r\n  storageItems,\r\n  loadingSelector,\r\n  (filter, items, loading) => {\r\n    const { entryName } = filter;\r\n    return (!entryName || entryName.length === 0) && !loading && items.length === 0;\r\n  },\r\n);\r\n\r\nexport const storageRequestSelector = createSelector(containerState, (state) => {\r\n  return {\r\n    initiated: state.initial,\r\n    loading: state.loading,\r\n    error: state.error,\r\n    data: {\r\n      items: state.items,\r\n      pager: state.pager,\r\n    },\r\n  };\r\n});\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { IApiStorageItem } from 'src/lib/api/types';\r\nimport moment from 'moment';\r\nimport { useContainerPreviewKey } from 'src/containers/KeyPreview/hooks';\r\n\r\nexport interface IStorageTableItem {\r\n  expUnix: number;\r\n  activateUnix: number;\r\n  entry: {\r\n    name: string;\r\n    archivedAt: number | null;\r\n  };\r\n}\r\n\r\nexport interface IPropsStorageTable {\r\n  items: IApiStorageItem[];\r\n}\r\n\r\nconst StorageTable: React.FC<IPropsStorageTable> = (props) => {\r\n  const { items } = props;\r\n  const { handleOpenKeyPreview } = useHooks();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Id</TableCell>\r\n            <TableCell>Type</TableCell>\r\n            <TableCell>Algorithm</TableCell>\r\n            <TableCell>Entry name</TableCell>\r\n            <TableCell>Entry code</TableCell>\r\n            <TableCell>Status</TableCell>\r\n            <TableCell>Period</TableCell>\r\n            <TableCell align=\"center\">\r\n              Actions\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {items.map((item) => {\r\n            const now = moment();\r\n            const expMoment = moment.unix(item.expUnix);\r\n            const activateMoment = moment.unix(item.activateUnix);\r\n            const dateFormat = 'LL';\r\n\r\n            let currentStatus = '';\r\n\r\n            if (item.entry.archivedAt !== null) {\r\n              currentStatus = 'Archived';\r\n            } else if (Boolean(item.expUnix) && expMoment.isBefore(now)) {\r\n              currentStatus = 'Expired';\r\n            } else if (activateMoment.isAfter(now)) {\r\n              currentStatus = 'Awaiting';\r\n            } else {\r\n              currentStatus = 'Active';\r\n            }\r\n\r\n            return (\r\n              <TableRow key={item.key.kid}>\r\n                <TableCell>{item.key.kid}</TableCell>\r\n                <TableCell>{item.key.kty}</TableCell>\r\n                <TableCell>{item.key.alg}</TableCell>\r\n                <TableCell>{item.entry.name}</TableCell>\r\n                <TableCell>{item.entry.code}</TableCell>\r\n                <TableCell>{currentStatus}</TableCell>\r\n                <TableCell>\r\n                  {item.expUnix\r\n                    ? `${activateMoment.format(dateFormat)} - ${expMoment.format(dateFormat)}`\r\n                    : `Non-rotatable`}\r\n                </TableCell>\r\n                <TableCell align=\"center\" >\r\n                  <Grid container spacing={2} justify=\"center\">\r\n                    <Grid item>\r\n                      <IconButton size=\"small\" onClick={() => handleOpenKeyPreview(item.key.kid)}>\r\n                        <VisibilityIcon />\r\n                      </IconButton>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { openKeyPreview } = useContainerPreviewKey();\r\n\r\n  const handleOpenKeyPreview = useCallback(async (id: string) => {\r\n    await openKeyPreview({ id: parseInt(id) }, { format: 'jwk', privacy: 'public' });\r\n  }, [openKeyPreview]);\r\n\r\n  return {\r\n    handleOpenKeyPreview,\r\n  }\r\n}\r\n\r\nexport default StorageTable;\r\n","import { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { IApiParamsKeysStorage } from 'src/lib/api/keys/storage';\r\nimport * as sessionSelectors from 'src/containers/Session/selectors';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { useAppDispatch } from 'src/store';\r\nimport { actions as storageActions } from './reducer';\r\nimport * as storageSelectors from './selectors';\r\nimport { IStoreStorage } from './types';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerStorage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const storagePager = useSelector(storageSelectors.storagePager);\r\n  const storageFilter = useSelector(storageSelectors.storageFilter);\r\n  const accessToken = useSelector(sessionSelectors.tokenSelector);\r\n\r\n  const resetState = useCallback(() => dispatch(storageActions.resetState()), [dispatch]);\r\n\r\n  const changePager = useCallback(\r\n    (pager: Partial<IApiPager>) => {\r\n      return dispatch(storageActions.changePager(pager));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const changeFilter = useCallback(\r\n    (filter: Partial<IStoreStorage['filter']>) => {\r\n      return dispatch(storageActions.changeFilter(filter));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchStorageItems = useCallback(\r\n    (params: IApiParamsKeysStorage) => {\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      const refreshWhenTokenChanges = accessToken;\r\n      return dispatch(storageActions.fetchStorageItems(params));\r\n    },\r\n    [dispatch, accessToken],\r\n  );\r\n\r\n  const fetchStorageItemsWatcher = useCallback(() => {\r\n    const params = {\r\n      page: storagePager.page,\r\n      perPage: storagePager.perPage,\r\n      search: storageFilter.entryName,\r\n    };\r\n    return fetchStorageItems(params);\r\n  }, [fetchStorageItems, storagePager.page, storagePager.perPage, storageFilter]);\r\n\r\n  return {\r\n    resetState,\r\n    changePager,\r\n    changeFilter,\r\n    fetchStorageItems,\r\n    fetchStorageItemsWatcher,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst EmptyStorage = () => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <Typography component=\"div\" variant=\"h4\">\r\n        Keys storage is empty\r\n      </Typography>\r\n      <Box className={styles.text}>\r\n        <p>\r\n          After key entry created, the server will generate and rotate keys. Each generated key will\r\n          be listed in storage.\r\n        </p>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    text: {\r\n      maxWidth: 600,\r\n    },\r\n  };\r\n});\r\n\r\nexport default EmptyStorage;\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { CircularProgress, Container, Fade, TablePagination, Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport * as storageSelectors from 'src/containers/Storage/selectors';\r\nimport StorageTable from 'src/components/StorageTable';\r\nimport { useContainerStorage } from 'src/containers/Storage/hooks';\r\nimport SearchInput from 'src/components/SearchInput';\r\nimport Portal from '../Portal';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport EmptyStorage from '../EmptyStorage';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst StorageList: React.FC = () => {\r\n  const styles = useStyles();\r\n  const { loading, data, error } = useSelector(storageSelectors.storageRequestSelector);\r\n  const storageItems = data.items;\r\n  const storageFilter = useSelector(storageSelectors.storageFilter);\r\n  const pagerOptions = useSelector(storageSelectors.storagePagerOptions);\r\n  const isEmpty = useSelector(storageSelectors.isEmptySelector);\r\n\r\n  const {\r\n    targetPage,\r\n    storagePager,\r\n    totalItems,\r\n    handlePagerChange,\r\n    handleChangePerPage,\r\n    handleChangeFilterEntryName,\r\n  } = useHooks();\r\n\r\n  if (error) {\r\n    return <Alert severity=\"error\">{error}</Alert>;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {!isEmpty && (\r\n        <Grid container item xs={12} spacing={2} alignItems=\"center\">\r\n          <Grid item>\r\n            <SearchInput\r\n              placeholder={'Search by entry name'}\r\n              defaultValue={storageFilter.entryName}\r\n              onThrottledChange={handleChangeFilterEntryName}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Fade in={loading}>\r\n              <CircularProgress size={24} />\r\n            </Fade>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {isEmpty && (\r\n        <Grid item xs={12}>\r\n          <EmptyStorage />\r\n        </Grid>\r\n      )}\r\n      {totalItems !== undefined && totalItems > 0 && (\r\n        <Grid item xs={12}>\r\n          <StorageTable items={storageItems} />\r\n        </Grid>\r\n      )}\r\n      {!isEmpty && storageItems.length === 0 && (\r\n        <Typography className={styles.notFound}>No items found</Typography>\r\n      )}\r\n      {targetPage !== undefined && totalItems !== undefined && totalItems > 0 && (\r\n        <Portal id=\"layout_dashboard_footer\">\r\n          <Container className={styles.footerWrap}>\r\n            <Grid item xs={12}>\r\n              <TablePagination\r\n                component=\"div\"\r\n                count={totalItems}\r\n                page={targetPage - 1}\r\n                rowsPerPageOptions={pagerOptions}\r\n                onChangePage={handlePagerChange}\r\n                rowsPerPage={storagePager.perPage}\r\n                onChangeRowsPerPage={handleChangePerPage}\r\n              />\r\n            </Grid>\r\n          </Container>\r\n        </Portal>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    notFound: {\r\n      marginTop: 20,\r\n    },\r\n    footerWrap: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n    },\r\n  };\r\n});\r\n\r\nconst useHooks = () => {\r\n  const { changePager, changeFilter } = useContainerStorage();\r\n  const storagePager = useSelector(storageSelectors.storagePager);\r\n  const { totalItems, perPage, page } = storagePager;\r\n\r\n  const targetPage = useMemo(() => {\r\n    if (totalItems === undefined) {\r\n      return undefined;\r\n    }\r\n    const maxPage = Math.ceil(totalItems / perPage);\r\n    return Math.min(maxPage, page);\r\n  }, [totalItems, perPage, page]);\r\n\r\n  const handleChangeFilterEntryName = useCallback(\r\n    (val: string) => {\r\n      return changeFilter({ entryName: val });\r\n    },\r\n    [changeFilter],\r\n  );\r\n\r\n  const handlePagerChange = useCallback(\r\n    (_event: React.MouseEvent<HTMLButtonElement> | null, value: number) => {\r\n      return changePager({ page: value + 1 });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handleChangePerPage = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n      const val = parseInt(event.target.value, 10);\r\n      return changePager({ perPage: val });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  return {\r\n    targetPage,\r\n    storagePager,\r\n    totalItems,\r\n    handlePagerChange,\r\n    handleChangeFilterEntryName,\r\n    handleChangePerPage,\r\n  };\r\n};\r\n\r\nexport default StorageList;\r\n","import React, { useEffect } from 'react';\r\nimport StorageList from 'src/components/StorageList';\r\nimport { KeyPreviewModal } from 'src/components/KeyPreview';\r\nimport { useContainerStorage } from 'src/containers/Storage/hooks';\r\nimport Page from 'src/components/Page';\r\nimport { useSelector } from 'react-redux';\r\nimport { initialSelector } from 'src/containers/Storage/selectors';\r\n\r\nexport const StoragePage: React.FC = () => {\r\n  useHooks();\r\n  const isInitialLoading = useSelector(initialSelector);\r\n\r\n  return (\r\n    <Page isLoading={isInitialLoading}>\r\n      <StorageList />\r\n      <KeyPreviewModal />\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchStorageItemsWatcher, resetState } = useContainerStorage();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      resetState();\r\n    };\r\n  }, [resetState]);\r\n\r\n  useEffect(() => {\r\n    const req = fetchStorageItemsWatcher();\r\n\r\n    return () => {\r\n      req.abort();\r\n    };\r\n  }, [fetchStorageItemsWatcher]);\r\n};\r\n\r\nexport default StoragePage;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport * as keysSelectors from 'src/containers/Keys/selectors';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\nimport KeysList from 'src/components/KeysList';\r\nimport { KeyPreviewModal } from 'src/components/KeyPreview';\r\nimport Page from 'src/components/Page';\r\n\r\nexport const ArchivePage: React.FC = () => {\r\n  useHooks();\r\n  const loading = useSelector(keysSelectors.initialSelector);\r\n\r\n  return (\r\n    <Page isLoading={loading.archive}>\r\n      <KeysList archive />\r\n      <KeyPreviewModal />\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchArchiveListWatch, resetList, routeParser, routeWatcher } = useContainerKeys();\r\n\r\n  useEffect(() => {\r\n    routeParser();\r\n  }, [routeParser]);\r\n\r\n  useEffect(() => {\r\n    routeWatcher();\r\n  }, [routeWatcher]);\r\n\r\n  useEffect(() => {\r\n    const req = fetchArchiveListWatch();\r\n    return () => {\r\n      req.abort();\r\n    };\r\n  }, [fetchArchiveListWatch]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      resetList();\r\n    };\r\n  }, [resetList]);\r\n};\r\n\r\nexport default ArchivePage;\r\n","/* eslint-disable react/display-name */\r\nimport React from 'react';\r\nimport { RouteConfig } from 'react-router-config';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { ROUTES } from 'src/constants/routes';\r\nimport AuthLayout from 'src/layouts/AuthLayout';\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport LoginForm from 'src/components/LoginForm';\r\nimport KeysPage from 'src/pages/KeysPage';\r\nimport AccountsPage from 'src/pages/AccountsPage';\r\nimport { ReposPage } from 'src/pages/ReposPage';\r\nimport { StoragePage } from 'src/pages/StoragePage';\r\nimport { ArchivePage } from './pages/ArchivePage';\r\n\r\nconst routes: RouteConfig[] = [\r\n  {\r\n    path: '/',\r\n    exact: true,\r\n    component: (): React.ReactElement => <Redirect to={ROUTES.KEYS} />,\r\n  },\r\n  {\r\n    path: ROUTES.AUTH,\r\n    component: AuthLayout,\r\n    routes: [\r\n      {\r\n        path: ROUTES.AUTH_LOGIN,\r\n        exact: true,\r\n        component: LoginForm,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: ROUTES.DASHBOARD,\r\n    component: DashboardLayout,\r\n    routes: [\r\n      {\r\n        path: ROUTES.KEYS,\r\n        component: KeysPage,\r\n      },\r\n      {\r\n        path: ROUTES.ACCOUNTS,\r\n        component: AccountsPage,\r\n      },\r\n      {\r\n        path: ROUTES.REPOS,\r\n        component: ReposPage,\r\n      },\r\n      {\r\n        path: ROUTES.STORAGE,\r\n        component: StoragePage,\r\n      },\r\n      {\r\n        path: ROUTES.ARCHIVE,\r\n        component: ArchivePage,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrap = styled.div`\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { isAlreadyFetched } from 'src/containers/Session/selectors';\r\nimport { useContainerSession } from 'src/containers/Session/hooks';\r\nimport * as S from './styles';\r\n\r\nconst StartScreen: React.FC = (props) => {\r\n  const isComplete = useSelector(isAlreadyFetched);\r\n  useHooks();\r\n\r\n  if (isComplete) {\r\n    return <>{props.children}</>;\r\n  }\r\n\r\n  return <S.Wrap>{/* <CircularProgress size={60} /> */}</S.Wrap>;\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchMe } = useContainerSession();\r\n\r\n  useEffect(() => {\r\n    const req = fetchMe();\r\n    return () => {\r\n      req.abort();\r\n    };\r\n  }, [fetchMe]);\r\n};\r\n\r\nexport default StartScreen;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useLocation, Redirect } from 'react-router-dom';\r\n\r\nimport { IStore } from 'src/reducer';\r\nimport * as userStateSelectors from 'src/containers/Session/selectors';\r\n\r\nexport interface IPropsAuthGuard {}\r\n\r\nexport interface IConnectAuthGuard {\r\n  isUserAuthorized: boolean;\r\n}\r\n\r\nconst AuthGuard: React.FC<IPropsAuthGuard> = (props) => {\r\n  const location = useLocation();\r\n\r\n  const storeData = useSelector<IStore, IConnectAuthGuard>(\r\n    createStructuredSelector({\r\n      isUserAuthorized: userStateSelectors.isUserAuthorized,\r\n    }),\r\n  );\r\n\r\n  if (storeData.isUserAuthorized && location.pathname === '/auth/login') {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (!storeData.isUserAuthorized && location.pathname !== '/auth/login') {\r\n    return <Redirect to=\"/auth/login\" />;\r\n  }\r\n\r\n  return <>{props.children}</>;\r\n};\r\n\r\nexport default AuthGuard;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider as StoreProvider } from 'react-redux';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport { renderRoutes } from 'react-router-config';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport 'src/theme/global.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\n\r\nimport { store } from 'src/store';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\nimport StartScreen from './components/StartScreen';\r\nimport AuthGuard from './components/AuthGuard';\r\n\r\nconst targetNode = document.getElementById('root');\r\n\r\nif (targetNode) {\r\n  const history = createBrowserHistory();\r\n  ReactDOM.render(\r\n    <StoreProvider store={store}>\r\n      <CssBaseline />\r\n      <ThemeProvider theme={theme}>\r\n        <Router history={history}>\r\n          <StartScreen>\r\n            <AuthGuard>{renderRoutes(routes)}</AuthGuard>\r\n          </StartScreen>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </StoreProvider>,\r\n    targetNode,\r\n  );\r\n}\r\n"],"sourceRoot":""}