{"version":3,"sources":["lib/errors/HttpResponseError.ts","lib/utils/fetch.ts","constants/settings.ts","lib/api/auth/login.ts","lib/api/auth/logout.ts","lib/api/auth/me.ts","lib/api/auth/account.ts","lib/api/auth/accounts.ts","lib/api/auth/index.ts","lib/api/auth/remove.ts","lib/api/index.ts","lib/api/keys/index.ts","lib/api/keys/list.ts","lib/api/keys/create.ts","lib/api/keys/remove.ts","lib/api/keys/storage.ts","lib/api/keys/archive.ts","lib/api/keys/restore.ts","lib/api/keys/preview.ts","lib/api/keys/byIds.ts","lib/api/repos/index.ts","lib/api/repos/create.ts","lib/api/repos/list.ts","lib/api/repos/remove.ts","constants/routes.ts","constants/mainMenu.ts","containers/Session/reducer.ts","containers/Accounts/reducer.ts","constants/pager.ts","containers/Repos/reducer.ts","containers/Storage/reducer.ts","containers/Keys/reducer.ts","containers/KeyPreview/reducer.ts","containers/KeyPreview/constants.ts","reducer.ts","containers/Session/saga.ts","containers/Keys/selectors.ts","containers/Keys/saga.ts","containers/Repos/selectors.ts","containers/Repos/saga.ts","saga.ts","store.ts","theme/palette.ts","theme/typography.ts","theme/overrides/index.ts","theme/overrides/MuiTableHead.ts","theme/overrides/MuiTableCell.ts","theme/overrides/MuiCardHeader.ts","theme/index.ts","containers/Session/selectors.ts","components/TopBar/styled.ts","containers/Session/hooks.ts","components/TopBar/index.tsx","layouts/AuthLayout/styled.ts","components/Message/styles.ts","components/Message/index.tsx","components/LoginForm/styled.ts","components/LoginForm/index.tsx","layouts/AuthLayout/index.tsx","components/ExpiredSession/index.tsx","components/MainMenu/index.tsx","layouts/DashboardLayout/styled.ts","layouts/DashboardLayout/index.tsx","lib/utils/generatePassword.ts","containers/Keys/hooks.ts","components/PopMenu/index.tsx","components/TextFieldWithOptions/index.tsx","components/KeyEntryForm/index.tsx","components/CopyBtn/index.tsx","components/UrlsList/index.tsx","components/ApproveModal/index.tsx","components/MessageTooltip/index.tsx","components/CodeFormat/index.tsx","containers/KeyPreview/hooks.ts","components/PrivateUrls/index.tsx","components/KeyItem/index.tsx","components/PerPageSelect/index.tsx","components/SearchInput/index.tsx","components/KeysList/index.tsx","containers/KeyPreview/selectors.ts","components/KeyPreview/index.tsx","pages/KeysPage/index.tsx","containers/Accounts/hooks.ts","components/AccountForm/index.tsx","containers/Accounts/selectors.ts","components/AccountItem/index.tsx","components/AccountsList/index.tsx","pages/AccountsPage/index.tsx","containers/Repos/hooks.ts","components/RepoItem/index.tsx","components/EntriesPicker/index.tsx","lib/utils/useAPIEffect.ts","components/RepositoryForm/index.tsx","components/ReposList/index.tsx","pages/ReposPage/index.tsx","containers/Storage/selectors.ts","components/StorageTable/index.tsx","containers/Storage/hooks.ts","components/StorageList/index.tsx","pages/StoragePage/index.tsx","pages/ArchivePage/index.tsx","routes.tsx","components/StartScreen/styles.ts","components/StartScreen/index.tsx","components/AuthGuard/index.tsx","index.tsx"],"names":["HttpRequestError","status","message","Object","setPrototypeOf","prototype","statusCode","this","Error","headers","prop","val","input","init","url","replace","processedInput","window","fetch","credentials","res","json","data","store","dispatch","sessionActions","setSessionExpired","isExpired","params","a","fetcher","removeHeader","localStorage","removeItem","fetchJson","method","body","JSON","stringify","result","setItem","setHeader","token","isLogout","rawAuth","getItem","parse","_params","remove","deleted","account","accounts","login","logout","me","auth","keys","list","page","perPage","search","isArchived","query","qs","archived","addQueryPrefix","create","key","id","toString","storage","archive","entry","restore","preview","isByEntry","targetUrl","byIds","ids","repos","created","ROUTES","MAIN_MENU_LINKS","path","name","title","icon","isAdminOnly","pureState","isUserAuthorized","isAlreadyFetched","isSessionExpired","mainMenuLinks","errors","loginForm","reducers","setUserData","state","action","payload","Boolean","defineMenuLinks","isAdmin","filter","item","undefined","fetchLoginUser","createAsyncThunk","api","fetchMe","fetchLogout","set","createSlice","initialState","extraReducers","builder","forEach","trigger","addCase","pending","fulfilled","hosts","isPrivateKeysForbidden","isPrivateForbidden","host","rejected","error","parsedError","includes","code","actions","reducer","fetchCreateAccount","thunkApi","fetchAccountsList","fetchRemoveAccounts","loading","test","_action","DEFAULT_PAGE_OPTIONS","items","pager","pagerOptions","changePager","changeSearch","fetchListRepo","fetchCreateRepo","fetchRemoveRepos","changeFilter","fetchStorageItems","edit","reset","fetchCreateKey","fetchKeysList","fetchRemoveKeyItem","fetchArchiveKeyItem","fetchRestoreKeyItem","meta","arg","totalItems","toggleModal","isOpen","modal","setParams","fetchKeyPreview","_thunkApi","availFormats","label","availPrivacy","details","session","sessionReducer","keysReducer","accountsReducer","reposReducer","storageReducer","keyPreview","rootReducer","combineReducers","sagaSession","menuUpdate","fork","takeEvery","put","containerState","keysListSelector","createSelector","keysPagerSelector","keysSearchSelector","keysPagerOptionsSelector","isKeyListEmpty","length","keysRequestSelector","sagaKeys","reloadKeysList","keysActions","select","type","fetchParams","targetPage","Math","max","ceil","reposListSelector","pagerSelector","searchSelector","isEmptySelector","sagaRepos","reloadReposListAfterCreationOrDeletion","reposActions","reposSelectors","isCreation","newPage","mainSaga","sagaMiddleware","createSagaMiddleware","middleware","thunk","enhancer","applyMiddleware","createStore","composeWithDevTools","run","rootSaga","initializeStore","useAppDispatch","useDispatch","white","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","red","text","blueGrey","link","background","default","paper","divider","grey","typography","palette","h1","color","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiTableHead","root","backgroundColor","MuiTableCell","borderBottom","head","paddingTop","paddingBottom","MuiCardHeader","marginRight","marginTop","theme","createMuiTheme","overrides","hostSelector","Grow","styled","div","useContainerSession","useCallback","useHooks","TopBar","user","useSelector","sessionSelectors","isLogoutAvail","AppBar","position","Toolbar","Typography","variant","Button","onClick","Wrap","BarHolder","FormHolder","Root","Paper","Message","TextWrap","Box","props","elevation","children","defaultProps","severnity","Container","Body","BodyLine","LineItem","SubmitButton","initialValues","username","password","handleSubmit","values","validate","LoginForm","serverErrors","userServerErrors","Card","CardHeader","CardContent","onSubmit","_props","field","TextField","touched","autoComplete","size","AuthLayout","ExpiredSession","Dialog","open","useStyles","makeStyles","iconWrap","maxWidth","minWidth","MainMenu","history","useHistory","mainMenu","styles","List","component","map","ListItem","push","ListItemIcon","className","Icon","ListItemText","Header","Menu","Main","DashboardLayout","route","routes","renderRoutes","generatePassword","charset","retVal","i","n","charAt","floor","random","useContainerKeys","keysSelectors","fetchKeysListWatch","fetchArchiveListWatch","accessToken","requestKeysList","requestKeysByIds","resetList","menuStaticProps","useMemo","anchorOrigin","horizontal","vertical","transformOrigin","menu","width","PopMenu","keepMounted","anchorEl","onClose","handleClose","MenuItem","onSelectMenuItem","TextFieldWithOptions","currentMenuLabel","fieldProps","inputProps","disabled","React","useState","setAnchorEl","fullWidth","InputProps","endAdornment","InputAdornment","beforeOptions","event","currentTarget","afterOptions","unitOptions","h","d","w","m","defaultInitialValues","rotation","unit","rotatable","menuItems","formikHelpers","errorResult","setErrors","server","isNaN","parseInt","digitMask","Inputmask","regex","String","raw","codeMask","textfield","progress","marginLeft","KeyEntryForm","style","formikProps","isSubmitting","Grid","container","spacing","xs","inputRef","el","mask","isEnabled","setFieldValue","FormControlLabel","control","Checkbox","checked","value","onChange","_","alignItems","flexGrow","disableElevation","CircularProgress","isCopied","setCopied","handleCopy","current","document","execCommand","handleCloseSnack","CopyBtn","Snackbar","autoHideDuration","Alert","severity","IconButton","handleFocus","target","inputRefs","createRef","padding","UrlsList","onFocus","isPrivate","ApproveModal","toggleDialog","DialogTitle","content","DialogContent","DialogActions","autoFocus","HtmlTooltip","withStyles","tooltip","pxToRem","border","Tooltip","MessageTooltip","pre","display","overflowX","height","whiteSpace","CodeFormat","useContainerPreviewKey","keyPreviewActions","setPreviewParams","openKeyPreview","apiParams","previewParams","KEY_FORMATS","formatId","setFormat","format","find","keysHost","urlRef","useRef","accessRef","handleSetFormat","handleOpenPreviewModal","privacy","exampleMessage","justifyContent","PrivateUrls","accessCode","Link","rotateInterval","publicUrls","deleteItem","archiveItem","restoreItem","moment","duration","humanize","privateWrap","marginBottom","opacity","codeHolder","textAlign","KeyItem","justify","Divider","Accordion","AccordionSummary","expandIcon","placement","gutterBottom","AccordionDetails","CardActions","archivedAt","onSelect","handleChange","e","PerPageSelect","options","Select","onThrottledChange","restProps","InputPropsMemo","startAdornment","throttledChange","debounce","SearchInput","isFormOpened","toggleForm","handleModalToggle","handlePagerChange","_event","handleChangePerPage","handleChangeSearch","pagerHolder","searchHolder","wrap","noItems","KeysList","isEmpty","startIcon","defaultValue","placeholder","totalPages","Pagination","count","KeyPreview","keyData","keyInputRef","formatsBtnRef","privacyBtnRef","targetKey","isFormatsMenuOpen","isPrivacyMenuOpen","handleFormatsMenuClose","handleFormatsMenuOpen","handlePrivacyMenuClose","handlePrivacyMenuOpen","handleFormatsMenuItemSelect","handlePrivacyMenuItemSelect","handleDialogClose","formatString","toUpperCase","privacyString","activatesAt","unix","expiresAt","ref","copyHolder","readOnly","keyInput","KeyPreviewModal","modalState","keyPreviewSelectors","toggleFormatsMenu","togglePrivacyMenu","publicKey","privateKey","targetKeys","pem","jwk","togglePreviewModal","overflow","left","top","useEffect","req","abort","KeysPage","useContainerAccounts","accountsActions","admin","AccountForm","accountsListSelector","deleteAccount","AccountItem","AccountsList","accountsData","AccountsPage","useContainerRepos","createNewRepo","fetchListRepoWatch","deleteRepos","contentItems","contentItem","RepoItem","entries","Chip","pickedSet","onUpdate","picked","pickItems","setOptions","pickedDetails","changePickedDetails","searchParams","useUpdatePickedSetFromProps","useGetPickedDetails","useFetchOptions","handleChangeItem","newItems","concat","handleSearchChange","s","scrollBar","topDivider","newDetails","requestTargets","func","onSuccess","onError","fetchList","onComplete","isUnmounted","then","catch","err","EntriesPicker","edge","disableRipple","description","keyTitle","marginBotton","paddingLeft","keyError","RepositoryForm","ReposList","repo","ReposPage","storageItems","storagePager","storageFilter","storagePagerOptions","entryName","handleOpenKeyPreview","StorageTable","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","now","expMoment","expUnix","activateMoment","activateUnix","currentStatus","isBefore","isAfter","kid","kty","alg","useContainerStorage","storageSelectors","storageActions","fetchStorageItemsWatcher","maxPage","min","handleChangeFilterEntryName","StorageList","TablePagination","rowsPerPageOptions","onChangePage","rowsPerPage","onChangeRowsPerPage","StoragePage","ArchivePage","exact","to","StartScreen","isComplete","AuthGuard","location","useLocation","storeData","createStructuredSelector","userStateSelectors","pathname","targetNode","getElementById","createBrowserHistory","ReactDOM","render","CssBaseline","ThemeProvider"],"mappings":"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","file":"static/js/main.ea3b981f.chunk.js","sourcesContent":["export interface IHttpRequestErrorInfo {\r\n  statusCode: number;\r\n  message: string;\r\n}\r\n\r\nexport class HttpRequestError extends Error {\r\n  constructor (public status: number, public message: string) {\r\n    super(message);\r\n    Object.setPrototypeOf(this, HttpRequestError.prototype);\r\n  }\r\n\r\n  getInfo(): IHttpRequestErrorInfo {\r\n    return {\r\n      statusCode: this.status,\r\n      message: this.message,\r\n    };\r\n  }\r\n}\r\n","import 'whatwg-fetch';\r\nimport { HttpRequestError } from '../errors/HttpResponseError';\r\nimport { API_URL } from 'src/constants/settings';\r\nimport { store } from 'src/store';\r\nimport { actions as sessionActions } from 'src/containers/Session/reducer';\r\n\r\nconst targetApi = API_URL;\r\n\r\nclass AppFetcher {\r\n  headers: Record<string, string>;\r\n\r\n  constructor(headers?: Record<string, string>) {\r\n    this.headers = headers || {};\r\n  }\r\n\r\n  setHeader(prop: string, val: string) {\r\n    this.headers = {\r\n      ...this.headers,\r\n      [prop]: val\r\n    }\r\n  }\r\n\r\n  removeHeader(prop: string) {\r\n    if (this.headers) {\r\n      delete this.headers[prop];\r\n    }\r\n  }\r\n\r\n  async fetch(input: RequestInfo, init?: RequestInit): Promise<Response> {\r\n    let processedInput;\r\n\r\n    if (typeof input !== 'string') {\r\n      input.url.replace('{api}', targetApi);\r\n\r\n      processedInput = {\r\n        ...input,\r\n        url: input.url,\r\n      };\r\n    } else {\r\n      processedInput = input.replace('{api}', targetApi);\r\n    }\r\n\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      ...this.headers,\r\n      ...init?.headers,\r\n    };\r\n\r\n    return window.fetch(processedInput, {\r\n      credentials: 'include',\r\n      ...init,\r\n      headers,\r\n    });\r\n  }\r\n\r\n  async fetchJson<T>(\r\n    input: RequestInfo,\r\n    init?: RequestInit,\r\n  ): Promise<T> {\r\n    try {\r\n      const res = await this.fetch(input, init);\r\n\r\n      if (res.status < 300) {\r\n        return (await res.json()) as T;\r\n      } else {\r\n        const data = (await res.json()) as { statusCode: number; message: string };\r\n        throw new HttpRequestError(data.statusCode, data.message);\r\n      }\r\n    } catch (err) {\r\n      if (err instanceof HttpRequestError) {\r\n        switch (err.status) {\r\n          case 401:\r\n            store.dispatch(sessionActions.setSessionExpired({ isExpired: true }));\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AppFetcher();\r\n","export const IS_DEV = process.env.NODE_ENV === 'development';\r\nexport const API_URL = IS_DEV ? 'http://localhost:3000' : '';\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsAuthLogin, IApiResultAuthLogin } from './types';\r\n\r\nexport default async (params: IApiParamsAuthLogin): Promise<IApiResultAuthLogin> => {\r\n  fetcher.removeHeader(`Authorization`);\r\n  localStorage.removeItem('auth');\r\n\r\n  const result = await fetcher.fetchJson<IApiResultAuthLogin>(\r\n    '{api}/auth/token',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(params)\r\n    }\r\n  );\r\n\r\n\r\n  if (result) {\r\n    localStorage.setItem('auth', JSON.stringify(result));\r\n    fetcher.setHeader(`Authorization`, `Bearer ${result.token}`);\r\n  }\r\n\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultAuthLogout } from './types';\r\n\r\n// eslint-disable-next-line @typescript-eslint/require-await\r\nexport default async (): Promise<IApiResultAuthLogout> => {\r\n  fetcher.removeHeader(`Authorization`);\r\n  localStorage.removeItem('auth');\r\n  return { isLogout: true }\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultAuthLogin } from './types';\r\nimport { HttpRequestError } from 'src/lib/errors/HttpResponseError';\r\n\r\n// eslint-disable-next-line @typescript-eslint/require-await\r\nexport default async (): Promise<IApiResultAuthLogin> => {\r\n  const rawAuth = localStorage.getItem('auth');\r\n\r\n  if (rawAuth === null) {\r\n    throw new HttpRequestError(401, 'No jwt presents')\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n  const result: IApiResultAuthLogin = JSON.parse(rawAuth);\r\n  fetcher.setHeader(`Authorization`, `Bearer ${result.token}`);\r\n\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsAuthAccount, IApiResultAuthAccount } from './types';\r\n\r\nexport default async (params: IApiParamsAuthAccount): Promise<IApiResultAuthAccount | null> => {\r\n  const result = await fetcher.fetchJson<IApiResultAuthAccount>(\r\n    '{api}/auth/account',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(params)\r\n    }\r\n  );\r\n\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsAuthAccounts, IApiResultAuthAccounts } from './types';\r\n\r\nexport default async (_params?: IApiParamsAuthAccounts): Promise<IApiResultAuthAccounts> => {\r\n  const result = await fetcher.fetchJson<IApiResultAuthAccounts>(\r\n    '{api}/auth/accounts',\r\n    {\r\n      method: 'GET',\r\n    }\r\n  );\r\n\r\n  return result;\r\n};\r\n","import login from './login';\r\nimport logout from './logout';\r\nimport me from './me';\r\nimport account from './account';\r\nimport accounts from './accounts';\r\nimport remove from './remove';\r\n\r\nexport default {\r\n  remove,\r\n  account,\r\n  accounts,\r\n  login,\r\n  logout,\r\n  me,\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultAuthRemove, IApiParamsAuthRemove } from './types';\r\n\r\nexport default async (params: IApiParamsAuthRemove): Promise<IApiResultAuthRemove | null> => {\r\n  const result = await fetcher.fetchJson<IApiResultAuthRemove['deleted']>(\r\n    '{api}/auth/accounts',\r\n    {\r\n      method: 'DELETE',\r\n      body: JSON.stringify(params),\r\n    }\r\n  );\r\n\r\n  return result ? { deleted: result } : null;\r\n};\r\n","import auth from './auth';\r\nimport keys from './keys';\r\nimport repos from './repos';\r\n\r\nexport default {\r\n  auth,\r\n  keys,\r\n  repos,\r\n};\r\n","import list from './list';\r\nimport create from './create';\r\nimport remove from './remove';\r\nimport storage from './storage';\r\nimport archive from './archive';\r\nimport restore from './restore';\r\nimport preview from './preview';\r\nimport byIds from './byIds';\r\n\r\nexport default {\r\n  list,\r\n  create,\r\n  remove,\r\n  storage,\r\n  archive,\r\n  restore,\r\n  preview,\r\n  byIds,\r\n}\r\n","import qs from 'qs';\r\nimport fetcher from 'src/lib/utils/fetch';\r\nimport { IApiKeyEntry, IApiPager } from '../types';\r\n\r\nexport interface IApiParamsKeysList {\r\n  page?: number;\r\n  perPage?: number;\r\n  search?: string;\r\n  isArchived?: boolean;\r\n}\r\n\r\nexport interface IApiResultKeysList {\r\n  items: IApiKeyEntry[];\r\n  pager: IApiPager;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysList = {}): Promise<IApiResultKeysList> => {\r\n  const { page, perPage, search, isArchived } = params;\r\n  const query = qs.stringify({ page, perPage, search, archived: isArchived ? 1 : 0 }, { addQueryPrefix: true });\r\n\r\n  const result = await fetcher.fetchJson<IApiResultKeysList>(\r\n    `{api}/entry/list${query}`,\r\n    {\r\n      method: 'GET',\r\n    }\r\n  );\r\n\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultKeysCreate, IApiParamsKeysCreate } from './types';\r\n\r\nexport default async (params: IApiParamsKeysCreate): Promise<IApiResultKeysCreate> => {\r\n  const result = await fetcher.fetchJson<IApiResultKeysCreate['key']>(\r\n    '{api}/entry/create',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(params),\r\n    }\r\n  );\r\n\r\n  return { key: result };\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsKeysRemove, IApiResultKeysRemove } from './types';\r\n\r\nexport default async (params: IApiParamsKeysRemove): Promise<IApiResultKeysRemove> => {\r\n  const result = await fetcher.fetchJson<IApiResultKeysRemove['deleted']>(\r\n    `{api}/entry/${params.id.toString()}`,\r\n    {\r\n      method: 'DELETE',\r\n    }\r\n  );\r\n\r\n  return { deleted: result };\r\n};\r\n","import qs from 'qs';\r\nimport fetcher from 'src/lib/utils/fetch';\r\nimport { IApiPager, IApiStorageItem } from 'src/lib/api/types';\r\n\r\nexport interface IApiParamsKeysStorage {\r\n  page: number;\r\n  perPage: number;\r\n  filter?: {\r\n    entryName?: string;\r\n  }\r\n}\r\n\r\nexport interface IApiResultKeysStorage {\r\n  items: IApiStorageItem[];\r\n  pager: IApiPager;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysStorage): Promise<IApiResultKeysStorage> => {\r\n  const query = qs.stringify(params, { addQueryPrefix: true });\r\n  return await fetcher.fetchJson<IApiResultKeysStorage>(`{api}/key/storage${query}`, {\r\n    method: 'GET',\r\n  });\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiKeyEntry } from 'src/lib/api/types';\r\n\r\nexport interface IApiParamsKeysArchive {\r\n  id: number;\r\n}\r\n\r\nexport interface IApiResultKeysArchive {\r\n  entry: IApiKeyEntry;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysArchive): Promise<IApiResultKeysArchive> => {\r\n  const result = await fetcher.fetchJson<IApiResultKeysArchive['entry']>(\r\n    `{api}/entry/archive/${params.id.toString()}`,\r\n    {\r\n      method: 'POST',\r\n    }\r\n  );\r\n\r\n  return { entry: result };\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiKeyEntry } from 'src/lib/api/types';\r\n\r\nexport interface IApiParamsKeysRestore {\r\n  id: number;\r\n}\r\n\r\nexport interface IApiResultKeysRestore {\r\n  entry: IApiKeyEntry;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysRestore): Promise<IApiResultKeysRestore> => {\r\n  const result = await fetcher.fetchJson<IApiResultKeysRestore['entry']>(\r\n    `{api}/entry/restore/${params.id.toString()}`,\r\n    {\r\n      method: 'POST',\r\n    }\r\n  );\r\n\r\n  return { entry: result };\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiPrivateJWK, IApiPublicJWK } from '../types';\r\n\r\nexport interface IApiParamsKeysPreview {\r\n  id: number;\r\n  isByEntry?: boolean;\r\n}\r\nexport interface IApiResultKeysPreview {\r\n  publicKey: { jwk: IApiPublicJWK; pem: string };\r\n  privateKey?: { jwk: IApiPrivateJWK; pem: string };\r\n  activatesAt: number;\r\n  expiresAt: number;\r\n  entryId: number;\r\n}\r\n\r\nexport default async (params: IApiParamsKeysPreview): Promise<IApiResultKeysPreview> => {\r\n  const { id, isByEntry } = params;\r\n  const targetUrl = isByEntry ? `{api}/key/byEntry/${id.toString()}` : `{api}/key/${id.toString()}`;\r\n  return await fetcher.fetchJson<IApiResultKeysPreview>(targetUrl);\r\n};\r\n","import qs from 'qs';\r\nimport fetcher from 'src/lib/utils/fetch';\r\nimport { IApiKeyEntry } from '../types';\r\n\r\nexport interface IApiParamsKeysByIds {\r\n  ids: number[];\r\n}\r\n\r\nexport interface IApiResultKeysByIds {\r\n  items: IApiKeyEntry[];\r\n}\r\n\r\nexport default async (params: IApiParamsKeysByIds): Promise<IApiResultKeysByIds> => {\r\n  const { ids } = params;\r\n  const query = qs.stringify({ ids }, { addQueryPrefix: true });\r\n\r\n  const result = await fetcher.fetchJson<IApiResultKeysByIds>(`{api}/entry/byIds${query}`, {\r\n    method: 'GET',\r\n  });\r\n\r\n  return result;\r\n};\r\n","import { create } from './create';\r\nimport { list } from './list';\r\nimport { remove } from './remove';\r\n\r\nexport default {\r\n  create,\r\n  list,\r\n  remove,\r\n}\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsReposCreate, IApiResultReposCreate } from './types';\r\n\r\nexport const create = async (\r\n  params: IApiParamsReposCreate,\r\n): Promise<IApiResultReposCreate | null> => {\r\n  const result = await fetcher.fetchJson<IApiResultReposCreate['created']>('{api}/repo/create', {\r\n    method: 'POST',\r\n    body: JSON.stringify(params),\r\n  });\r\n\r\n  return result ? { created: result } : null;\r\n};\r\n","import qs from 'qs';\r\nimport fetcher from 'src/lib/utils/fetch';\r\nimport { IApiResultReposList } from './types';\r\n\r\nexport interface IApiParamsReposList {\r\n  page?: number;\r\n  perPage?: number;\r\n}\r\nexport const list = async (params: IApiParamsReposList = {}): Promise<IApiResultReposList> => {\r\n  const query = qs.stringify(params, { addQueryPrefix: true });\r\n  const result = await fetcher.fetchJson<IApiResultReposList>(`{api}/repo/list${query}`);\r\n  return result;\r\n};\r\n","import fetcher from 'src/lib/utils/fetch';\r\nimport { IApiParamsReposRemove, IApiResultReposRemove } from './types';\r\n\r\nexport const remove = async (params: IApiParamsReposRemove): Promise<IApiResultReposRemove> => {\r\n  const result = await fetcher.fetchJson<IApiResultReposRemove['deleted']>('{api}/repo/remove', {\r\n    method: 'DELETE',\r\n    body: JSON.stringify(params),\r\n  });\r\n\r\n  return { deleted: result ? result : [] };\r\n};\r\n","export const ROUTES = {\r\n  AUTH: '/auth',\r\n  AUTH_LOGIN: '/auth/login',\r\n  DASHBOARD: '/dashboard',\r\n  DASHBOARD_SPECIES: '/dashboard/species',\r\n  ACCOUNTS: '/dashboard/accounts',\r\n  KEYS: '/dashboard/keys',\r\n  REPOS: '/dashboard/repos',\r\n  STORAGE: '/dashboard/journal',\r\n  ARCHIVE: '/dashboard/archive',\r\n}\r\n","import { ROUTES } from \"./routes\";\r\n\r\nexport const MAIN_MENU_LINKS = [\r\n  { id: 1, path: ROUTES.KEYS , name: 'keys', title: 'Active keys', icon: 'vpn_key', isAdminOnly: false },\r\n  { id: 3, path: ROUTES.ARCHIVE , name: 'archive', title: 'Archived keys', icon: 'unarchive', isAdminOnly: false },\r\n  { id: 2, path: ROUTES.REPOS, name: 'repos', title: 'Repositories', icon: 'apps', isAdminOnly: false },\r\n  { id: 4, path: ROUTES.STORAGE , name: 'storage', title: 'Storage', icon: 'inbox', isAdminOnly: false },\r\n];\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IStoreSession } from './types';\r\nimport {\r\n  IApiResultAuthLogin,\r\n  IApiParamsAuthLogin,\r\n  IApiResultAuthLogout,\r\n} from 'src/lib/api/auth/types';\r\nimport { MAIN_MENU_LINKS } from 'src/constants/mainMenu';\r\n\r\ntype S = IStoreSession;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'SESSION';\r\n\r\nconst pureState: IStoreSession = {\r\n  isUserAuthorized: false,\r\n  isAlreadyFetched: false,\r\n  isSessionExpired: false,\r\n  mainMenuLinks: [],\r\n  errors: {\r\n    loginForm: null,\r\n  },\r\n};\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  setUserData: (state: S, action: PA<IApiResultAuthLogin>): S => {\r\n    const { token, account } = action.payload;\r\n\r\n    return {\r\n      ...state,\r\n      token,\r\n      account,\r\n      isUserAuthorized: Boolean(token),\r\n    };\r\n  },\r\n  defineMenuLinks: (state: S): S => {\r\n    const isAdmin = Boolean(state.account?.isAdmin);\r\n    const mainMenuLinks = MAIN_MENU_LINKS.filter((item) => {\r\n      return isAdmin || !item.isAdminOnly;\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      mainMenuLinks,\r\n    };\r\n  },\r\n  setSessionExpired: (state: S, action: PA<{ isExpired: boolean }>): S => {\r\n    if (state.isUserAuthorized) {\r\n      return {\r\n        ...state,\r\n        isSessionExpired: action.payload.isExpired,\r\n      };\r\n    } else {\r\n      return {\r\n        ...state,\r\n        token: undefined,\r\n        isUserAuthorized: false,\r\n      };\r\n    }\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchLoginUser = createAsyncThunk(\r\n  `${prefix}/REQ_LOGIN`,\r\n  async (params: IApiParamsAuthLogin): Promise<IApiResultAuthLogin> => {\r\n    return await api.auth.login(params);\r\n  },\r\n);\r\n\r\nconst fetchMe = createAsyncThunk(\r\n  `${prefix}/REQ_ME`,\r\n  async (): Promise<IApiResultAuthLogin> => {\r\n    return await api.auth.me();\r\n  },\r\n);\r\n\r\nconst fetchLogout = createAsyncThunk(\r\n  `${prefix}/REQ_LOGOUT`,\r\n  async (): Promise<IApiResultAuthLogout> => {\r\n    return await api.auth.logout();\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: pureState,\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    [fetchLoginUser, fetchMe].forEach((trigger) => {\r\n      builder.addCase(trigger.pending, (state) => {\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            loginForm: null,\r\n          },\r\n        };\r\n      });\r\n\r\n      builder.addCase(trigger.fulfilled, (state, action) => {\r\n        const { token, account, hosts } = action.payload;\r\n        return {\r\n          ...state,\r\n          token,\r\n          account,\r\n          isUserAuthorized: Boolean(token),\r\n          isSessionExpired: false,\r\n          isAlreadyFetched: true,\r\n          isPrivateKeysForbidden: hosts.isPrivateForbidden,\r\n          host: hosts.url,\r\n        };\r\n      });\r\n\r\n      builder.addCase(trigger.rejected, (state, action) => {\r\n        const { error } = action;\r\n        if (error === undefined) {\r\n          return state;\r\n        }\r\n\r\n        const parsedError = error.message?.includes('No jwt presents')\r\n          ? {}\r\n          : {\r\n              loginForm:\r\n                error.code === '500'\r\n                  ? 'Server error. Please, try again.'\r\n                  : 'Wrong login/password pair.',\r\n            };\r\n\r\n        return {\r\n          ...pureState,\r\n          isAlreadyFetched: true,\r\n          errors: {\r\n            ...state.errors,\r\n            ...parsedError,\r\n          },\r\n        };\r\n      });\r\n    })\r\n\r\n    builder.addCase(fetchLogout.fulfilled, (state) => {\r\n      return {\r\n        ...state,\r\n        token: undefined,\r\n        isUserAuthorized: false,\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchLoginUser,\r\n  fetchLogout,\r\n  fetchMe,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IStoreAccounts } from './types';\r\nimport {\r\n  IApiParamsAuthAccount,\r\n  IApiResultAuthAccount,\r\n  IApiResultAuthAccounts,\r\n  IApiResultAuthRemove,\r\n  IApiParamsAuthRemove,\r\n} from 'src/lib/api/auth/types';\r\n\r\ntype S = IStoreAccounts;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'ACCOUNTS';\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  test: (state: S, _action: PA<number>): S => {\r\n    return state;\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchCreateAccount = createAsyncThunk(\r\n  `${prefix}/SUBMIT_ACCOUNT`,\r\n  async (params: IApiParamsAuthAccount, thunkApi): Promise<IApiResultAuthAccount | null> => {\r\n    const result = await api.auth.account(params);\r\n    await thunkApi.dispatch(fetchAccountsList());\r\n    return result;\r\n  },\r\n);\r\n\r\nconst fetchRemoveAccounts = createAsyncThunk(\r\n  `${prefix}/REMOVE_ACCOUNTS`,\r\n  async (params: IApiParamsAuthRemove, thunkApi): Promise<IApiResultAuthRemove | null> => {\r\n    const result = await api.auth.remove(params);\r\n    await thunkApi.dispatch(fetchAccountsList());\r\n    return result;\r\n  },\r\n);\r\n\r\nconst fetchAccountsList = createAsyncThunk(\r\n  `${prefix}/FETCH_LIST`,\r\n  async (): Promise<IApiResultAuthAccounts> => {\r\n    const result = await api.auth.accounts();\r\n    return result;\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: {\r\n    create: {\r\n      error: null,\r\n      loading: false,\r\n    },\r\n    list: {\r\n      error: null,\r\n      loading: false,\r\n      accounts: [],\r\n    },\r\n  },\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCreateAccount.fulfilled, (state, action) => {\r\n      if (action.payload === null) {\r\n        return { ...state, create: { ...state.create, error: true, loading: false } };\r\n      }\r\n      return { ...state, error: null, loading: false };\r\n    });\r\n    builder.addCase(fetchAccountsList.fulfilled, (state, action) => {\r\n      if (action.payload === null) {\r\n        return { ...state, list: { ...state.list, error: true, loading: false, accounts: [] } };\r\n      }\r\n\r\n      const { accounts } = action.payload;\r\n\r\n      return { ...state, list: { ...state.list, error: null, loading: false, accounts } };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchCreateAccount,\r\n  fetchAccountsList,\r\n  fetchRemoveAccounts,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","export const DEFAULT_PAGE_OPTIONS = [4, 8, 16];\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IStoreRepos } from './types';\r\nimport {\r\n  IApiParamsReposCreate,\r\n  IApiResultReposCreate,\r\n  IApiResultReposList,\r\n  IApiParamsReposRemove,\r\n  IApiResultReposRemove,\r\n  IApiParamsReposList,\r\n} from 'src/lib/api/repos/types';\r\nimport { DEFAULT_PAGE_OPTIONS } from 'src/constants/pager';\r\nimport { IApiPager } from 'src/lib/api/types';\r\n\r\ntype S = IStoreRepos;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'REPOS';\r\n\r\nconst pureState: S = {\r\n  create: {\r\n    error: null,\r\n    loading: false,\r\n  },\r\n  list: {\r\n    error: null,\r\n    loading: false,\r\n    items: [],\r\n    pager: {\r\n      page: 1,\r\n      perPage: DEFAULT_PAGE_OPTIONS[0],\r\n    },\r\n    pagerOptions: DEFAULT_PAGE_OPTIONS,\r\n  },\r\n};\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  changePager: (state: S, action: PA<Partial<IApiPager>>): S => {\r\n    return {\r\n      ...state,\r\n      list: {\r\n        ...state.list,\r\n        pager: {\r\n          ...state.list.pager,\r\n          ...action.payload,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  changeSearch: (state: S, action: PA<Partial<{ search?: string }>>): S => {\r\n    return {\r\n      ...state,\r\n      list: {\r\n        ...state.list,\r\n        search: action.payload.search,\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchListRepo = createAsyncThunk(\r\n  `${prefix}/FETCH_LIST`,\r\n  async (params?: IApiParamsReposList): Promise<IApiResultReposList> => {\r\n    return await api.repos.list(params);\r\n  },\r\n);\r\n\r\nconst fetchCreateRepo = createAsyncThunk(\r\n  `${prefix}/SUBMIT_REPO`,\r\n  async (params: IApiParamsReposCreate): Promise<IApiResultReposCreate | null> => {\r\n    const result = await api.repos.create(params);\r\n    return result;\r\n  },\r\n);\r\n\r\nconst fetchRemoveRepos = createAsyncThunk(\r\n  `${prefix}/REMOVE_REPOS`,\r\n  async (params: IApiParamsReposRemove): Promise<IApiResultReposRemove> => {\r\n    const result = await api.repos.remove(params);\r\n    return result;\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: pureState,\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCreateRepo.fulfilled, (state, action) => {\r\n      if (action.payload === null) {\r\n        return { ...state, create: { ...state.create, error: true, loading: false } };\r\n      }\r\n      return { ...state, error: null, loading: false };\r\n    });\r\n\r\n    builder.addCase(fetchListRepo.fulfilled, (state, action) => {\r\n      return {\r\n        ...state,\r\n        list: {\r\n          ...state.list,\r\n          error: null,\r\n          loading: false,\r\n          items: action.payload.items,\r\n          pager: action.payload.pager,\r\n        },\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchCreateRepo,\r\n  fetchListRepo,\r\n  fetchRemoveRepos,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { IStoreStorage } from './types';\r\nimport api from 'src/lib/api';\r\nimport { IApiParamsKeysStorage, IApiResultKeysStorage } from 'src/lib/api/keys/storage';\r\nimport { IApiPager } from 'src/lib/api/types';\r\n\r\ntype S = IStoreStorage;\r\ntype PA<T> = PayloadAction<T>;\r\n\r\nconst prefix = 'STORAGE';\r\n\r\nconst pureState: S = {\r\n  items: [],\r\n  pager: {\r\n    page: 1,\r\n    perPage: 10,\r\n  },\r\n  pagerOptions: [10, 25, 50],\r\n  filter: {},\r\n};\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  changePager: (state: S, action: PA<Partial<IApiPager>>): S => {\r\n    return {\r\n      ...state,\r\n      pager: {\r\n        ...state.pager,\r\n        ...action.payload,\r\n      },\r\n    };\r\n  },\r\n  changeFilter: (state: S, action: PA<Partial<Partial<S['filter']>>>): S => {\r\n    return {\r\n      ...state,\r\n      pager: {\r\n        ...state.pager,\r\n        page: 1,\r\n      },\r\n      filter: {\r\n        ...state.filter,\r\n        ...action.payload,\r\n      }\r\n    };\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchStorageItems = createAsyncThunk(\r\n  `${prefix}/FETCH_STORAGE`,\r\n  async (params: IApiParamsKeysStorage): Promise<IApiResultKeysStorage> => {\r\n    return await api.keys.storage(params);\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: pureState,\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchStorageItems.fulfilled, (state, action) => {\r\n      const { items, pager } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        items,\r\n        pager,\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchStorageItems,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IStoreKeys } from './types';\r\nimport {\r\n  IApiResultKeysRemove,\r\n  IApiParamsKeysRemove,\r\n  IApiParamsKeysCreate,\r\n  IApiResultKeysCreate,\r\n} from 'src/lib/api/keys/types';\r\nimport { IApiParamsKeysArchive, IApiResultKeysArchive } from 'src/lib/api/keys/archive';\r\nimport { IApiParamsKeysRestore, IApiResultKeysRestore } from 'src/lib/api/keys/restore';\r\nimport { IApiParamsKeysList, IApiResultKeysList } from 'src/lib/api/keys/list';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { DEFAULT_PAGE_OPTIONS } from 'src/constants/pager';\r\n\r\ntype S = IStoreKeys;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'KEYS';\r\n\r\nconst pureState: S = {\r\n  list: {\r\n    loading: {\r\n      keys: true,\r\n    },\r\n    errors: {\r\n      keys: null,\r\n    },\r\n    items: [],\r\n    pager: {\r\n      page: 1,\r\n      perPage: 4,\r\n    },\r\n    pagerOptions: DEFAULT_PAGE_OPTIONS,\r\n  },\r\n  edit: {\r\n    loading: false,\r\n    error: null,\r\n  },\r\n};\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  changePager: (state: S, action: PA<Partial<IApiPager>>): S => {\r\n    return {\r\n      ...state,\r\n      list: {\r\n        ...state.list,\r\n        pager: {\r\n          ...state.list.pager,\r\n          ...action.payload,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  changeSearch: (state: S, action: PA<Partial<{ search?: string }>>): S => {\r\n    return {\r\n      ...state,\r\n      list: {\r\n        ...state.list,\r\n        query: action.payload.search,\r\n        pager: {\r\n          ...state.list.pager,\r\n          page: 1,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  reset: () => pureState,\r\n};\r\n\r\n/** Async logic */\r\nconst fetchCreateKey = createAsyncThunk(\r\n  `${prefix}/SUBMIT_KEY`,\r\n  async (params: IApiParamsKeysCreate): Promise<IApiResultKeysCreate> => {\r\n    const result = await api.keys.create(params);\r\n    // await thunkApi.dispatch(listActions.fetchKeysList());\r\n    return result;\r\n  },\r\n);\r\n\r\nconst fetchKeysList = createAsyncThunk(\r\n  `${prefix}/FETCH_KEYS`,\r\n  async (params: IApiParamsKeysList): Promise<IApiResultKeysList> => {\r\n    return await api.keys.list(params);\r\n  },\r\n);\r\n\r\nconst fetchRemoveKeyItem = createAsyncThunk(\r\n  `${prefix}/REMOVE_KEY`,\r\n  async (params: IApiParamsKeysRemove): Promise<IApiResultKeysRemove> => {\r\n    const result = await api.keys.remove(params);\r\n    return result ? result : { deleted: [] };\r\n  },\r\n);\r\n\r\nconst fetchArchiveKeyItem = createAsyncThunk(\r\n  `${prefix}/ARCHIVE_KEY`,\r\n  async (params: IApiParamsKeysArchive): Promise<IApiResultKeysArchive> => {\r\n    return await api.keys.archive(params);\r\n  },\r\n);\r\n\r\nconst fetchRestoreKeyItem = createAsyncThunk(\r\n  `${prefix}/RESTORE_KEY`,\r\n  async (params: IApiParamsKeysRestore): Promise<IApiResultKeysRestore> => {\r\n    return await api.keys.restore(params);\r\n  },\r\n);\r\n\r\n/** Combine slice reducer asnd actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: pureState,\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(\r\n      fetchKeysList.pending,\r\n      (state): S => {\r\n        return { ...state, list: { ...state.list, loading: {...state.list.loading, keys: true } } };\r\n      },\r\n    );\r\n    builder.addCase(\r\n      fetchKeysList.fulfilled,\r\n      (state, action): S => {\r\n        const { items, pager } = action.payload;\r\n        return { ...state, list: { ...state.list, items, pager, loading: {...state.list.loading, keys: false } } };\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      fetchRemoveKeyItem.fulfilled,\r\n      (state, action): S => {\r\n        const { id } = action.meta.arg;\r\n        const { totalItems } = state.list.pager;\r\n\r\n        return {\r\n          ...state,\r\n          list: {\r\n            ...state.list,\r\n            items: state.list.items.filter((item) => id !== item.id),\r\n            pager: { ...state.list.pager, totalItems: totalItems ? totalItems - 1 : undefined },\r\n          },\r\n        };\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      fetchArchiveKeyItem.fulfilled,\r\n      (state): S => {\r\n        const { totalItems } = state.list.pager;\r\n\r\n        return {\r\n          ...state,\r\n          list: {\r\n            ...state.list,\r\n            pager: { ...state.list.pager, totalItems: totalItems ? totalItems - 1 : undefined },\r\n          },\r\n        };\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      fetchRestoreKeyItem.fulfilled,\r\n      (state): S => {\r\n        const { totalItems } = state.list.pager;\r\n\r\n        return {\r\n          ...state,\r\n          list: {\r\n            ...state.list,\r\n            pager: { ...state.list.pager, totalItems: totalItems ? totalItems - 1 : undefined },\r\n          },\r\n        };\r\n      },\r\n    );\r\n\r\n    builder.addCase(\r\n      fetchCreateKey.fulfilled,\r\n      (state, action): S => {\r\n        const { totalItems } = state.list.pager;\r\n        return {\r\n          ...state,\r\n          list: {\r\n            ...state.list,\r\n            pager: {\r\n              ...state.list.pager,\r\n              totalItems: totalItems ? totalItems + 1 : undefined,\r\n            },\r\n          },\r\n          edit: { ...state.edit, error: true, loading: false, item: action.payload.key },\r\n        };\r\n      },\r\n    );\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchKeysList,\r\n  fetchRemoveKeyItem,\r\n  fetchArchiveKeyItem,\r\n  fetchRestoreKeyItem,\r\n  fetchCreateKey,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport api from 'src/lib/api';\r\nimport { IApiParamsKeysPreview, IApiResultKeysPreview } from 'src/lib/api/keys/preview';\r\nimport { AVAIL_PREVIEW_FORMATS, AVAIL_PRIVACY } from './constants';\r\nimport { IStoreKeyPreview } from './types';\r\n\r\ntype S = IStoreKeyPreview;\r\ntype PA<T> = PayloadAction<T>;\r\nconst prefix = 'KEY_PREVIEW';\r\n\r\n/** Sync logic */\r\nconst reducers = {\r\n  toggleModal: (state: S, action: PA<{ isOpen?: boolean }>): S => {\r\n    const { isOpen } = action.payload;\r\n\r\n    return {\r\n      ...state,\r\n      modal: {\r\n        ...state.modal,\r\n        isOpen: isOpen === undefined ? !state.modal.isOpen : isOpen,\r\n      },\r\n    };\r\n  },\r\n  setParams: (state: S, action: PA<Partial<S['params']>>): S => {\r\n    return {\r\n      ...state,\r\n      params: {\r\n        ...state.params,\r\n        ...action.payload,\r\n      }\r\n    };\r\n  },\r\n};\r\n\r\n/** Async logic */\r\nconst fetchKeyPreview = createAsyncThunk(\r\n  `${prefix}/FETCH_KEY`,\r\n  async (params: IApiParamsKeysPreview, _thunkApi): Promise<IApiResultKeysPreview> => {\r\n    const result = await api.keys.preview(params);\r\n    return result;\r\n  },\r\n);\r\n\r\n/** Combine slice reducer and actions set */\r\nconst set = createSlice<S, typeof reducers, string>({\r\n  initialState: {\r\n    availFormats: AVAIL_PREVIEW_FORMATS,\r\n    availPrivacy: AVAIL_PRIVACY,\r\n    params: {},\r\n    modal: {},\r\n    details: {\r\n      error: null,\r\n      loading: false,\r\n    },\r\n  },\r\n  name: prefix,\r\n  reducers,\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchKeyPreview.fulfilled, (state, action) => {\r\n      return {\r\n        ...state,\r\n        details: {\r\n          ...state.details,\r\n          error: null,\r\n          loading: false,\r\n          data: action.payload,\r\n        },\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  ...set.actions,\r\n  fetchKeyPreview,\r\n};\r\n\r\nexport const { reducer } = set;\r\n","export const AVAIL_PREVIEW_FORMATS = [\r\n  { id: 'jwk', label: 'JWK' },\r\n  { id: 'pem', label: 'PEM' },\r\n];\r\n\r\nexport const AVAIL_PRIVACY = [\r\n  { id: 'private', label: 'PRIVATE' },\r\n  { id: 'public', label: 'PUBLIC' },\r\n];\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as sessionReducer } from 'src/containers/Session/reducer';\r\nimport { reducer as accountsReducer } from 'src/containers/Accounts/reducer';\r\nimport { reducer as reposReducer } from 'src/containers/Repos/reducer';\r\nimport { reducer as storageReducer } from 'src/containers/Storage/reducer';\r\nimport { reducer as keysReducer } from 'src/containers/Keys/reducer';\r\nimport { reducer as keyPreviewReducer } from 'src/containers/KeyPreview/reducer';\r\n\r\nconst reducers = {\r\n  session: sessionReducer,\r\n  keys: keysReducer,\r\n  accounts: accountsReducer,\r\n  repos: reposReducer,\r\n  storage: storageReducer,\r\n  keyPreview: keyPreviewReducer,\r\n}\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport type IStore = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import { fork, takeEvery, put, ForkEffect } from 'redux-saga/effects';\r\nimport { actions } from './reducer';\r\n\r\nexport function* sagaSession(): IterableIterator<ForkEffect<void>> {\r\n  yield fork(menuUpdate);\r\n}\r\n\r\nfunction* menuUpdate() {\r\n  yield takeEvery([\r\n    actions.fetchLoginUser.fulfilled,\r\n    actions.fetchMe.fulfilled,\r\n  ], function* () {\r\n    yield put(actions.defineMenuLinks());\r\n  });\r\n}\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreKeys } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreKeys => state.keys;\r\nexport const keysItemsSelector = createSelector(containerState, (state) => state.list.items);\r\nexport const keysListSelector = createSelector(containerState, (state) => state.list);\r\nexport const keysPagerSelector = createSelector(containerState, (state) => state.list.pager);\r\nexport const keysSearchSelector = createSelector(containerState, (state) => state.list.query);\r\nexport const keysPagerOptionsSelector = createSelector(\r\n  containerState,\r\n  (state) => state.list.pagerOptions,\r\n);\r\nexport const isKeyListEmpty = createSelector(\r\n  keysSearchSelector,\r\n  keysListSelector,\r\n  (search, list) => {\r\n    return (!search || search.length === 0) && !list.loading.keys && list.items.length === 0;\r\n  },\r\n);\r\n\r\nexport const keysRequestSelector = createSelector(keysListSelector, (list) => {\r\n  return {\r\n    loading: list.loading.keys,\r\n    error: list.loading.keys,\r\n    data: {\r\n      items: list.items,\r\n    },\r\n    pager: list.pager,\r\n  };\r\n});\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { fork, put, select, takeEvery } from 'redux-saga/effects';\r\nimport { IApiParamsKeysList } from 'src/lib/api/keys/list';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { actions as keysActions } from './reducer';\r\nimport { keysPagerSelector } from './selectors';\r\n\r\nexport function* sagaKeys() {\r\n  yield fork(reloadKeysList);\r\n}\r\n\r\nfunction* reloadKeysList() {\r\n  yield takeEvery(\r\n    [\r\n      keysActions.fetchCreateKey.fulfilled,\r\n      keysActions.fetchRemoveKeyItem.fulfilled,\r\n      keysActions.fetchArchiveKeyItem.fulfilled,\r\n      keysActions.fetchRestoreKeyItem.fulfilled,\r\n    ],\r\n    function* (action) {\r\n      const pager: IApiPager = yield select(keysPagerSelector);\r\n      const isArchived = [\r\n        keysActions.fetchRestoreKeyItem.fulfilled.toString(),\r\n        keysActions.fetchRemoveKeyItem.fulfilled.toString(),\r\n      ].includes(action.type);\r\n\r\n      const fetchParams: IApiParamsKeysList = {\r\n        page: pager.page,\r\n        perPage: pager.perPage,\r\n        isArchived,\r\n      };\r\n\r\n      if (pager.totalItems) {\r\n        const targetPage = Math.max(Math.ceil(pager.totalItems / pager.perPage), 1);\r\n\r\n        if (targetPage < pager.page) {\r\n          yield put(keysActions.changePager({ page: targetPage }));\r\n        } else {\r\n          yield put<any>(keysActions.fetchKeysList(fetchParams));\r\n        }\r\n      } else {\r\n        yield put<any>(keysActions.fetchKeysList(fetchParams));\r\n      }\r\n    },\r\n  );\r\n}\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreRepos } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreRepos => state.repos;\r\nexport const createFetchSelector = createSelector(containerState, (state) => state.create);\r\nexport const reposListSelector = createSelector(containerState, (state) => state.list);\r\nexport const pagerSelector = createSelector(reposListSelector, (list) => list.pager);\r\nexport const searchSelector = createSelector(reposListSelector, (list) => list.search);\r\nexport const pagerOptionsSelector = createSelector(reposListSelector, (list) => list.pagerOptions);\r\nexport const isEmptySelector = createSelector(reposListSelector, (list) => {\r\n  const { search, loading, items } = list;\r\n  return (!search || search.length === 0) && !loading && items.length === 0;\r\n});\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { fork, put, select, takeEvery } from 'redux-saga/effects';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { actions as reposActions } from './reducer';\r\nimport * as reposSelectors from './selectors';\r\n\r\nexport function* sagaRepos() {\r\n  yield fork(reloadReposListAfterCreationOrDeletion);\r\n}\r\n\r\nfunction* reloadReposListAfterCreationOrDeletion() {\r\n  yield takeEvery(\r\n    [reposActions.fetchCreateRepo.fulfilled, reposActions.fetchRemoveRepos.fulfilled],\r\n    function* (action) {\r\n      const pager: IApiPager = yield select(reposSelectors.pagerSelector);\r\n      const search: string = yield select(reposSelectors.searchSelector);\r\n      const isCreation = action.type === reposActions.fetchCreateRepo.fulfilled.toString();\r\n      const fetchParams = { page: pager.page, perPage: pager.perPage, search };\r\n\r\n      if (isCreation && pager.totalItems) {\r\n        const newPage = Math.ceil(pager.totalItems + 1 / pager.perPage);\r\n        yield put(reposActions.changePager({ page: newPage }))\r\n      } else {\r\n        yield put<any>(reposActions.fetchListRepo(fetchParams));\r\n      }\r\n    },\r\n  );\r\n}\r\n","import { fork, ForkEffect } from 'redux-saga/effects';\r\n\r\nimport { sagaSession } from 'src/containers/Session/saga';\r\nimport { sagaKeys } from 'src/containers/Keys/saga';\r\nimport { sagaRepos } from 'src/containers/Repos/saga';\r\n\r\nexport default function* mainSaga(): IterableIterator<ForkEffect<void>> {\r\n  yield fork(sagaSession);\r\n  yield fork(sagaKeys);\r\n  yield fork(sagaRepos);\r\n}\r\n","import { createStore, applyMiddleware, Middleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nimport rootReducer, { IStore } from './reducer';\r\nimport rootSaga from './saga';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch, AnyAction, PayloadAction, SerializedError } from '@reduxjs/toolkit';\r\nimport { IS_DEV } from './constants/settings';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport function initializeStore(initialState = {}) {\r\n  // ======================================================\r\n  // Middleware Configuration\r\n  // ======================================================\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middleware: Middleware[] = [thunk, sagaMiddleware];\r\n\r\n  if (IS_DEV) {\r\n    middleware.push(createLogger({ collapsed: true }));\r\n  }\r\n\r\n  // ======================================================\r\n  // Enhancer Configuration\r\n  // ======================================================\r\n  const enhancer = applyMiddleware(...middleware);\r\n\r\n  // ======================================================\r\n  // Store Instantiation\r\n  // ======================================================\r\n  const result = createStore(rootReducer, initialState, composeWithDevTools(enhancer));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return result;\r\n}\r\n\r\nexport const store = initializeStore();\r\nexport type AppDispatch = ThunkDispatch<IStore, void, AnyAction>;\r\nexport const useAppDispatch = (): AppDispatch => useDispatch();\r\n\r\nexport type IDispatchReturn<R, P> =\r\n  | { error: SerializedError }\r\n  | PayloadAction<\r\n      R,\r\n      string,\r\n      {\r\n        arg: P;\r\n        requestId: string;\r\n      },\r\n      never\r\n    >;\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.indigo[500],\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  link: colors.blue[800],\r\n  icon: colors.blueGrey[600],\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  divider: colors.grey[200]\r\n};\r\n","import { Palette } from '@material-ui/core/styles/createPalette';\r\nimport { TypographyOptions } from '@material-ui/core/styles/createTypography';\r\n\r\nconst typography: ((palette: Palette) => TypographyOptions) = (palette) => ({\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px',\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px',\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px',\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px',\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px',\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px',\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px',\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px',\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px',\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    lineHeight: '18px',\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px',\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase',\r\n  },\r\n});\r\n\r\nexport default typography;\r\n","import MuiTableHead from './MuiTableHead';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiCardHeader from './MuiCardHeader';\r\n\r\nexport default {\r\n  MuiTableHead,\r\n  MuiTableCell,\r\n  MuiCardHeader,\r\n}\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50],\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    fontSize: 14,\r\n  },\r\n  body: {\r\n    borderBottom: `1px solid ${colors.grey[200]}`,\r\n  },\r\n  head: {\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderBottom: `1px solid ${colors.grey[200]}`,\r\n    color: colors.blueGrey[500],\r\n  }\r\n};\r\n","// import { colors } from '@material-ui/core';\r\n\r\nimport { colors } from \"@material-ui/core\";\r\n\r\nexport default {\r\n  root: {\r\n    borderBottom: `1px solid ${colors.grey[200]}`,\r\n  },\r\n  action: {\r\n    marginRight: 0,\r\n    marginTop: 0,\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n});\r\n\r\nexport default theme;\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreSession } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreSession => state.session;\r\nexport const isUserAuthorized = createSelector(containerState, (state) => state.isUserAuthorized);\r\nexport const isAlreadyFetched = createSelector(containerState, (state) => state.isAlreadyFetched);\r\nexport const isSessionExpired = createSelector(containerState, (state) => state.isSessionExpired);\r\nexport const account = createSelector(containerState, (state) => state.account);\r\nexport const host = createSelector(containerState, (state) => state.host);\r\nexport const mainMenuLinks = createSelector(containerState, (state) => state.mainMenuLinks);\r\nexport const errors = createSelector(containerState, (state) => state.errors);\r\nexport const jwt = createSelector(containerState, (state) => state.token || null);\r\nexport const hostSelector = createSelector(containerState, (state) => state.host || '');\r\n\r\nexport const privateHostSelector = createSelector(containerState, (state) =>\r\n  !state.isPrivateKeysForbidden ? state.host || '' : '',\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const Grow = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n","import { useCallback } from 'react';\r\nimport { IApiParamsAuthLogin } from 'src/lib/api/auth/types';\r\nimport { useAppDispatch } from 'src/store';\r\nimport { actions as sessionActions } from './reducer';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerSession = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const logout = useCallback(() => {\r\n    return dispatch(sessionActions.fetchLogout());\r\n  }, [dispatch]);\r\n\r\n  const fetchMe = useCallback(() => dispatch(sessionActions.fetchMe()), [dispatch]);\r\n\r\n  const fetchLoginUser = useCallback((params: IApiParamsAuthLogin) => {\r\n    return dispatch(sessionActions.fetchLoginUser(params));\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    logout,\r\n    fetchMe,\r\n    fetchLoginUser,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { Toolbar, Button, Typography } from '@material-ui/core';\r\n\r\nimport * as sessionSelectors from 'src/containers/Session/selectors';\r\n\r\nimport * as S from './styled';\r\nimport { useContainerSession } from 'src/containers/Session/hooks';\r\n\r\nconst TopBar: React.FC = () => {\r\n  const user = useSelector(sessionSelectors.account);\r\n  const { logout } = useHooks();\r\n\r\n  const isLogoutAvail = user !== undefined;\r\n\r\n  return (\r\n    <AppBar position={'static'}>\r\n      <Toolbar>\r\n        <Typography variant={'h4'} color=\"inherit\">\r\n          Orkeystore\r\n        </Typography>\r\n        <S.Grow />\r\n        {isLogoutAvail && (\r\n          <Button color=\"inherit\" onClick={logout}>\r\n            Logout\r\n          </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { logout } = useContainerSession();\r\n\r\n  return {\r\n    logout,\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const BarHolder = styled.div`\r\n`\r\nexport const FormHolder = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n","import styled from 'styled-components';\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\nimport theme from 'src/theme';\r\n\r\nexport const Root = styled(Paper)<{ test?: string }>`\r\n  padding: 10px;\r\n  flex-grow: 1;\r\n  background-color: ${theme.palette.error.light};\r\n  color: ${theme.palette.error.contrastText};\r\n`;\r\n\r\nexport const Message = styled(Typography)`\r\n  padding-left: 15px;\r\n  padding-top: 2px;\r\n`;\r\n\r\nexport const TextWrap = styled(Box)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n`;\r\n","import React from 'react';\r\nimport ErrorOutlineRoundedIcon from '@material-ui/icons/ErrorOutlineRounded';\r\nimport { PaperProps } from '@material-ui/core/Paper';\r\nimport * as S from './styles';\r\n\r\nexport interface IPropsMessage {\r\n  elevation?: number;\r\n  severnity?: string;\r\n  root?: PaperProps;\r\n}\r\n\r\nconst Message: React.FC<IPropsMessage> = (props) => {\r\n  return (\r\n    <S.Root elevation={props.elevation} {...props.root}>\r\n      <S.TextWrap>\r\n        <ErrorOutlineRoundedIcon color=\"inherit\" />\r\n        <S.Message color=\"inherit\">\r\n          { props.children }\r\n        </S.Message>\r\n      </S.TextWrap>\r\n    </S.Root>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  elevation: 0,\r\n  severnity: 'error'\r\n}\r\n\r\nexport default Message;\r\n","import styled from 'styled-components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport const Container = styled.div`\r\n  width: 300px;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Body = styled.div``;\r\n\r\nexport const BodyLine = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const LineItem = styled.div`\r\n  flex-grow: 1;\r\n  margin-bottom: 10px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled(Button)`\r\n  width: 100%;\r\n`;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Formik, Form, Field, FieldProps, FormikErrors, FormikProps } from 'formik';\r\n\r\nimport Message from 'src/components/Message';\r\nimport { errors as userServerErrors } from 'src/containers/Session/selectors';\r\n\r\nimport * as S from './styled';\r\nimport { TextField, CardContent, Card, Typography, CardHeader } from '@material-ui/core';\r\nimport { useContainerSession } from 'src/containers/Session/hooks';\r\n\r\nexport interface IUserLoginData {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst initialValues = { username: '', password: '' };\r\n\r\nconst LoginForm: React.FC = () => {\r\n  const serverErrors = useSelector(userServerErrors);\r\n  const { handleSubmit, validate } = useHooks();\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title={<Typography variant=\"h3\">Sign in</Typography>} />\r\n      <CardContent>\r\n        <S.Container>\r\n          <S.Body>\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validate={validate}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {(_props: FormikProps<IUserLoginData>) => {\r\n                return (\r\n                  <Form>\r\n                    <S.BodyLine>\r\n                      <Field name=\"username\">\r\n                        {(params: FieldProps<string>) => {\r\n                          const { field, meta } = params;\r\n                          return (\r\n                            <TextField\r\n                              error={Boolean(meta.touched && meta.error)}\r\n                              label=\"Login\"\r\n                              variant=\"outlined\"\r\n                              autoComplete=\"current-login\"\r\n                              {...field}\r\n                            />\r\n                          );\r\n                        }}\r\n                      </Field>\r\n                    </S.BodyLine>\r\n                    <S.BodyLine>\r\n                      <Field name=\"password\">\r\n                        {(params: FieldProps<string>) => {\r\n                          const { field, meta } = params;\r\n                          return (\r\n                            <TextField\r\n                              label=\"Password\"\r\n                              variant=\"outlined\"\r\n                              type=\"password\"\r\n                              autoComplete=\"current-password\"\r\n                              error={Boolean(meta.touched && meta.error)}\r\n                              {...field}\r\n                            />\r\n                          );\r\n                        }}\r\n                      </Field>\r\n                    </S.BodyLine>\r\n                    {serverErrors.loginForm && (\r\n                      <S.BodyLine>\r\n                        <Message>{serverErrors.loginForm}</Message>\r\n                      </S.BodyLine>\r\n                    )}\r\n                    <S.BodyLine>\r\n                      <S.LineItem>\r\n                        <S.SubmitButton\r\n                          color=\"secondary\"\r\n                          size=\"large\"\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                        >\r\n                          Войти\r\n                        </S.SubmitButton>\r\n                      </S.LineItem>\r\n                    </S.BodyLine>\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          </S.Body>\r\n        </S.Container>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchLoginUser } = useContainerSession();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (values: IUserLoginData) => {\r\n      await fetchLoginUser(values);\r\n    },\r\n    [fetchLoginUser],\r\n  );\r\n\r\n  const validate = useCallback((values: IUserLoginData) => {\r\n    const { username, password } = values;\r\n    const errors: FormikErrors<typeof values> = {};\r\n\r\n    if (!username || username.length === 0) {\r\n      errors.username = 'Username required';\r\n    }\r\n\r\n    if (!password || password.length === 0) {\r\n      errors.password = 'Password required';\r\n    }\r\n\r\n    return errors;\r\n  }, []);\r\n\r\n\r\n  return {\r\n    validate,\r\n    handleSubmit,\r\n  };\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport TopBar from 'src/components/TopBar';\r\n\r\nimport * as S from './styled';\r\nimport LoginForm from 'src/components/LoginForm';\r\n\r\nexport interface IPropsAuthLayout {}\r\n\r\nconst AuthLayout: React.FC = () => {\r\n  return (\r\n    <S.Wrap>\r\n      <S.BarHolder>\r\n        <TopBar />\r\n      </S.BarHolder>\r\n      <S.FormHolder>\r\n        <LoginForm />\r\n      </S.FormHolder>\r\n    </S.Wrap>\r\n  );\r\n};\r\n\r\nexport default AuthLayout;\r\n","import React from 'react';\r\nimport { Dialog } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { isSessionExpired } from 'src/containers/Session/selectors';\r\nimport LoginForm from 'src/components/LoginForm';\r\n\r\nconst ExpiredSession: React.FC = () => {\r\n  const isExpired = useSelector(isSessionExpired)\r\n\r\n  return (\r\n    <Dialog open={isExpired}>\r\n      <LoginForm />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExpiredSession;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { List, ListItem, ListItemText, ListItemIcon, makeStyles } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nimport { mainMenuLinks } from 'src/containers/Session/selectors';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  iconWrap: {\r\n    maxWidth: 40,\r\n    minWidth: 40,\r\n  },\r\n}));\r\n\r\nconst MainMenu: React.FC = () => {\r\n  const history = useHistory();\r\n  const mainMenu = useSelector(mainMenuLinks);\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <List component=\"nav\">\r\n      {mainMenu.map((item) => {\r\n        return (\r\n          <ListItem key={item.id} button onClick={() => history.push(item.path)}>\r\n            <ListItemIcon className={styles.iconWrap}>\r\n              <Icon>{item.icon}</Icon>\r\n            </ListItemIcon>\r\n            <ListItemText>{item.title}</ListItemText>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default MainMenu;\r\n","import styled from 'styled-components';\r\nimport theme from 'src/theme';\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1 1 auto;\r\n`;\r\nexport const Header = styled.div``;\r\nexport const Body = styled.div`\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  min-width: 0;\r\n`;\r\nexport const Menu = styled.div`\r\n  flex: 0 0 250px;\r\n  background-color: ${theme.palette.background.paper};\r\n`;\r\n\r\nexport const Main = styled.main`\r\n  display: flex;\r\n  background-color: ${theme.palette.background.default};\r\n  flex: 1 1 auto;\r\n  min-width: 0;\r\n`;\r\n","import React from 'react';\r\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\r\n\r\nimport TopBar from 'src/components/TopBar';\r\nimport ExpiredSession from 'src/components/ExpiredSession';\r\nimport MainMenu from 'src/components/MainMenu';\r\n\r\nimport * as S from './styled';\r\n\r\nexport interface IPropsDashboardLayout extends RouteConfigComponentProps {\r\n}\r\n\r\nconst DashboardLayout: React.FC<IPropsDashboardLayout> = (props) => {\r\n  const { route } = props;\r\n  return (\r\n    <S.Wrap>\r\n      <ExpiredSession />\r\n      <S.Header>\r\n        <TopBar />\r\n      </S.Header>\r\n      <S.Body>\r\n        <S.Menu>\r\n          <MainMenu />\r\n        </S.Menu>\r\n        <S.Main>\r\n          {route && route.routes && renderRoutes(route.routes)}\r\n        </S.Main>\r\n      </S.Body>\r\n    </S.Wrap>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","export const generatePassword = (\r\n  length: number,\r\n  charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789',\r\n): string => {\r\n  let retVal = '';\r\n  for (let i = 0, n = charset.length; i < length; ++i) {\r\n    retVal += charset.charAt(Math.floor(Math.random() * n));\r\n  }\r\n  return retVal;\r\n};\r\n","import { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useAppDispatch } from 'src/store';\r\nimport { actions as keysActions } from './reducer';\r\nimport * as keysSelectors from './selectors';\r\nimport { IApiParamsKeysCreate, IApiParamsKeysRemove } from 'src/lib/api/keys/types';\r\nimport { SerializedError } from '@reduxjs/toolkit';\r\nimport { generatePassword } from 'src/lib/utils/generatePassword';\r\nimport { IApiParamsKeysArchive } from 'src/lib/api/keys/archive';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { IApiParamsKeysList } from 'src/lib/api/keys/list';\r\nimport api from 'src/lib/api';\r\nimport { IApiParamsKeysByIds } from 'src/lib/api/keys/byIds';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerKeys = () => {\r\n  const dispatch = useAppDispatch();\r\n  const pager = useSelector(keysSelectors.keysPagerSelector);\r\n  const search = useSelector(keysSelectors.keysSearchSelector);\r\n\r\n  const fetchKeysList = useCallback((params: IApiParamsKeysList) => {\r\n    return dispatch(keysActions.fetchKeysList(params));\r\n  }, [dispatch]);\r\n\r\n  const fetchKeysListWatch = useCallback(() => {\r\n    const params = {\r\n      page: pager.page,\r\n      perPage: pager.perPage,\r\n      search,\r\n    }\r\n    return fetchKeysList(params);\r\n  }, [fetchKeysList, pager.page, pager.perPage, search]);\r\n\r\n  const fetchArchiveListWatch = useCallback(() => {\r\n    const params = {\r\n      page: pager.page,\r\n      perPage: pager.perPage,\r\n      search,\r\n      isArchived: true\r\n    }\r\n    return fetchKeysList(params);\r\n  }, [fetchKeysList, pager.page, pager.perPage, search]);\r\n\r\n  const fetchCreateKey = useCallback(\r\n    async (params: Omit<IApiParamsKeysCreate, 'accessToken'>) => {\r\n      const accessToken = generatePassword(64);\r\n      const result = await dispatch(\r\n        keysActions.fetchCreateKey({\r\n          ...params,\r\n          accessToken,\r\n        }),\r\n      );\r\n\r\n      const { error } = result as { error: SerializedError };\r\n\r\n      if (error) {\r\n        return { error } as { error: SerializedError };\r\n      }\r\n\r\n      return result;\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchRemoveKeyItem = useCallback(\r\n    async (params: IApiParamsKeysRemove) => {\r\n      return await dispatch(keysActions.fetchRemoveKeyItem(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchArchiveKeyItem = useCallback(\r\n    (params: IApiParamsKeysArchive) => {\r\n      return dispatch(keysActions.fetchArchiveKeyItem(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchRestoreKeyItem = useCallback(\r\n    (params: IApiParamsKeysArchive) => {\r\n      return dispatch(keysActions.fetchRestoreKeyItem(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const changePager = useCallback(\r\n    (params: Partial<IApiPager>) => {\r\n      return dispatch(keysActions.changePager(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const changeSearch = useCallback(\r\n    (params: Partial<{ search?: string }>) => {\r\n      return dispatch(keysActions.changeSearch(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const requestKeysList = useCallback(async (params?: IApiParamsKeysList) => {\r\n    return api.keys.list(params);\r\n  }, []);\r\n\r\n  const requestKeysByIds = useCallback(async (params: IApiParamsKeysByIds) => {\r\n    return await api.keys.byIds(params);\r\n  }, [])\r\n\r\n  const resetList = useCallback(() => {\r\n    return dispatch(keysActions.reset());\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    resetList,\r\n    changePager,\r\n    changeSearch,\r\n    fetchKeysList,\r\n    fetchKeysListWatch,\r\n    fetchArchiveListWatch,\r\n    fetchCreateKey,\r\n    fetchRemoveKeyItem,\r\n    fetchRestoreKeyItem,\r\n    fetchArchiveKeyItem,\r\n    requestKeysList,\r\n    requestKeysByIds,\r\n  };\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport { makeStyles, Menu, MenuItem, MenuProps, Typography } from '@material-ui/core';\r\n\r\nexport interface IMenuItem {\r\n  id: string;\r\n  label: string;\r\n}\r\n\r\nexport interface IPropsPopMenu {\r\n  anchorEl: MenuProps['anchorEl'];\r\n  handleClose: () => void;\r\n  menu: IMenuItem[];\r\n  onSelectMenuItem?: <T extends IMenuItem>(x: T) => void;\r\n}\r\n\r\nconst PopMenu: React.FC<IPropsPopMenu> = (props) => {\r\n  const { menuStaticProps, styles } = useHooks();\r\n\r\n  return (\r\n    <Menu\r\n      {...menuStaticProps}\r\n      keepMounted\r\n      anchorEl={props.anchorEl}\r\n      className={styles.menu}\r\n      open={Boolean(props.anchorEl)}\r\n      onClose={props.handleClose}\r\n    >\r\n      {props.menu.map((item) => {\r\n        return (\r\n          <MenuItem\r\n            key={item.id}\r\n            onClick={() => {\r\n              if (props.onSelectMenuItem) {\r\n                props.onSelectMenuItem(item);\r\n              }\r\n              props.handleClose();\r\n            }}\r\n          >\r\n            <Typography variant={'button'}>{item.label}</Typography>\r\n          </MenuItem>\r\n        );\r\n      })}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const styles = useStyles();\r\n\r\n  const menuStaticProps = useMemo((): Partial<MenuProps> => {\r\n    return {\r\n      anchorOrigin: { horizontal: 'right', vertical: 'top' },\r\n      transformOrigin: { horizontal: 'right', vertical: 'top' },\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    styles,\r\n    menuStaticProps,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  menu: {\r\n    width: 150,\r\n  },\r\n}));\r\n\r\nexport default PopMenu;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  InputAdornment,\r\n  InputProps,\r\n  TextField,\r\n  TextFieldProps,\r\n} from '@material-ui/core';\r\nimport PopMenu from '../PopMenu';\r\n\r\nexport interface IMenuItem {\r\n  id: string;\r\n  label: string;\r\n}\r\n\r\nexport interface IPropsTextFieldWithOptions {\r\n  menu?: IMenuItem[];\r\n  currentMenuLabel?: React.ReactNode;\r\n  fieldProps?: TextFieldProps;\r\n  inputProps?: InputProps;\r\n  onSelectMenuItem?: <T extends IMenuItem>(i: T) => void;\r\n  disabled?: boolean;\r\n  beforeOptions?: React.ReactNode;\r\n  afterOptions?: React.ReactNode;\r\n}\r\n\r\nconst TextFieldWithOptions: React.FC<IPropsTextFieldWithOptions> = (props) => {\r\n  const { menu, currentMenuLabel, fieldProps, inputProps, disabled } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleOpenUnitMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUnitMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        fullWidth\r\n        {...fieldProps}\r\n        variant=\"outlined\"\r\n        disabled={disabled}\r\n        InputProps={{\r\n          endAdornment: currentMenuLabel ? (\r\n            <InputAdornment position=\"end\">\r\n              {props.beforeOptions}\r\n              <Button size={'small'} disabled={disabled} onClick={handleOpenUnitMenu}>\r\n                {currentMenuLabel}\r\n              </Button>\r\n              {props.afterOptions}\r\n            </InputAdornment>\r\n          ) : null,\r\n          ...inputProps,\r\n        }}\r\n      />\r\n      {menu && (\r\n        <PopMenu\r\n          anchorEl={anchorEl}\r\n          menu={menu}\r\n          onSelectMenuItem={props.onSelectMenuItem}\r\n          handleClose={handleCloseUnitMenu}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextFieldWithOptions;\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n  CircularProgress,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport Inputmask from 'inputmask';\r\nimport { Formik, Form, Field, FieldProps, FormikProps, FormikErrors, FormikHelpers } from 'formik';\r\nimport { SerializedError } from '@reduxjs/toolkit';\r\n\r\nimport Message from 'src/components/Message';\r\nimport TextFieldWithOptions from 'src/components/TextFieldWithOptions';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\n\r\nconst unitOptions = {\r\n  h: 'hours',\r\n  d: 'days',\r\n  w: 'weeks',\r\n  m: 'months',\r\n};\r\n\r\nexport interface IKeyEntryFormValues {\r\n  name: string;\r\n  code: string;\r\n  rotation: string;\r\n  rotatable: string;\r\n  server?: string;\r\n  unit: keyof typeof unitOptions;\r\n}\r\n\r\nexport interface IPropsKeyEntryForm {\r\n  onSubmit?: () => void;\r\n}\r\n\r\nconst defaultInitialValues: IKeyEntryFormValues = {\r\n  name: '',\r\n  code: '',\r\n  rotation: '',\r\n  unit: 'd',\r\n  rotatable: '1',\r\n};\r\n\r\nconst KeyEntryForm: React.FC<IPropsKeyEntryForm> = (props) => {\r\n  const styles = useStyles();\r\n  const { menuItems, validate, handleSubmit } = useHooks(props);\r\n\r\n  return (\r\n    <Card style={{ width: 400 }}>\r\n      <CardHeader title={<Typography variant=\"h3\">Add new key entry</Typography>} />\r\n      <CardContent>\r\n        <Formik initialValues={defaultInitialValues} validate={validate} onSubmit={handleSubmit}>\r\n          {(formikProps: FormikProps<IKeyEntryFormValues>) => {\r\n            const loading = formikProps.isSubmitting;\r\n            return (\r\n              <Form>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"name\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        return (\r\n                          <TextField\r\n                            className={styles.textfield}\r\n                            error={Boolean(meta.touched && meta.error)}\r\n                            label=\"Choose name\"\r\n                            variant=\"outlined\"\r\n                            {...field}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"code\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        return (\r\n                          <TextField\r\n                            className={styles.textfield}\r\n                            error={Boolean(meta.touched && meta.error)}\r\n                            label=\"Unique code\"\r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                              inputRef: (el) => {\r\n                                if (el) {\r\n                                  codeMask.mask(el);\r\n                                }\r\n                              },\r\n                            }}\r\n                            {...field}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"rotation\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        const isEnabled = formikProps.values.rotatable === '1';\r\n                        return (\r\n                          <TextFieldWithOptions\r\n                            menu={menuItems}\r\n                            onSelectMenuItem={(item) => {\r\n                              if (typeof item.id === 'string') {\r\n                                formikProps.setFieldValue('unit', item.id);\r\n                              }\r\n                            }}\r\n                            disabled={!isEnabled}\r\n                            currentMenuLabel={unitOptions[formikProps.values.unit]}\r\n                            inputProps={{\r\n                              inputRef: (el) => {\r\n                                if (el) {\r\n                                  digitMask.mask(el);\r\n                                }\r\n                              },\r\n                            }}\r\n                            fieldProps={{\r\n                              error: Boolean(meta.touched && meta.error),\r\n                              label: `Rotation interval`,\r\n                              ...field,\r\n                            }}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"rotatable\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field } = params;\r\n                        return (\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                checked={field.value === '1'}\r\n                                onChange={(_, checked) => {\r\n                                  formikProps.setFieldValue('rotatable', checked ? '1' : '0');\r\n                                }}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label=\"Enable rotation\"\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n\r\n                  {formikProps.errors.server && (\r\n                    <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                      <Message root={{ style: { flexGrow: 1 } }}>\r\n                        {formikProps.errors.server}\r\n                      </Message>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                    <Button\r\n                      disabled={loading}\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      variant={'contained'}\r\n                      color=\"secondary\"\r\n                      disableElevation\r\n                      fullWidth\r\n                    >\r\n                      {!loading && 'Submit'}\r\n                      {loading && <CircularProgress className={styles.progress} size={26} />}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsKeyEntryForm) => {\r\n  const { fetchCreateKey } = useContainerKeys();\r\n\r\n  const menuItems = useMemo(() => {\r\n    const options = Object.keys(unitOptions) as Array<keyof typeof unitOptions>;\r\n    return options.map((unit) => {\r\n      return {\r\n        id: unit,\r\n        label: unitOptions[unit],\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const { onSubmit } = props;\r\n\r\n  const handleSubmit = useCallback(async (\r\n    values: IKeyEntryFormValues,\r\n    formikHelpers: FormikHelpers<IKeyEntryFormValues>,\r\n  ) => {\r\n    const result = await fetchCreateKey({\r\n      name: values.name,\r\n      code: values.code,\r\n      rotation: values.rotatable === '1' ? `${values.rotation} ${values.unit}` : undefined,\r\n    });\r\n\r\n    const errorResult = (result as { error: SerializedError });\r\n    if (errorResult.error) {\r\n      formikHelpers.setErrors({ server: errorResult.error.message });\r\n    } else if (onSubmit) {\r\n      onSubmit();\r\n    }\r\n  }, [onSubmit, fetchCreateKey]);\r\n\r\n  const validate = useCallback((values: IKeyEntryFormValues) => {\r\n    const errors: FormikErrors<typeof values> = {};\r\n\r\n    if (!values.name || values.name.length === 0) {\r\n      errors.name = 'Name required!';\r\n    }\r\n\r\n    if (!values.code || values.code.length === 0) {\r\n      errors.code = 'Code required!';\r\n    }\r\n\r\n    if (values.rotatable === '1') {\r\n      if (!values.rotation && values.rotation.length === 0) {\r\n        errors.rotation = 'Rotation interval required!';\r\n      } else if (isNaN(parseInt(values.rotation))) {\r\n        errors.rotation = 'Rotation interval should be number!';\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  }, []);\r\n\r\n  return {\r\n    menuItems,\r\n    handleSubmit,\r\n    fetchCreateKey,\r\n    validate,\r\n  }\r\n};\r\n\r\nconst digitMask = Inputmask({ regex: String.raw`[\\d,.]*` });\r\nconst codeMask = Inputmask({ regex: String.raw`[\\w]*` });\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textfield: {\r\n    width: '100%',\r\n  },\r\n  progress: {\r\n    marginLeft: 20,\r\n  },\r\n  menu: {\r\n    width: 150,\r\n    marginLeft: 10,\r\n  },\r\n}));\r\n\r\nexport default KeyEntryForm;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { IconButton, Snackbar, Typography } from '@material-ui/core';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nexport interface IPropsCopyBtn {\r\n  inputRef: React.RefObject<HTMLInputElement | HTMLTextAreaElement>;\r\n  message: string;\r\n}\r\n\r\nconst CopyBtn: React.FC<IPropsCopyBtn> = (props) => {\r\n  const { isCopied, handleCopy, handleCloseSnack } = useHooks(props);\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}\r\n        open={isCopied}\r\n        autoHideDuration={1000}\r\n        onClose={handleCloseSnack}\r\n      >\r\n        <Alert onClose={handleCloseSnack} severity=\"success\">\r\n          <Typography variant=\"h6\" component={'div'}>\r\n            {props.message}\r\n          </Typography>\r\n        </Alert>\r\n      </Snackbar>\r\n      <IconButton onClick={handleCopy}>\r\n        <FileCopyIcon fontSize={'small'} />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsCopyBtn) => {\r\n  const [isCopied, setCopied] = useState(false);\r\n\r\n  const handleCopy = useCallback(() => {\r\n    const input = props.inputRef.current;\r\n\r\n    if (input) {\r\n      input.select();\r\n      document.execCommand('copy');\r\n      setCopied(true);\r\n    }\r\n  }, [props.inputRef]);\r\n\r\n  const handleCloseSnack = useCallback(() => {\r\n    setCopied(false);\r\n  }, []);\r\n\r\n  return {\r\n    isCopied,\r\n    setCopied,\r\n    handleCopy,\r\n    handleCloseSnack,\r\n  };\r\n};\r\n\r\nexport default CopyBtn;\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport CopyBtn from 'src/components/CopyBtn';\r\n\r\nexport interface ILinkItem {\r\n  code: string;\r\n  url: string;\r\n  label: string;\r\n  isPrivate?: boolean;\r\n}\r\n\r\nexport interface IPropsUrlsList {\r\n  items: ILinkItem[];\r\n}\r\n\r\n\r\nconst UrlsList: React.FC<IPropsUrlsList> = (props) => {\r\n  const styles = useStyles();\r\n  const { inputRefs, handleFocus } = useHooks(props);\r\n\r\n  return (\r\n    <List className={styles.list}>\r\n      {props.items.map((item, i) => {\r\n        return (\r\n          <ListItem className={styles.item} key={item.code}>\r\n            <TextField\r\n              value={item.url}\r\n              label={item.label}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              onFocus={handleFocus}\r\n              InputProps={{\r\n                inputRef: inputRefs[i],\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <CopyBtn inputRef={inputRefs[i]} message={`URL has been copied!`}/>\r\n                    {!item.isPrivate && (\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          window.open(item.url, '_blank');\r\n                        }}\r\n                      >\r\n                        <OpenInNewIcon fontSize={'small'} />\r\n                      </IconButton>\r\n                    )}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsUrlsList) => {\r\n  const handleFocus: React.FocusEventHandler<HTMLInputElement> = useCallback(\r\n    (event) => {\r\n      event.target.select();\r\n    },\r\n    [],\r\n  );\r\n\r\n  const inputRefs = useMemo(() => props.items.map(() => React.createRef<HTMLInputElement>()), [props.items]);\r\n\r\n  return {\r\n    inputRefs,\r\n    handleFocus,\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  list: {\r\n    padding: 0,\r\n    paddingBottom: 10,\r\n    width: '100%',\r\n  },\r\n  item: {\r\n    padding: 0,\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n  },\r\n}));\r\n\r\n\r\nexport default UrlsList;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogActions, Button, DialogTitle, Typography } from '@material-ui/core';\r\n\r\nexport interface IPropsApproveModal {\r\n  title?: React.ReactNode;\r\n  content?: React.ReactNode;\r\n  onSubmit?: () => void;\r\n}\r\n\r\nexport const ApproveModal: React.FC<IPropsApproveModal> = (props) => {\r\n  const [isOpen, toggleDialog] = useState(false);\r\n  const { onSubmit } = props;\r\n  const handleSubmit = () => {\r\n    if (onSubmit) {\r\n      onSubmit();\r\n    }\r\n    toggleDialog(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={isOpen} onClose={() => toggleDialog(false)}>\r\n        { props.title &&\r\n          <DialogTitle>\r\n            <Typography variant={'h4'} component={'div'}>{ props.title }</Typography>\r\n          </DialogTitle>\r\n        }\r\n        { props.content &&\r\n          <DialogContent>{ props.content }</DialogContent>\r\n        }\r\n        <DialogActions>\r\n          <Button onClick={() => toggleDialog(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\" autoFocus>\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div onClick={() => toggleDialog(true)}>{props.children}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApproveModal;\r\n","import React from 'react';\r\nimport { Theme, Tooltip, TooltipProps } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst HtmlTooltip = withStyles((theme: Theme) => ({\r\n  tooltip: {\r\n    backgroundColor: 'white',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 280,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n    padding: 20,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst MessageTooltip: React.FC<TooltipProps> = (props) => {\r\n  return (\r\n    <HtmlTooltip\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MessageTooltip;\r\n","import React from 'react';\r\nimport { colors, makeStyles } from '@material-ui/core';\r\n\r\nexport interface IPropsCodeFormat {\r\n  height?: number;\r\n}\r\n\r\nconst CodeFormat: React.FC<IPropsCodeFormat> = (props) => {\r\n  const styles = useStyles(props)();\r\n  return (\r\n      <pre className={styles.pre}><code className={styles.code}>{props.children}</code></pre>\r\n  );\r\n};\r\n\r\nconst useStyles = (props: IPropsCodeFormat) => makeStyles(() => {\r\n  return {\r\n    root: {\r\n      padding: '5px 0',\r\n    },\r\n    pre: {\r\n      display: 'block',\r\n      overflowX: 'auto',\r\n      height: () => props.height !== undefined ? props.height : 'auto',\r\n      whiteSpace: 'pre',\r\n      padding: '15px 20px',\r\n      background: colors.grey[100],\r\n    },\r\n    code: {\r\n      background: 'none',\r\n    }\r\n  }\r\n})\r\n\r\nexport default CodeFormat;\r\n","import { useCallback } from 'react';\r\nimport { IApiParamsKeysPreview } from 'src/lib/api/keys/preview';\r\nimport { useAppDispatch } from 'src/store';\r\n\r\nimport { actions as keyPreviewActions } from './reducer';\r\nimport { IStoreKeyPreview } from './types';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerPreviewKey = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const toggleModal = useCallback(\r\n    (isOpen?: boolean) => {\r\n      dispatch(keyPreviewActions.toggleModal({ isOpen }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchKeyPreview = useCallback(\r\n    (params: IApiParamsKeysPreview) => {\r\n      return dispatch(keyPreviewActions.fetchKeyPreview(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const setPreviewParams = useCallback((params: IStoreKeyPreview['params']) => {\r\n    dispatch(keyPreviewActions.setParams(params));\r\n  }, [dispatch])\r\n\r\n  const openKeyPreview = useCallback(\r\n    async (apiParams: IApiParamsKeysPreview, previewParams?: IStoreKeyPreview['params']) => {\r\n      toggleModal(true);\r\n      previewParams && setPreviewParams(previewParams);\r\n      await fetchKeyPreview(apiParams);\r\n    },\r\n    [fetchKeyPreview, toggleModal, setPreviewParams],\r\n  );\r\n\r\n  return { toggleModal, fetchKeyPreview, openKeyPreview, setPreviewParams };\r\n};\r\n","import {\r\n  Grid,\r\n  InputAdornment,\r\n  InputProps,\r\n  Link,\r\n  TextField,\r\n  TextFieldProps,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useMemo, useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport CodeFormat from 'src/components/CodeFormat';\r\nimport TextFieldWithOptions from 'src/components/TextFieldWithOptions';\r\nimport { hostSelector } from 'src/containers/Session/selectors';\r\nimport CopyBtn from 'src/components/CopyBtn';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useContainerPreviewKey } from 'src/containers/KeyPreview/hooks';\r\n\r\nexport interface IPrivateKeyItem {\r\n  accessCode: string;\r\n  code: string;\r\n  id: number;\r\n}\r\n\r\nexport interface IPropsPrivateUrls {\r\n  item: IPrivateKeyItem;\r\n}\r\n\r\nexport interface IKeyFormat {\r\n  id: 'jwk' | 'pem' | 'jwks';\r\n  label: string;\r\n}\r\n\r\nexport const KEY_FORMATS: IKeyFormat[] = [\r\n  { id: 'jwk', label: 'JWK' },\r\n  { id: 'jwks', label: 'JWKs' },\r\n  { id: 'pem', label: 'PEM' },\r\n];\r\n\r\nconst PrivateUrls: React.FC<IPropsPrivateUrls> = (props) => {\r\n  const {\r\n    fieldProps,\r\n    inputProps,\r\n    format,\r\n    targetUrl,\r\n    urlRef,\r\n    accessRef,\r\n    handleSetFormat,\r\n    handleOpenPreviewModal,\r\n    handleFocus,\r\n  } = useHooks(props);\r\n  const styles = useStyles();\r\n\r\n  const { item } = props;\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Access key\"\r\n          variant=\"outlined\"\r\n          value={item.accessCode}\r\n          onFocus={handleFocus}\r\n          InputProps={{\r\n            inputRef: accessRef,\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <CopyBtn inputRef={accessRef} message={`URL has been copied!`} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextFieldWithOptions\r\n          menu={KEY_FORMATS}\r\n          currentMenuLabel={format.label}\r\n          onSelectMenuItem={handleSetFormat}\r\n          fieldProps={fieldProps}\r\n          inputProps={inputProps}\r\n          afterOptions={<CopyBtn inputRef={urlRef} message={`URL has been copied!`} />}\r\n        />\r\n      </Grid>\r\n      {item.accessCode && (\r\n        <Grid item xs={12}>\r\n          <div className={styles.exampleMessage}>\r\n            <Typography>Key can be fetched via POST with access code.</Typography>\r\n            <Link onClick={handleOpenPreviewModal}>Preview</Link>\r\n          </div>\r\n          <CodeFormat>\r\n            {`curl -d '{ \"key\":\"${item.accessCode}\" }' -H \"Content-Type: application/json\" -X POST ${targetUrl}`}\r\n          </CodeFormat>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsPrivateUrls) => {\r\n  const [formatId, setFormat] = useState<'jwk' | 'jwks' | 'pem'>(KEY_FORMATS[0].id);\r\n  const { openKeyPreview } = useContainerPreviewKey();\r\n\r\n  const format = useMemo(() => {\r\n    return KEY_FORMATS.find((i) => i.id === formatId) || KEY_FORMATS[0];\r\n  }, [formatId]);\r\n\r\n  const keysHost = useSelector(hostSelector);\r\n\r\n  const urlRef = useRef<HTMLInputElement>(null);\r\n  const accessRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleFocus: React.FocusEventHandler<HTMLInputElement> = useCallback((event) => {\r\n    event.target.select();\r\n  }, []);\r\n\r\n  const fieldProps: TextFieldProps = useMemo(() => {\r\n    return {\r\n      label: 'Target URL',\r\n      onFocus: handleFocus,\r\n    };\r\n  }, [handleFocus]);\r\n\r\n  const targetUrl = useMemo(() => {\r\n    return `${keysHost}/key/private/${format.id}/${props.item.code}`;\r\n  }, [keysHost, format.id, props.item.code]);\r\n\r\n  const inputProps: InputProps = useMemo(() => {\r\n    return {\r\n      value: targetUrl,\r\n      inputRef: urlRef,\r\n    };\r\n  }, [targetUrl]);\r\n\r\n  const handleSetFormat = useCallback(\r\n    (i: { id: string | number }) => {\r\n      if (typeof i.id === 'string' && ['jwk', 'jwks', 'pem'].includes(i.id)) {\r\n        setFormat(i.id as 'jwk' | 'jwks' | 'pem');\r\n      }\r\n    },\r\n    [setFormat],\r\n  );\r\n\r\n  const handleOpenPreviewModal = useCallback(() => {\r\n    return openKeyPreview(\r\n      { id: props.item.id, isByEntry: true },\r\n      { privacy: 'private', format: formatId },\r\n    );\r\n  }, [openKeyPreview, props.item.id, formatId]);\r\n\r\n  return {\r\n    keysHost,\r\n    inputProps,\r\n    formatId,\r\n    fieldProps,\r\n    format,\r\n    targetUrl,\r\n    urlRef,\r\n    accessRef,\r\n    setFormat,\r\n    handleFocus,\r\n    handleSetFormat,\r\n    handleOpenPreviewModal,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    exampleMessage: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n    },\r\n  };\r\n});\r\n\r\nexport default PrivateUrls;\r\n","import React, { useCallback } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Divider,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  CardActions,\r\n  Button,\r\n  makeStyles,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\nimport UrlsList from 'src/components/UrlsList';\r\nimport ApproveModal from 'src/components/ApproveModal';\r\nimport { hostSelector } from 'src/containers/Session/selectors';\r\nimport MessageTooltip from 'src/components/MessageTooltip';\r\nimport PrivateUrls from '../PrivateUrls';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\nimport { useMemo } from 'react';\r\n\r\nexport interface IKeyItemData {\r\n  id: number;\r\n  name: string;\r\n  code: string;\r\n  accessCode: string;\r\n  rotateInterval: number | null;\r\n  archivedAt: number | null;\r\n}\r\n\r\nexport interface IKeyItemProps {\r\n  data?: IKeyItemData;\r\n}\r\n\r\nconst KeyItem: React.FC<IKeyItemProps> = (props) => {\r\n  const styles = useStyles();\r\n  const { deleteItem, archiveItem, restoreItem, rotation, publicUrls } = useHooks(props);\r\n  const { data } = props;\r\n\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={2} justify={'space-between'}>\r\n          <Grid item>\r\n            <Typography variant={'caption'}>Name</Typography>\r\n            <Typography variant={'h5'}>{data.name}</Typography>\r\n          </Grid>\r\n          <Grid item className={styles.codeHolder}>\r\n            <Typography variant={'caption'}>Unique code</Typography>\r\n            <Typography variant={'h5'}>{data.code}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider className={styles.divider} />\r\n        <Typography variant={'caption'}>\r\n          {!data.rotateInterval ? 'Non rotatable key' : rotation}\r\n        </Typography>\r\n        <Divider className={styles.divider} />\r\n        <Accordion>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant={'h6'}>Public key</Typography>\r\n            <MessageTooltip\r\n              placement=\"top-start\"\r\n              title={\r\n                <Typography gutterBottom variant={'body1'} color={'textPrimary'}>\r\n                  {`Anyone can get public key by GET request in formats listed below. Rotatable response contain \"expires\" header.`}\r\n                </Typography>\r\n              }\r\n            >\r\n              <HelpIcon className={styles.tooltip} color={'primary'} fontSize={'small'} />\r\n            </MessageTooltip>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div style={{ flexGrow: 1 }}>\r\n              <UrlsList items={publicUrls} />\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        <Accordion>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography variant={'h6'}>Private key</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div className={styles.privateWrap}>\r\n              <PrivateUrls item={data} />\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </CardContent>\r\n      <CardActions className={styles.actions}>\r\n        {data.archivedAt !== null && (\r\n          <>\r\n            <ApproveModal\r\n              title={'Are you sure want to delete key?'}\r\n              content={'Every associated keys will be unavailable'}\r\n              onSubmit={() => deleteItem(data.id)}\r\n            >\r\n              <Button size=\"small\">Delete</Button>\r\n            </ApproveModal>\r\n            <Button size=\"small\" onClick={() => restoreItem(data.id)}>\r\n              Restore\r\n            </Button>\r\n          </>\r\n        )}\r\n        {data.archivedAt === null && (\r\n          <ApproveModal\r\n            title={'Are you sure want to archive entry in storage?'}\r\n            content={\r\n              'Associated keys will be marked as archived and unavailable. You can restore entry from the archive at any time.'\r\n            }\r\n            onSubmit={() => archiveItem(data.id)}\r\n          >\r\n            <Button size=\"small\">Archive</Button>\r\n          </ApproveModal>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IKeyItemProps) => {\r\n  const host = useSelector(hostSelector);\r\n  const { fetchRemoveKeyItem, fetchArchiveKeyItem, fetchRestoreKeyItem } = useContainerKeys();\r\n  const { data } = props;\r\n  const rotateInterval = data ? data.rotateInterval : null;\r\n  const code = data ? data.code : null;\r\n\r\n  const publicUrls = useMemo(() => {\r\n    if (code === null) {\r\n      return [];\r\n    }\r\n    return [\r\n      { code: 'jwk', url: `${host}/entry/public/jwk/${code}`, label: 'JWK' },\r\n      { code: 'jwks', url: `${host}/entry/public/jwks/${code}`, label: 'JWKs' },\r\n      { code: 'pem', url: `${host}/entry/public/pem/${code}`, label: 'PEM' },\r\n    ];\r\n  }, [code, host]);\r\n\r\n  const deleteItem = useCallback(\r\n    (id: number) => {\r\n      return fetchRemoveKeyItem({ id });\r\n    },\r\n    [fetchRemoveKeyItem],\r\n  );\r\n\r\n  const archiveItem = useCallback(\r\n    (id: number) => {\r\n      return fetchArchiveKeyItem({ id });\r\n    },\r\n    [fetchArchiveKeyItem],\r\n  );\r\n\r\n  const restoreItem = useCallback(\r\n    (id: number) => {\r\n      return fetchRestoreKeyItem({ id });\r\n    },\r\n    [fetchRestoreKeyItem],\r\n  );\r\n\r\n  const rotation = useMemo(() => {\r\n    return rotateInterval && `Rotation period: ${moment.duration(rotateInterval, 's').humanize()}`;\r\n  }, [rotateInterval]);\r\n\r\n  return {\r\n    host,\r\n    rotation,\r\n    publicUrls,\r\n    deleteItem,\r\n    archiveItem,\r\n    restoreItem,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actions: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  privateWrap: {\r\n    width: '100%',\r\n  },\r\n  divider: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  tooltip: {\r\n    marginLeft: 10,\r\n    opacity: 0.2,\r\n    '&:hover': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  codeHolder: {\r\n    textAlign: 'right',\r\n  }\r\n}));\r\n\r\nexport default KeyItem;\r\n","import { Box, MenuItem, Select } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid/Grid';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { useCallback } from 'react';\r\n\r\nexport interface IPropsPerPageSelect {\r\n  current: number;\r\n  options: number[];\r\n  onSelect?: (val: number) => void;\r\n}\r\n\r\nconst PerPageSelect: React.FC<IPropsPerPageSelect> = (props) => {\r\n  const styles = useStyles();\r\n  const { current, options } = props;\r\n  const { handleChange } = useHooks(props);\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item className={styles.label}>\r\n          Items per page:\r\n        </Grid>\r\n        <Grid item>\r\n          <Select value={current} onChange={handleChange}>\r\n            {options.map((val) => {\r\n              return (\r\n                <MenuItem key={val} value={val}>\r\n                  {val}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsPerPageSelect) => {\r\n  const { onSelect } = props;\r\n\r\n  const handleChange = useCallback(\r\n    (\r\n      e: React.ChangeEvent<{\r\n        name?: string | undefined;\r\n        value: unknown;\r\n      }>,\r\n    ) => {\r\n      onSelect && onSelect(e.target.value as number);\r\n    },\r\n    [onSelect],\r\n  );\r\n\r\n  return {\r\n    handleChange,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    label: {\r\n      marginRight: 10,\r\n      fontSize: 12,\r\n    },\r\n  };\r\n});\r\n\r\nexport default PerPageSelect;\r\n","import React, { ChangeEvent, useCallback, useMemo } from 'react';\r\nimport { InputAdornment, TextField, TextFieldProps } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport debounce from 'lodash.debounce';\r\n\r\nexport type IPropsSearchInput = TextFieldProps & {\r\n  onThrottledChange?: (val: string) => void;\r\n};\r\n\r\nconst SearchInput: React.FC<IPropsSearchInput> = (props) => {\r\n  const { InputPropsMemo, restProps, handleChange } = useHooks(props);\r\n  return (\r\n    <>\r\n      <TextField {...restProps} onChange={handleChange} size=\"small\" variant={'outlined'} InputProps={InputPropsMemo} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsSearchInput) => {\r\n  const { InputProps, onChange, onThrottledChange, ...restProps } = props;\r\n  const InputPropsMemo = useMemo(() => {\r\n    return {\r\n      startAdornment: (\r\n        <InputAdornment position=\"start\">\r\n          <SearchIcon />\r\n        </InputAdornment>\r\n      ),\r\n      ...InputProps,\r\n    };\r\n  }, [InputProps]);\r\n\r\n  const throttledChange = useCallback(debounce((val: string)=> {\r\n    if (onThrottledChange) {\r\n      onThrottledChange(val)\r\n    }\r\n  }, 500), [onThrottledChange]);\r\n\r\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\r\n    const val = event.target.value;\r\n    if (onChange) {\r\n      onChange(event);\r\n    }\r\n    throttledChange(val);\r\n  }, [throttledChange, onChange]);\r\n\r\n  return {\r\n    InputPropsMemo,\r\n    restProps,\r\n    handleChange,\r\n  };\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, Button, Dialog, makeStyles, Box, Typography } from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nimport {\r\n  isKeyListEmpty,\r\n  keysPagerOptionsSelector,\r\n  keysRequestSelector,\r\n  keysSearchSelector,\r\n} from 'src/containers/Keys/selectors';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\nimport KeyEntryForm from 'src/components/KeyEntryForm';\r\nimport KeyItem from 'src/components/KeyItem';\r\nimport PerPageSelect from 'src/components/PerPageSelect';\r\nimport SearchInput from 'src/components/SearchInput';\r\n\r\nexport interface IPropsKeysList {\r\n  archive?: boolean;\r\n}\r\n\r\nconst KeysList: React.FC<IPropsKeysList> = (props) => {\r\n  const styles = useStyles();\r\n  const { loading, data, error, pager } = useSelector(keysRequestSelector);\r\n  const pagerOptions = useSelector(keysPagerOptionsSelector);\r\n  const search = useSelector(keysSearchSelector);\r\n  const isEmpty = useSelector(isKeyListEmpty);\r\n\r\n  const {\r\n    isFormOpened,\r\n    handleModalToggle,\r\n    handlePagerChange,\r\n    handleChangePerPage,\r\n    handleChangeSearch,\r\n  } = useHooks();\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  if (error) {\r\n    return <Alert>{error}</Alert>;\r\n  }\r\n\r\n  return (\r\n    <Box className={styles.wrap}>\r\n      <Grid container spacing={2}>\r\n        <Grid item container spacing={2} xs={12} alignItems={'center'}>\r\n          {!props.archive && (\r\n            <Grid item>\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<AddCircleOutlineIcon />}\r\n                onClick={handleModalToggle}\r\n              >\r\n                Add key entry\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n          { !isEmpty &&\r\n            <Grid item>\r\n              <SearchInput\r\n                defaultValue={search}\r\n                onThrottledChange={handleChangeSearch}\r\n                placeholder={'Search by name...'}\r\n              />\r\n            </Grid>\r\n          }\r\n        </Grid>\r\n        {isEmpty && !props.archive &&\r\n           <Grid item xs={12} className={styles.noItems}>\r\n             <Typography variant=\"h5\">There is no key entries. Add your first one!</Typography>\r\n           </Grid>\r\n        }\r\n        {isEmpty && props.archive &&\r\n           <Grid item xs={12} className={styles.noItems}>\r\n             <Typography variant=\"h5\">Archive is empty!</Typography>\r\n           </Grid>\r\n        }\r\n        {data.items.length > 0 && (\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              {data.items.map((item) => {\r\n                return (\r\n                  <Grid item key={item.id} xs={6}>\r\n                    <KeyItem data={item} />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {pager.totalPages !== undefined && pager.totalPages > 0 && (\r\n          <Grid container item xs={12} alignItems=\"center\">\r\n            <Grid item>\r\n              <PerPageSelect\r\n                current={pager.perPage}\r\n                options={pagerOptions}\r\n                onSelect={handleChangePerPage}\r\n              />\r\n            </Grid>\r\n            <Grid item className={styles.pagerHolder}>\r\n              {pager.totalPages > 1 && (\r\n                <Pagination\r\n                  onChange={handlePagerChange}\r\n                  count={pager.totalPages}\r\n                  page={pager.page}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      <Dialog open={isFormOpened} onClose={handleModalToggle}>\r\n        <KeyEntryForm onSubmit={handleModalToggle} />\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const [isFormOpened, toggleForm] = useState(false);\r\n  const { changePager, changeSearch } = useContainerKeys();\r\n\r\n  const handleModalToggle = useCallback(() => {\r\n    toggleForm(!isFormOpened);\r\n  }, [isFormOpened, toggleForm]);\r\n\r\n  const handlePagerChange = useCallback(\r\n    (_event: React.ChangeEvent<unknown>, value: number) => {\r\n      return changePager({ page: value });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handleChangePerPage = useCallback(\r\n    (val: number) => {\r\n      return changePager({ perPage: val });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handleChangeSearch = useCallback(\r\n    (val: string) => {\r\n      return changeSearch({ search: val });\r\n    },\r\n    [changeSearch],\r\n  );\r\n\r\n  return {\r\n    isFormOpened,\r\n    toggleForm,\r\n    handleChangePerPage,\r\n    handleChangeSearch,\r\n    handleModalToggle,\r\n    handlePagerChange,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    pagerHolder: {\r\n      marginLeft: 'auto',\r\n    },\r\n    searchHolder: {\r\n      marginLeft: 'auto',\r\n      marginTop: 'auto',\r\n    },\r\n    wrap: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n    },\r\n    noItems: {\r\n      marginTop: 20,\r\n    },\r\n  };\r\n});\r\n\r\nexport default KeysList;\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreKeyPreview } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreKeyPreview => state.keyPreview;\r\nexport const modal = createSelector(containerState, (state) => state.modal);\r\nexport const details = createSelector(containerState, (state) => state.details);\r\nexport const params = createSelector(containerState, (state) => state.params);\r\nexport const availFormats = createSelector(containerState, (state) => state.availFormats);\r\nexport const availPrivacy = createSelector(containerState, (state) => state.availPrivacy);\r\n","import React, { useCallback, useMemo, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Button, Grid, makeStyles } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport CodeFormat from 'src/components/CodeFormat';\r\nimport CopyBtn from 'src/components/CopyBtn';\r\nimport { useContainerPreviewKey } from 'src/containers/KeyPreview/hooks';\r\nimport * as keyPreviewSelectors from 'src/containers/KeyPreview/selectors';\r\nimport PopMenu, { IMenuItem } from '../PopMenu';\r\nimport moment from 'moment';\r\n\r\nexport interface IPropsKeyPreview {}\r\n\r\nconst KeyPreview: React.FC<IPropsKeyPreview> = () => {\r\n  const styles = useStyles();\r\n\r\n  const {\r\n    availFormats,\r\n    availPrivacy,\r\n    keyData,\r\n    previewParams,\r\n    keyInputRef,\r\n    formatsBtnRef,\r\n    privacyBtnRef,\r\n    targetKey,\r\n    isFormatsMenuOpen,\r\n    isPrivacyMenuOpen,\r\n    handleFormatsMenuClose,\r\n    handleFormatsMenuOpen,\r\n    handlePrivacyMenuClose,\r\n    handlePrivacyMenuOpen,\r\n    handleFormatsMenuItemSelect,\r\n    handlePrivacyMenuItemSelect,\r\n    handleDialogClose,\r\n  } = useHooks();\r\n\r\n  if (keyData.error || keyData.data === undefined) {\r\n    return <div>Data error in KeyPreview component</div>;\r\n  }\r\n\r\n  if (targetKey === undefined) {\r\n    return <div>Key data unavailable</div>;\r\n  }\r\n\r\n  const formatString = previewParams.format?.toUpperCase();\r\n  const privacyString = previewParams.privacy?.toUpperCase();\r\n  const activatesAt = moment.unix(keyData.data.activatesAt).format('LLL');\r\n  const expiresAt = keyData.data.expiresAt && moment.unix(keyData.data.expiresAt).format('LLL');\r\n\r\n  return (\r\n    <Paper className={styles.wrap}>\r\n      <PopMenu\r\n        anchorEl={isFormatsMenuOpen ? formatsBtnRef.current : null}\r\n        handleClose={handleFormatsMenuClose}\r\n        onSelectMenuItem={handleFormatsMenuItemSelect}\r\n        menu={availFormats}\r\n      />\r\n      <PopMenu\r\n        anchorEl={isPrivacyMenuOpen ? privacyBtnRef.current : null}\r\n        handleClose={handlePrivacyMenuClose}\r\n        onSelectMenuItem={handlePrivacyMenuItemSelect}\r\n        menu={availPrivacy}\r\n      />\r\n      <Grid container spacing={2}>\r\n        <Grid container item xs={12} alignItems={'center'}>\r\n          <Grid item xs={6}>\r\n            <Typography variant={'h3'}>Key preview</Typography>\r\n          </Grid>\r\n          <Grid container item xs={6} justify={'flex-end'}>\r\n            <Button size={'small'} ref={privacyBtnRef} onClick={handlePrivacyMenuOpen}>\r\n              {privacyString}\r\n            </Button>\r\n            <Button size={'small'} ref={formatsBtnRef} onClick={handleFormatsMenuOpen}>\r\n              {formatString}\r\n            </Button>\r\n            <div className={styles.copyHolder}>\r\n              <textarea readOnly ref={keyInputRef} value={targetKey} className={styles.keyInput} />\r\n              <CopyBtn inputRef={keyInputRef} message={'Key has been copied!'} />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container xs={12} justify=\"flex-start\" spacing={2}>\r\n          <Grid item>\r\n            <Typography variant=\"caption\">Activates at: {activatesAt}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"caption\">\r\n              {expiresAt ? `Expires at: ${expiresAt}` : `No expiration`}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CodeFormat>{targetKey}</CodeFormat>\r\n        </Grid>\r\n        <Grid item container xs={12} justify={'flex-end'}>\r\n          <Button onClick={handleDialogClose}>Close</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport const KeyPreviewModal: React.FC<IPropsKeyPreview> = (props) => {\r\n  const { modalState, handleDialogClose } = useHooks();\r\n\r\n  return (\r\n    <Dialog open={Boolean(modalState.isOpen)} onClose={handleDialogClose} {...props}>\r\n      <KeyPreview />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const keyData = useSelector(keyPreviewSelectors.details);\r\n  const modalState = useSelector(keyPreviewSelectors.modal);\r\n  const previewParams = useSelector(keyPreviewSelectors.params);\r\n  const availFormats = useSelector(keyPreviewSelectors.availFormats);\r\n  const availPrivacy = useSelector(keyPreviewSelectors.availPrivacy);\r\n\r\n  const [isFormatsMenuOpen, toggleFormatsMenu] = useState(false);\r\n  const [isPrivacyMenuOpen, togglePrivacyMenu] = useState(false);\r\n\r\n  const { setPreviewParams, toggleModal } = useContainerPreviewKey();\r\n\r\n  const handleDialogClose = useCallback(() => {\r\n    toggleModal(false);\r\n  }, [toggleModal]);\r\n\r\n  const handleFormatsMenuClose = useCallback(() => {\r\n    toggleFormatsMenu(false);\r\n  }, [toggleFormatsMenu]);\r\n\r\n  const handleFormatsMenuOpen = useCallback(() => {\r\n    toggleFormatsMenu(true);\r\n  }, [toggleFormatsMenu]);\r\n\r\n  const handlePrivacyMenuClose = useCallback(() => {\r\n    togglePrivacyMenu(false);\r\n  }, [togglePrivacyMenu]);\r\n\r\n  const handlePrivacyMenuOpen = useCallback(() => {\r\n    togglePrivacyMenu(true);\r\n  }, [togglePrivacyMenu]);\r\n\r\n  const handleFormatsMenuItemSelect = useCallback(\r\n    (item: IMenuItem) => {\r\n      setPreviewParams({ format: item.id as 'jwk' | 'pem' });\r\n    },\r\n    [setPreviewParams],\r\n  );\r\n\r\n  const handlePrivacyMenuItemSelect = useCallback(\r\n    (item: IMenuItem) => {\r\n      setPreviewParams({ privacy: item.id as 'private' | 'public' });\r\n    },\r\n    [setPreviewParams],\r\n  );\r\n\r\n  const keyInputRef = useRef<HTMLTextAreaElement>(null);\r\n  const formatsBtnRef = useRef<HTMLButtonElement>(null);\r\n  const privacyBtnRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const targetKey = useMemo(() => {\r\n    if (keyData.data === undefined) {\r\n      return undefined;\r\n    }\r\n\r\n    const { publicKey, privateKey } = keyData.data;\r\n    const isPrivate = previewParams.privacy === 'private';\r\n    const targetKeys = isPrivate ? privateKey : publicKey;\r\n\r\n    if (targetKeys === undefined) {\r\n      return undefined;\r\n    }\r\n\r\n    switch (previewParams.format) {\r\n      case 'pem':\r\n        return targetKeys.pem;\r\n      default:\r\n        return JSON.stringify(targetKeys.jwk, null, 2);\r\n    }\r\n  }, [keyData.data, previewParams.format, previewParams.privacy]);\r\n\r\n  return {\r\n    availFormats,\r\n    availPrivacy,\r\n    isPrivacyMenuOpen,\r\n    isFormatsMenuOpen,\r\n    targetKey,\r\n    modalState,\r\n    keyData,\r\n    previewParams,\r\n    keyInputRef,\r\n    privacyBtnRef,\r\n    formatsBtnRef,\r\n    handleFormatsMenuClose,\r\n    handleFormatsMenuOpen,\r\n    handlePrivacyMenuClose,\r\n    handlePrivacyMenuOpen,\r\n    handleFormatsMenuItemSelect,\r\n    handlePrivacyMenuItemSelect,\r\n    handleDialogClose,\r\n    toggleFormatsMenu,\r\n    togglePrivacyMenu,\r\n    togglePreviewModal: toggleModal,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    wrap: {\r\n      width: '600px',\r\n      padding: '20px',\r\n    },\r\n    copyHolder: {\r\n      position: 'relative',\r\n    },\r\n    keyInput: {\r\n      position: 'absolute',\r\n      overflow: 'hidden',\r\n      width: 10,\r\n      height: 20,\r\n      left: 15,\r\n      top: 15,\r\n      opacity: 0,\r\n    },\r\n  };\r\n});\r\n\r\nexport default KeyPreview;\r\n","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport KeysList from 'src/components/KeysList';\r\nimport { KeyPreviewModal } from 'src/components/KeyPreview';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\n\r\nexport const KeysPage: React.FC = () => {\r\n  const styles = useStyles();\r\n  useHooks();\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <KeysList />\r\n      <KeyPreviewModal />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    flexGrow: 1,\r\n    paddingTop: 16,\r\n  }\r\n}));\r\n\r\nconst useHooks = () => {\r\n  const { fetchKeysListWatch, resetList } = useContainerKeys();\r\n\r\n  useEffect(() => {\r\n    const req = fetchKeysListWatch();\r\n    return () => {\r\n      req.abort();\r\n    };\r\n  }, [fetchKeysListWatch, resetList]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      resetList();\r\n    };\r\n  }, [resetList]);\r\n}\r\n\r\nexport default KeysPage;\r\n","import { useCallback } from 'react';\r\nimport { IApiParamsAuthAccount, IApiParamsAuthRemove } from 'src/lib/api/auth/types';\r\nimport { useAppDispatch } from 'src/store';\r\nimport { actions as accountsActions } from './reducer';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerAccounts = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const fetchCreateAccount = useCallback(async (params: IApiParamsAuthAccount) => {\r\n    return await dispatch(\r\n      accountsActions.fetchCreateAccount(params),\r\n    );\r\n  }, [dispatch]);\r\n\r\n  const fetchRemoveAccounts = useCallback(async (params: IApiParamsAuthRemove) => {\r\n    return await dispatch(\r\n      accountsActions.fetchRemoveAccounts(params)\r\n    )\r\n  }, [dispatch]);\r\n\r\n  const fetchAccountsList = useCallback(async () => {\r\n    return await dispatch(\r\n      accountsActions.fetchAccountsList()\r\n    );\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    fetchAccountsList,\r\n    fetchCreateAccount,\r\n    fetchRemoveAccounts,\r\n  }\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  makeStyles,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport { Formik, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport { useContainerAccounts } from 'src/containers/Accounts/hooks';\r\n\r\nexport interface IAccountFormValues {\r\n  login: string;\r\n  password: string;\r\n  admin: string;\r\n}\r\n\r\nexport interface IPropsAccountForm {\r\n  onSubmit?:() => void;\r\n}\r\n\r\nconst initialValues: IAccountFormValues = {\r\n  login: '',\r\n  password: '',\r\n  admin: '0',\r\n};\r\n\r\nconst AccountForm: React.FC<IPropsAccountForm> = (props) => {\r\n  const styles = useStyles();\r\n  const { handleSubmit, validate } = useHooks(props);\r\n\r\n  return (\r\n    <Card style={{ width: 400 }}>\r\n      <CardHeader title={<Typography variant=\"h3\">Create new account</Typography>} />\r\n      <CardContent>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validate={validate}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {(formikProps: FormikProps<IAccountFormValues>) => {\r\n            const loading = formikProps.isSubmitting;\r\n            return (\r\n              <Form>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"login\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        return (\r\n                          <TextField\r\n                            fullWidth\r\n                            error={Boolean(meta.touched && meta.error)}\r\n                            label=\"Enter login\"\r\n                            variant=\"outlined\"\r\n                            {...field}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"password\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field, meta } = params;\r\n                        return (\r\n                          <TextField\r\n                            fullWidth\r\n                            error={Boolean(meta.touched && meta.error)}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            autoComplete={'off'}\r\n                            variant=\"outlined\"\r\n                            {...field}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field name=\"admin\">\r\n                      {(params: FieldProps<string>) => {\r\n                        const { field } = params;\r\n                        return (\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                checked={field.value === '1'}\r\n                                onChange={(_, checked) => {\r\n                                  formikProps.setFieldValue('admin', checked ? '1' : '0');\r\n                                }}\r\n                                name=\"checkedB\"\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label=\"Administrator\"\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Field>\r\n                  </Grid>\r\n                  <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                    <Button\r\n                      disabled={loading}\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      variant={'contained'}\r\n                      color=\"secondary\"\r\n                      disableElevation\r\n                      fullWidth\r\n                    >\r\n                      {!loading && 'Submit'}\r\n                      {loading && <CircularProgress className={styles.progress} size={26} />}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsAccountForm) => {\r\n  const { onSubmit } = props;\r\n  const { fetchCreateAccount } = useContainerAccounts();\r\n\r\nconst validate = useCallback(() => {}, []);\r\n\r\n  const handleSubmit = useCallback(async (values: IAccountFormValues) => {\r\n    await fetchCreateAccount({\r\n      isAdmin: values.admin === '1',\r\n      login: values.login,\r\n      password: values.password,\r\n    })\r\n    if (onSubmit) {\r\n      onSubmit();\r\n    }\r\n  }, [onSubmit, fetchCreateAccount]);\r\n\r\n  return {\r\n    validate,\r\n    handleSubmit,\r\n    fetchCreateAccount,\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  progress: {\r\n    marginLeft: 20,\r\n  },\r\n}));\r\n\r\nexport default AccountForm;\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreAccounts } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreAccounts => state.accounts;\r\nexport const createFetchSelector = createSelector(containerState, (state) => state.create);\r\nexport const accountsListSelector = createSelector(containerState, (state) => state.list);\r\n","import React, { useCallback } from 'react';\r\nimport { Card, CardContent, Typography, CardActions, Button, makeStyles } from '@material-ui/core';\r\nimport ApproveModal from '../ApproveModal';\r\nimport { useContainerAccounts } from 'src/containers/Accounts/hooks';\r\n\r\nexport interface IAccountData {\r\n  id: number;\r\n  login: string;\r\n}\r\n\r\nexport interface IPropsAccountItem {\r\n  data: IAccountData;\r\n}\r\n\r\nconst AccountItem: React.FC<IPropsAccountItem> = (props) => {\r\n  const styles = useStyles();\r\n  const { deleteAccount } = useHooks();\r\n\r\n  const { data } = props;\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant={'caption'} component={'div'}>\r\n          Account\r\n        </Typography>\r\n        <Typography variant={'h4'} component={'div'}>\r\n          {data.login}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={styles.actions}>\r\n        <ApproveModal\r\n          title={'Are you sure want to delete account?'}\r\n          content={'Every associated keys will be unavailable'}\r\n          onSubmit={() => deleteAccount(data.id)}\r\n        >\r\n          <Button size=\"small\">Remove account</Button>\r\n        </ApproveModal>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchRemoveAccounts } = useContainerAccounts();\r\n  const deleteAccount = useCallback(\r\n    async (id: number) => {\r\n      await fetchRemoveAccounts({ ids: [id] });\r\n    },\r\n    [fetchRemoveAccounts],\r\n  );\r\n\r\n  return {\r\n    deleteAccount,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actions: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n}));\r\n\r\nexport default AccountItem;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Grid, Button, Dialog } from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport AccountForm from 'src/components/AccountForm';\r\nimport { accountsListSelector } from 'src/containers/Accounts/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport AccountItem from '../AccountItem';\r\nimport { useContainerAccounts } from 'src/containers/Accounts/hooks';\r\n\r\nconst AccountsList: React.FC = () => {\r\n  const accountsData = useSelector(accountsListSelector);\r\n  const { isFormOpened, handleModalToggle } = useHooks();\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={isFormOpened} onClose={handleModalToggle}>\r\n        <AccountForm onSubmit={handleModalToggle} />\r\n      </Dialog>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<AddCircleOutlineIcon />}\r\n            onClick={handleModalToggle}\r\n          >\r\n            Add account\r\n          </Button>\r\n        </Grid>\r\n        <Grid container item spacing={2} xs={12}>\r\n          {accountsData.accounts.map((account) => {\r\n            return (\r\n              <Grid item key={account.id} xs={6}>\r\n                <AccountItem data={account} />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const [isFormOpened, toggleForm] = useState(false);\r\n  const { fetchAccountsList } = useContainerAccounts();\r\n\r\n  const handleModalToggle = useCallback(() => {\r\n    toggleForm(!isFormOpened);\r\n  }, [isFormOpened, toggleForm]);\r\n\r\n  useEffect(() => {\r\n    void fetchAccountsList();\r\n  }, [fetchAccountsList]);\r\n\r\n  return {\r\n    isFormOpened,\r\n    toggleForm,\r\n    handleModalToggle,\r\n  }\r\n};\r\n\r\nexport default AccountsList;\r\n","import React from 'react';\r\nimport { makeStyles, Container } from '@material-ui/core';\r\nimport AccountsList from 'src/components/AccountsList';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    paddingTop: 24,\r\n    paddingBottom: 24,\r\n  },\r\n}));\r\n\r\nconst AccountsPage: React.FC = () => {\r\n  const styles = useStyles();\r\n  return (\r\n    <Container className={styles.container}>\r\n      <AccountsList />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AccountsPage;\r\n","import { useCallback } from 'react';\r\nimport { useAppDispatch } from 'src/store';\r\nimport {\r\n  IApiParamsReposCreate,\r\n  IApiParamsReposList,\r\n  IApiParamsReposRemove,\r\n} from 'src/lib/api/repos/types';\r\n\r\nimport { actions as reposActions } from './reducer';\r\nimport * as reposSelectors from './selectors';\r\nimport { generatePassword } from 'src/lib/utils/generatePassword';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerRepos = () => {\r\n  const dispatch = useAppDispatch();\r\n  const pager = useSelector(reposSelectors.pagerSelector);\r\n  const search = useSelector(reposSelectors.searchSelector);\r\n\r\n  const createNewRepo = useCallback(\r\n    (params: Omit<IApiParamsReposCreate, 'accessToken'>) => {\r\n      const token = generatePassword(64);\r\n      return dispatch(reposActions.fetchCreateRepo({ ...params, accessToken: token }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const changePager = useCallback(\r\n    (params: Partial<IApiPager>) => {\r\n      return dispatch(reposActions.changePager(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const changeSearch = useCallback(\r\n    (search?: string) => {\r\n      return dispatch(reposActions.changeSearch({ search }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchListRepo = useCallback(\r\n    (params?: IApiParamsReposList) => {\r\n      return dispatch(reposActions.fetchListRepo(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchListRepoWatch = useCallback(() => {\r\n    const params = {\r\n      page: pager.page,\r\n      perPage: pager.perPage,\r\n      search,\r\n    };\r\n    return fetchListRepo(params);\r\n  }, [fetchListRepo, pager.page, pager.perPage, search]);\r\n\r\n  const deleteRepos = useCallback(\r\n    async (params: IApiParamsReposRemove) => {\r\n      await dispatch(reposActions.fetchRemoveRepos(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return {\r\n    createNewRepo,\r\n    deleteRepos,\r\n    fetchListRepo,\r\n    changePager,\r\n    fetchListRepoWatch,\r\n    changeSearch,\r\n  };\r\n};\r\n","import React, { useCallback, useRef } from 'react';\r\nimport {\r\n  CardContent,\r\n  Card,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  makeStyles,\r\n  Grid,\r\n  Chip,\r\n  Divider,\r\n  InputAdornment,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport ApproveModal from 'src/components/ApproveModal';\r\nimport { useContainerRepos } from 'src/containers/Repos/hooks';\r\nimport * as sessionSelectors from 'src/containers/Session/selectors';\r\nimport CopyBtn from '../CopyBtn';\r\nimport CodeFormat from '../CodeFormat';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport interface IRepoItemData {\r\n  id: number;\r\n  name: string;\r\n  code: string;\r\n  accessToken: string;\r\n  entries: { name: string }[];\r\n}\r\n\r\nexport interface IPropsRepoItem {\r\n  data: IRepoItemData;\r\n}\r\n\r\nconst RepoItem: React.FC<IPropsRepoItem> = (props) => {\r\n  const { data } = props;\r\n  const styles = useStyles();\r\n  const host = useSelector(sessionSelectors.host);\r\n  const { deleteRepos, accessRef, handleFocus } = useHooks();\r\n  const targetUrl = `${host || ''}/repo/bunch/${data.code}`;\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography variant={'caption'} component={'div'}>\r\n              Repository\r\n            </Typography>\r\n            <Typography variant={'h5'} component={'div'}>\r\n              {data.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid container item xs={12} spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography variant={'caption'} component={'div'}>\r\n                Contained keys\r\n              </Typography>\r\n            </Grid>\r\n            {data.entries.map(({ name }, i) => {\r\n              return (\r\n                <Grid item key={i}>\r\n                  <Chip label={name} variant={'outlined'} />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Access token\"\r\n              variant=\"outlined\"\r\n              value={data.accessToken}\r\n              onFocus={handleFocus}\r\n              InputProps={{\r\n                inputRef: accessRef,\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <CopyBtn inputRef={accessRef} message={`URL has been copied!`} />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography>Key can be fetched via POST with access token.</Typography>\r\n            <CodeFormat>\r\n              {`curl -d '{ \"accessToken\":\"${data.accessToken}\" }' -H \"Content-Type: application/json\" -X POST ${targetUrl}`}\r\n            </CodeFormat>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions className={styles.actions}>\r\n        <ApproveModal\r\n          title={'Are you sure want to delete repo?'}\r\n          onSubmit={() => deleteRepos({ ids: [data.id] })}\r\n        >\r\n          <Button size=\"small\">Remove</Button>\r\n        </ApproveModal>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { deleteRepos } = useContainerRepos();\r\n\r\n  const handleFocus: React.FocusEventHandler<HTMLInputElement> = useCallback((event) => {\r\n    event.target.select();\r\n  }, []);\r\n\r\n  const accessRef = useRef<HTMLInputElement>(null);\r\n\r\n  return {\r\n    accessRef,\r\n    deleteRepos,\r\n    handleFocus,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  actions: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  contentItems: {\r\n    display: 'flex',\r\n  },\r\n  contentItem: {\r\n    marginRight: 20,\r\n  },\r\n}));\r\n\r\nexport default RepoItem;\r\n","import React, { useEffect, useState, ChangeEvent, useCallback } from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Checkbox,\r\n  makeStyles,\r\n  Box,\r\n  Divider,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { IApiKeyEntry } from 'src/lib/api/types';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\nimport { IApiParamsKeysList, IApiResultKeysList } from 'src/lib/api/keys/list';\r\nimport { useAsyncEffect } from 'src/lib/utils/useAPIEffect';\r\nimport SearchInput from '../SearchInput';\r\n\r\nexport interface IPropsEntriesPicker {\r\n  pickedSet?: string[];\r\n  onUpdate?: (selected: IApiKeyEntry[]) => void;\r\n}\r\n\r\nconst EntriesPicker: React.FC<IPropsEntriesPicker> = (props) => {\r\n  const { picked, options, handleChangeItem, handleSearchChange } = useHooks(props);\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} className={styles.topDivider}><Divider /></Grid>\r\n      <Grid item xs={12} >\r\n        <SearchInput placeholder={'Select required keys...'} onThrottledChange={handleSearchChange} fullWidth />\r\n        <Box className={styles.scrollBar}>\r\n          <PerfectScrollbar>\r\n            <List>\r\n              {options.map((item) => {\r\n                return (\r\n                  <div key={item.id}>\r\n                    <ListItem key={item.id}>\r\n                      <ListItemIcon>\r\n                        <Checkbox\r\n                          edge=\"start\"\r\n                          size=\"small\"\r\n                          disableRipple\r\n                          checked={picked.includes(item.code)}\r\n                          onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                            handleChangeItem(item.code, e.target.checked)\r\n                          }\r\n                        />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={item.name} />\r\n                    </ListItem>\r\n                  </div>\r\n                );\r\n              })}\r\n            </List>\r\n          </PerfectScrollbar>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsEntriesPicker) => {\r\n  const { pickedSet, onUpdate } = props;\r\n  const [picked, pickItems] = useState<string[]>([]);\r\n  const [options, setOptions] = useState<IApiKeyEntry[]>([]);\r\n  const [pickedDetails, changePickedDetails] = useState<{ [id: number]: IApiKeyEntry }>({});\r\n  const [searchParams, setParams] = useState<{\r\n    page?: number;\r\n    perPage?: number;\r\n    search?: string;\r\n  }>({});\r\n\r\n  useUpdatePickedSetFromProps(pickedSet, pickItems);\r\n  useGetPickedDetails(picked, pickedDetails, changePickedDetails);\r\n  useFetchOptions(searchParams, setOptions);\r\n\r\n  const handleChangeItem = useCallback(\r\n    (code: string, checked: boolean) => {\r\n      const newItems = checked ? picked.concat([code]) : picked.filter((item) => item !== code);\r\n\r\n      if (onUpdate) {\r\n        onUpdate(options.filter((item) => newItems.includes(item.code)));\r\n      }\r\n\r\n      pickItems(newItems);\r\n    },\r\n    [onUpdate, pickItems, options, picked],\r\n  );\r\n\r\n  const handleSearchChange = useCallback(\r\n    (val: string) => {\r\n      setParams((s) => ({ ...s, search: val }));\r\n    },\r\n    [setParams],\r\n  );\r\n\r\n  return {\r\n    options,\r\n    picked,\r\n    handleChangeItem,\r\n    handleSearchChange,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  scrollBar: {\r\n    height: 220,\r\n  },\r\n  topDivider: {\r\n    marginBottom: 5,\r\n  }\r\n}));\r\n\r\nconst useUpdatePickedSetFromProps = (\r\n  pickedSet: string[] | undefined,\r\n  pickItems: (p: string[]) => void,\r\n) => {\r\n  useEffect(() => {\r\n    if (pickedSet) {\r\n      pickItems(pickedSet);\r\n    }\r\n  }, [pickedSet, pickItems]);\r\n};\r\n\r\nconst useGetPickedDetails = (\r\n  picked: string[],\r\n  pickedDetails: Record<string, IApiKeyEntry>,\r\n  changePickedDetails: (p: Record<number, IApiKeyEntry>) => void,\r\n) => {\r\n  const { requestKeysByIds } = useContainerKeys();\r\n  useEffect(() => {\r\n    const newDetails = pickedDetails;\r\n    const requestTargets: string[] = [];\r\n\r\n    picked.forEach((id) => {\r\n      if (!newDetails[id]) {\r\n        requestTargets.push(id);\r\n      }\r\n    });\r\n    /*\r\n    if (requestTargets.length > 0) {\r\n      requestKeysByIds({ ids: requestTargets })\r\n        .then(({ items }) => {\r\n          items.forEach((item) => {\r\n            newDetails[item.id] = item;\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n      changePickedDetails(newDetails);\r\n    }\r\n    */\r\n  }, [picked, pickedDetails, changePickedDetails, requestKeysByIds]);\r\n};\r\n\r\nconst useFetchOptions = (\r\n  params: IApiParamsKeysList,\r\n  setOptions: (opts: IApiKeyEntry[]) => void,\r\n) => {\r\n  const { requestKeysList } = useContainerKeys();\r\n\r\n  const fetchList = useCallback(() => {\r\n    return requestKeysList(params);\r\n  }, [params, requestKeysList]);\r\n\r\n  const onComplete = useCallback(\r\n    (res: IApiResultKeysList) => {\r\n      setOptions(res.items);\r\n    },\r\n    [setOptions],\r\n  );\r\n\r\n  useAsyncEffect(fetchList, onComplete);\r\n};\r\n\r\nexport default EntriesPicker;\r\n","import { useEffect } from 'react';\r\n\r\nexport const useAsyncEffect = <R, E extends Error>(\r\n  func: () => Promise<R>,\r\n  onSuccess: (result: R) => void,\r\n  onError?: (error: E) => void,\r\n): void => {\r\n  useEffect(() => {\r\n    let isUnmounted = false;\r\n\r\n    func().then((result: R) => {\r\n      !isUnmounted && onSuccess(result);\r\n    }).catch((err: E) => {\r\n      if (!isUnmounted && onError) {\r\n        onError(err);\r\n      } else if (!isUnmounted) {\r\n        throw err;\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      isUnmounted = true;\r\n    }\r\n  }, [func, onSuccess, onError]);\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { Formik, FormikProps, Form, Field, FieldProps, FormikErrors, FormikHelpers } from 'formik';\r\n\r\nimport EntriesPicker from 'src/components/EntriesPicker';\r\nimport { useContainerRepos } from 'src/containers/Repos/hooks';\r\nimport { SerializedError } from '@reduxjs/toolkit';\r\nimport Message from '../Message';\r\n\r\nexport interface IRepositoryFormValues {\r\n  code: string;\r\n  entries: string[];\r\n  server?: string;\r\n}\r\n\r\nexport interface IPropsRepositoryForm {\r\n  onSubmit?: () => void;\r\n}\r\n\r\nconst validate = (values: IRepositoryFormValues) => {\r\n  const { code, entries } = values;\r\n  const errors: FormikErrors<typeof values> = {};\r\n\r\n  if (!code || code.length === 0) {\r\n    errors.code = 'Code required!';\r\n  }\r\n\r\n  if (entries.length === 0) {\r\n    errors.entries = 'Choose at least one entry';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst RepositoryForm: React.FC<IPropsRepositoryForm> = (props) => {\r\n  const styles = useStyles();\r\n  const { handleSubmit } = useHooks(props);\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ width: 400 }}>\r\n        <CardHeader title={<Typography variant=\"h3\">Create new repository</Typography>} />\r\n        <CardContent>\r\n          <Formik\r\n            initialValues={{\r\n              code: '',\r\n              entries: [],\r\n            }}\r\n            validate={validate}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            {(formikProps: FormikProps<IRepositoryFormValues>) => {\r\n              const loading = formikProps.isSubmitting;\r\n              return (\r\n                <Form>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <Field name=\"code\">\r\n                        {(params: FieldProps<string>) => {\r\n                          const { field, meta } = params;\r\n                          return (\r\n                            <TextField\r\n                              fullWidth\r\n                              error={Boolean(meta.touched && meta.error)}\r\n                              label=\"Choose unique code\"\r\n                              variant=\"outlined\"\r\n                              {...field}\r\n                            />\r\n                          );\r\n                        }}\r\n                      </Field>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Field name=\"entries\">\r\n                        {(params: FieldProps<string[]>) => {\r\n                          const { field, meta } = params;\r\n                          return (\r\n                            <>\r\n                              <EntriesPicker\r\n                                onUpdate={(items) => {\r\n                                  formikProps.setFieldValue(\r\n                                    'entries',\r\n                                    items.map(({ code }) => code),\r\n                                  );\r\n                                }}\r\n                                pickedSet={field.value}\r\n                              />\r\n                              {meta.touched && meta.error && (\r\n                                <Typography\r\n                                  variant={'caption'}\r\n                                  color={'error'}\r\n                                  className={styles.keyError}\r\n                                >\r\n                                  {meta.error}\r\n                                </Typography>\r\n                              )}\r\n                            </>\r\n                          );\r\n                        }}\r\n                      </Field>\r\n                    </Grid>\r\n                    {formikProps.errors.server && (\r\n                      <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                        <Message>{formikProps.errors.server}</Message>\r\n                      </Grid>\r\n                    )}\r\n                    <Grid item container xs={12} style={{ alignItems: 'center' }}>\r\n                      <Button\r\n                        disabled={loading}\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        variant={'contained'}\r\n                        color=\"secondary\"\r\n                        disableElevation\r\n                        fullWidth\r\n                      >\r\n                        {!loading && 'Submit'}\r\n                        {loading && <CircularProgress className={styles.progress} size={26} />}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nconst useHooks = (props: IPropsRepositoryForm) => {\r\n  const { onSubmit } = props;\r\n  const { createNewRepo } = useContainerRepos();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (values: IRepositoryFormValues, formikHelpers: FormikHelpers<IRepositoryFormValues>) => {\r\n      const result = await createNewRepo({\r\n        code: values.code,\r\n        name: values.code,\r\n        description: values.code,\r\n        keys: values.entries,\r\n      });\r\n      const error = (result as { error: SerializedError }).error;\r\n\r\n      if (!error && onSubmit) {\r\n        onSubmit();\r\n      } else {\r\n        formikHelpers.setErrors({ server: error.message });\r\n      }\r\n    },\r\n    [createNewRepo, onSubmit],\r\n  );\r\n\r\n  return { handleSubmit };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  progress: {\r\n    marginLeft: 20,\r\n  },\r\n  keyTitle: {\r\n    marginTop: 10,\r\n    marginBotton: 10,\r\n    paddingLeft: 10,\r\n  },\r\n  keyError: {\r\n    paddingLeft: 10,\r\n  },\r\n}));\r\n\r\nexport default RepositoryForm;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, Button, Dialog, Box, Typography } from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nimport RepoItem from 'src/components/RepoItem';\r\nimport RepositoryForm from 'src/components/RepositoryForm';\r\nimport * as reposSelectors from 'src/containers/Repos/selectors';\r\nimport { useContainerRepos } from 'src/containers/Repos/hooks';\r\nimport PerPageSelect from '../PerPageSelect';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchInput from '../SearchInput';\r\n\r\nconst ReposList: React.FC = () => {\r\n  const styles = useStyles();\r\n  const { items, pager, pagerOptions } = useSelector(reposSelectors.reposListSelector);\r\n  const search = useSelector(reposSelectors.searchSelector);\r\n  const isEmpty = useSelector(reposSelectors.isEmptySelector);\r\n\r\n  const {\r\n    handleModalToggle,\r\n    isFormOpened,\r\n    handleChangePerPage,\r\n    handlePagerChange,\r\n    handleChangeSearch,\r\n  } = useHooks();\r\n\r\n  return (\r\n    <Box>\r\n      <Dialog open={isFormOpened} onClose={handleModalToggle}>\r\n        <RepositoryForm onSubmit={handleModalToggle} />\r\n      </Dialog>\r\n      <Grid container spacing={2}>\r\n        <Grid item spacing={2} container xs={12}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"outlined\"\r\n              startIcon={<AddCircleOutlineIcon />}\r\n              onClick={handleModalToggle}\r\n            >\r\n              Add repository\r\n            </Button>\r\n          </Grid>\r\n          {!isEmpty && (\r\n            <Grid item>\r\n              <SearchInput\r\n                defaultValue={search}\r\n                onThrottledChange={handleChangeSearch}\r\n                placeholder={'Search by name...'}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        {items.length > 0 && (\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              {items.map((repo) => {\r\n                return (\r\n                  <Grid item xs={6} key={repo.id}>\r\n                    <RepoItem data={repo} />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {isEmpty && (\r\n          <Grid item xs={12} className={styles.noItems}>\r\n            <Typography variant=\"h5\">There is no repositories.</Typography>\r\n          </Grid>\r\n        )}\r\n        {pager.totalItems !== undefined && pager.totalItems > 0 && (\r\n          <Grid container item xs={12} spacing={2} alignItems=\"center\">\r\n            <Grid item>\r\n              <PerPageSelect\r\n                current={pager.perPage}\r\n                options={pagerOptions}\r\n                onSelect={handleChangePerPage}\r\n              />\r\n            </Grid>\r\n            <Grid item className={styles.pagerHolder}>\r\n              {pager.totalPages !== undefined && pager.totalPages > 1 && (\r\n                <Pagination\r\n                  onChange={handlePagerChange}\r\n                  count={pager.totalPages}\r\n                  page={pager.page}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { changePager, changeSearch } = useContainerRepos();\r\n  const [isFormOpened, toggleForm] = useState(false);\r\n\r\n  const handleChangeSearch = useCallback(\r\n    (val: string) => {\r\n      return changeSearch(val);\r\n    },\r\n    [changeSearch],\r\n  );\r\n\r\n  const handleChangePerPage = useCallback(\r\n    (val: number) => {\r\n      return changePager({ perPage: val });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handlePagerChange = useCallback(\r\n    (_: unknown, page: number) => {\r\n      return changePager({ page });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handleModalToggle = useCallback(() => {\r\n    toggleForm(!isFormOpened);\r\n  }, [isFormOpened, toggleForm]);\r\n\r\n  return {\r\n    isFormOpened,\r\n    handleChangeSearch,\r\n    handleModalToggle,\r\n    handleChangePerPage,\r\n    handlePagerChange,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pagerHolder: {\r\n    marginLeft: 'auto',\r\n  },\r\n  searchHolder: {\r\n    marginLeft: 'auto',\r\n  },\r\n  noItems: {\r\n    marginTop: 20,\r\n  },\r\n}));\r\n\r\nexport default ReposList;\r\n","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport ReposList from 'src/components/ReposList';\r\nimport { useContainerRepos } from 'src/containers/Repos/hooks';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    paddingTop: 16,\r\n    paddingBottom: 24,\r\n  }\r\n}));\r\n\r\nexport const ReposPage: React.FC = () => {\r\n  const styles = useStyles();\r\n  useHooks();\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <ReposList />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchListRepoWatch } = useContainerRepos();\r\n\r\n  useEffect(() => {\r\n    const req = fetchListRepoWatch();\r\n    return () => {\r\n      req.abort();\r\n    }\r\n  }, [fetchListRepoWatch]);\r\n}\r\nexport default ReposPage;\r\n","import { createSelector } from 'reselect';\r\nimport { IStore } from 'src/reducer';\r\nimport { IStoreStorage } from './types';\r\n\r\nexport const containerState = (state: IStore): IStoreStorage => state.storage;\r\nexport const storageItems = createSelector(containerState, (state) => state.items);\r\nexport const storagePager = createSelector(containerState, (state) => state.pager);\r\nexport const storageFilter = createSelector(containerState, (state) => state.filter);\r\nexport const storagePagerOptions = createSelector(containerState, (state) => state.pagerOptions);\r\n\r\nexport const isEmptySelector = createSelector(storageFilter, storageItems, (filter, items) => {\r\n  const { entryName } = filter;\r\n  return (!entryName || entryName.length === 0) && items.length === 0;\r\n});\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { IApiStorageItem } from 'src/lib/api/types';\r\nimport moment from 'moment';\r\nimport { useContainerPreviewKey } from 'src/containers/KeyPreview/hooks';\r\n\r\nexport interface IStorageTableItem {\r\n  expUnix: number;\r\n  activateUnix: number;\r\n  entry: {\r\n    name: string;\r\n    archivedAt: number | null;\r\n  };\r\n}\r\n\r\nexport interface IPropsStorageTable {\r\n  items: IApiStorageItem[];\r\n}\r\n\r\nconst StorageTable: React.FC<IPropsStorageTable> = (props) => {\r\n  const { items } = props;\r\n  const { handleOpenKeyPreview } = useHooks();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Id</TableCell>\r\n            <TableCell>Type</TableCell>\r\n            <TableCell>Algorithm</TableCell>\r\n            <TableCell>Entry name</TableCell>\r\n            <TableCell>Entry code</TableCell>\r\n            <TableCell>Status</TableCell>\r\n            <TableCell>Period</TableCell>\r\n            <TableCell align=\"center\">\r\n              Actions\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {items.map((item) => {\r\n            const now = moment();\r\n            const expMoment = moment.unix(item.expUnix);\r\n            const activateMoment = moment.unix(item.activateUnix);\r\n            const dateFormat = 'LL';\r\n\r\n            let currentStatus = '';\r\n\r\n            if (item.entry.archivedAt !== null) {\r\n              currentStatus = 'Archived';\r\n            } else if (Boolean(item.expUnix) && expMoment.isBefore(now)) {\r\n              currentStatus = 'Expired';\r\n            } else if (activateMoment.isAfter(now)) {\r\n              currentStatus = 'Awaiting';\r\n            } else {\r\n              currentStatus = 'Active';\r\n            }\r\n\r\n            return (\r\n              <TableRow key={item.key.kid}>\r\n                <TableCell>{item.key.kid}</TableCell>\r\n                <TableCell>{item.key.kty}</TableCell>\r\n                <TableCell>{item.key.alg}</TableCell>\r\n                <TableCell>{item.entry.name}</TableCell>\r\n                <TableCell>{item.entry.code}</TableCell>\r\n                <TableCell>{currentStatus}</TableCell>\r\n                <TableCell>\r\n                  {item.expUnix\r\n                    ? `${activateMoment.format(dateFormat)} - ${expMoment.format(dateFormat)}`\r\n                    : `Non-rotatable`}\r\n                </TableCell>\r\n                <TableCell align=\"center\" >\r\n                  <Grid container spacing={2} justify=\"center\">\r\n                    <Grid item>\r\n                      <IconButton size=\"small\" onClick={() => handleOpenKeyPreview(item.key.kid)}>\r\n                        <VisibilityIcon />\r\n                      </IconButton>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { openKeyPreview } = useContainerPreviewKey();\r\n\r\n  const handleOpenKeyPreview = useCallback(async (id: string) => {\r\n    await openKeyPreview({ id: parseInt(id) }, { format: 'jwk', privacy: 'public' });\r\n  }, [openKeyPreview]);\r\n\r\n  return {\r\n    handleOpenKeyPreview,\r\n  }\r\n}\r\n\r\nexport default StorageTable;\r\n","import { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { IApiParamsKeysStorage } from 'src/lib/api/keys/storage';\r\nimport { IApiPager } from 'src/lib/api/types';\r\nimport { useAppDispatch } from 'src/store';\r\nimport { actions as storageActions } from './reducer';\r\nimport * as storageSelectors from './selectors';\r\nimport { IStoreStorage } from './types';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useContainerStorage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const storagePager = useSelector(storageSelectors.storagePager);\r\n  const storageFilter = useSelector(storageSelectors.storageFilter);\r\n\r\n  const changePager = useCallback((pager: Partial<IApiPager>) => {\r\n    return dispatch(storageActions.changePager(pager));\r\n  }, [dispatch]);\r\n\r\n  const changeFilter = useCallback((filter: Partial<IStoreStorage['filter']>) => {\r\n    return dispatch(storageActions.changeFilter(filter));\r\n  }, [dispatch]);\r\n\r\n  const fetchStorageItems = useCallback(\r\n    (params: IApiParamsKeysStorage) => {\r\n      return dispatch(storageActions.fetchStorageItems(params));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const fetchStorageItemsWatcher = useCallback(() => {\r\n    const params = {\r\n      page: storagePager.page,\r\n      perPage: storagePager.perPage,\r\n      filter: storageFilter,\r\n    };\r\n    return fetchStorageItems(params);\r\n  }, [fetchStorageItems, storagePager.page, storagePager.perPage, storageFilter]);\r\n\r\n  return {\r\n    changePager,\r\n    changeFilter,\r\n    fetchStorageItems,\r\n    fetchStorageItemsWatcher,\r\n  };\r\n};\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TablePagination, Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport * as storageSelectors from 'src/containers/Storage/selectors';\r\nimport StorageTable from 'src/components/StorageTable';\r\nimport { useContainerStorage } from 'src/containers/Storage/hooks';\r\nimport SearchInput from 'src/components/SearchInput';\r\n\r\nconst StorageList: React.FC = () => {\r\n  const storageItems = useSelector(storageSelectors.storageItems);\r\n  const storageFilter = useSelector(storageSelectors.storageFilter);\r\n  const pagerOptions = useSelector(storageSelectors.storagePagerOptions);\r\n  const isEmpty = useSelector(storageSelectors.isEmptySelector);\r\n\r\n  const {\r\n    targetPage,\r\n    storagePager,\r\n    totalItems,\r\n    handlePagerChange,\r\n    handleChangePerPage,\r\n    handleChangeFilterEntryName,\r\n  } = useHooks();\r\n\r\n  if (totalItems === undefined) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      { !isEmpty &&\r\n        <Grid container item xs={12}>\r\n          <Grid item>\r\n            <SearchInput\r\n              placeholder={'Search by entry name'}\r\n              defaultValue={storageFilter.entryName}\r\n              onThrottledChange={handleChangeFilterEntryName}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      }\r\n      { isEmpty &&\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\">Storage is empty.</Typography>\r\n        </Grid>\r\n      }\r\n      {totalItems > 0 && (\r\n        <Grid item xs={12}>\r\n          <StorageTable items={storageItems} />\r\n        </Grid>\r\n      )}\r\n      {targetPage !== undefined && totalItems > 0 && (\r\n        <Grid item xs={12}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={totalItems}\r\n            page={targetPage - 1}\r\n            rowsPerPageOptions={pagerOptions}\r\n            onChangePage={handlePagerChange}\r\n            rowsPerPage={storagePager.perPage}\r\n            onChangeRowsPerPage={handleChangePerPage}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { changePager, changeFilter } = useContainerStorage();\r\n  const storagePager = useSelector(storageSelectors.storagePager);\r\n  const { totalItems, perPage, page } = storagePager;\r\n\r\n  const targetPage = useMemo(() => {\r\n    if (totalItems === undefined) {\r\n      return undefined;\r\n    }\r\n    const maxPage = Math.ceil(totalItems / perPage);\r\n    return Math.min(maxPage, page);\r\n  }, [totalItems, perPage, page]);\r\n\r\n  const handleChangeFilterEntryName = useCallback(\r\n    (val: string) => {\r\n      return changeFilter({ entryName: val });\r\n    },\r\n    [changeFilter],\r\n  );\r\n\r\n  const handlePagerChange = useCallback(\r\n    (_event: React.MouseEvent<HTMLButtonElement> | null, value: number) => {\r\n      return changePager({ page: value + 1 });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  const handleChangePerPage = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n      const val = parseInt(event.target.value, 10);\r\n      return changePager({ perPage: val });\r\n    },\r\n    [changePager],\r\n  );\r\n\r\n  return {\r\n    targetPage,\r\n    storagePager,\r\n    totalItems,\r\n    handlePagerChange,\r\n    handleChangeFilterEntryName,\r\n    handleChangePerPage,\r\n  };\r\n};\r\n\r\nexport default StorageList;\r\n","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport StorageList from 'src/components/StorageList';\r\nimport { KeyPreviewModal } from 'src/components/KeyPreview';\r\nimport { useContainerStorage } from 'src/containers/Storage/hooks';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    paddingTop: 24,\r\n    paddingBottom: 24,\r\n  }\r\n}));\r\n\r\nexport const StoragePage: React.FC = () => {\r\n  const styles = useStyles();\r\n  useHooks();\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <StorageList />\r\n      <KeyPreviewModal />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchStorageItemsWatcher } = useContainerStorage();\r\n\r\n  useEffect(() => {\r\n    const req = fetchStorageItemsWatcher();\r\n\r\n    return () => {\r\n      req.abort();\r\n    };\r\n  }, [fetchStorageItemsWatcher]);\r\n}\r\n\r\nexport default StoragePage;\r\n","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport KeysList from 'src/components/KeysList';\r\nimport { KeyPreviewModal } from 'src/components/KeyPreview';\r\nimport { useContainerKeys } from 'src/containers/Keys/hooks';\r\n\r\nexport const ArchivePage: React.FC = () => {\r\n  const styles = useStyles();\r\n  useHooks();\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <KeysList archive />\r\n      <KeyPreviewModal />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    flexGrow: 1,\r\n    paddingTop: 16,\r\n  }\r\n}));\r\n\r\nconst useHooks = () => {\r\n  const { fetchArchiveListWatch, resetList } = useContainerKeys();\r\n\r\n  useEffect(() => {\r\n    const req = fetchArchiveListWatch();\r\n    return () => {\r\n      req.abort();\r\n    };\r\n  }, [fetchArchiveListWatch]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      resetList();\r\n    };\r\n  }, [resetList]);\r\n}\r\n\r\nexport default ArchivePage;\r\n","/* eslint-disable react/display-name */\r\nimport React from 'react';\r\nimport { RouteConfig } from 'react-router-config';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { ROUTES } from 'src/constants/routes';\r\nimport AuthLayout from 'src/layouts/AuthLayout';\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport LoginForm from 'src/components/LoginForm';\r\nimport KeysPage from 'src/pages/KeysPage';\r\nimport AccountsPage from 'src/pages/AccountsPage';\r\nimport { ReposPage } from 'src/pages/ReposPage';\r\nimport { StoragePage } from 'src/pages/StoragePage';\r\nimport { ArchivePage } from './pages/ArchivePage';\r\n\r\nconst routes: RouteConfig[] = [\r\n  {\r\n    path: '/',\r\n    exact: true,\r\n    component: (): React.ReactElement => <Redirect to={ROUTES.KEYS} />,\r\n  },\r\n  {\r\n    path: ROUTES.AUTH,\r\n    component: AuthLayout,\r\n    routes: [\r\n      {\r\n        path: ROUTES.AUTH_LOGIN,\r\n        exact: true,\r\n        component: LoginForm,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: ROUTES.DASHBOARD,\r\n    component: DashboardLayout,\r\n    routes: [\r\n      {\r\n        path: ROUTES.KEYS,\r\n        component: KeysPage,\r\n      },\r\n      {\r\n        path: ROUTES.ACCOUNTS,\r\n        component: AccountsPage,\r\n      },\r\n      {\r\n        path: ROUTES.REPOS,\r\n        component: ReposPage,\r\n      },\r\n      {\r\n        path: ROUTES.STORAGE,\r\n        component: StoragePage,\r\n      },\r\n      {\r\n        path: ROUTES.ARCHIVE,\r\n        component: ArchivePage,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrap = styled.div`\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { isAlreadyFetched } from 'src/containers/Session/selectors';\r\nimport { useContainerSession } from 'src/containers/Session/hooks';\r\nimport * as S from './styles';\r\n\r\nconst StartScreen: React.FC = (props) => {\r\n  const isComplete = useSelector(isAlreadyFetched);\r\n  useHooks();\r\n\r\n  if (isComplete) {\r\n    return <>{props.children}</>;\r\n  }\r\n\r\n  return (\r\n    <S.Wrap>\r\n      <CircularProgress size={60} />\r\n    </S.Wrap>\r\n  );\r\n};\r\n\r\nconst useHooks = () => {\r\n  const { fetchMe } = useContainerSession();\r\n\r\n  useEffect(() => {\r\n    const req = fetchMe();\r\n    return () => {\r\n      req.abort();\r\n    }\r\n  }, [fetchMe]);\r\n};\r\n\r\nexport default StartScreen;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useLocation, Redirect } from 'react-router-dom';\r\n\r\nimport { IStore } from 'src/reducer';\r\nimport * as userStateSelectors from 'src/containers/Session/selectors';\r\n\r\nexport interface IPropsAuthGuard {}\r\n\r\nexport interface IConnectAuthGuard {\r\n  isUserAuthorized: boolean;\r\n}\r\n\r\nconst AuthGuard: React.FC<IPropsAuthGuard> = (props) => {\r\n  const location = useLocation();\r\n\r\n  const storeData = useSelector<IStore, IConnectAuthGuard>(\r\n    createStructuredSelector({\r\n      isUserAuthorized: userStateSelectors.isUserAuthorized,\r\n    }),\r\n  );\r\n\r\n  if (storeData.isUserAuthorized && location.pathname === '/auth/login') {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (!storeData.isUserAuthorized && location.pathname !== '/auth/login') {\r\n    return <Redirect to=\"/auth/login\" />;\r\n  }\r\n\r\n  return <>{props.children}</>;\r\n};\r\n\r\nexport default AuthGuard;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider as StoreProvider } from 'react-redux';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport { renderRoutes } from 'react-router-config';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport 'src/theme/global.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\n\r\nimport { store } from 'src/store';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\nimport StartScreen from './components/StartScreen';\r\nimport AuthGuard from './components/AuthGuard';\r\n\r\nconst targetNode = document.getElementById('root');\r\n\r\nif (targetNode) {\r\n  const history = createBrowserHistory();\r\n  ReactDOM.render(\r\n    <StoreProvider store={store}>\r\n      <CssBaseline />\r\n      <ThemeProvider theme={theme}>\r\n        <Router history={history}>\r\n          <StartScreen>\r\n            <AuthGuard>{renderRoutes(routes)}</AuthGuard>\r\n          </StartScreen>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </StoreProvider>,\r\n    targetNode,\r\n  );\r\n}\r\n"],"sourceRoot":""}